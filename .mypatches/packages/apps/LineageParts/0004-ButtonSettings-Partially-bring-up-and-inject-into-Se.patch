From a5ffb5ee3c0e1005c392079d2d9cca1ebe6fd22e Mon Sep 17 00:00:00 2001
From: Rashed Abdel-Tawab <rashed@linux.com>
Date: Sun, 8 Oct 2017 21:54:50 -0400
Subject: [PATCH 4/5] ButtonSettings: Partially bring up and inject into
 Settings

Change-Id: I00c39f20263cdb942e8ae7f13e2334c4b05500ef
---
 AndroidManifest.xml                                 | 21 +++++++--------------
 res/xml/button_settings.xml                         |  8 ++++++++
 .../lineageparts/input/ButtonSettings.java          | 14 ++++++++++----
 3 files changed, 25 insertions(+), 18 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 7933bde..c34aaf2 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -129,31 +129,24 @@
         </activity-alias>
         -->
 
-        <!-- Button settings (dashboard) -->
-        <!--
+        <!-- Button settings (System category) -->
         <activity-alias
             android:name=".input.ButtonSettings"
             android:label="@string/button_pref_title"
+            android:icon="@drawable/ic_settings_buttons"
             android:targetActivity="PartsActivity">
-            <intent-filter android:priority="1">
-                <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
+            <intent-filter android:priority="256">
+                <action android:name="org.lineageos.lineageparts.action.SETTINGS" />
                 <action android:name="org.lineageos.lineageparts.BUTTON_SETTINGS" />
                 <category android:name="android.intent.category.DEFAULT" />
             </intent-filter>
             <meta-data
                 android:name="com.android.settings.category"
-                android:value="com.android.settings.category.device" />
-            <meta-data
-                android:name="com.android.settings.icon"
-                android:resource="@drawable/ic_settings_buttons" />
-            <meta-data
-                android:name="org.lineageos.settings.summary.receiver"
-                android:value="org.lineageos.lineageparts.PartsUpdater" />
+                android:value="com.android.settings.category.ia.system" />
             <meta-data
-                android:name="org.lineageos.settings.summary.key"
-                android:value="button_settings" />
+                android:name="com.android.settings.summary"
+                android:resource="@string/summary_empty" />
         </activity-alias>
-        -->
 
         <!--
         <activity android:name=".gestures.KeyHandler" />
diff --git a/res/xml/button_settings.xml b/res/xml/button_settings.xml
index 2ff6989..2d295b6 100644
--- a/res/xml/button_settings.xml
+++ b/res/xml/button_settings.xml
@@ -19,11 +19,13 @@
         android:key="button_settings"
         android:title="@string/button_pref_title">
 
+    <!--
     <SwitchPreference
         android:key="disable_nav_keys"
         android:title="@string/disable_navkeys_title"
         android:summary="@string/disable_navkeys_summary"
         android:defaultValue="false" />
+    -->
 
     <!--
     <org.lineageos.lineageparts.input.ButtonBacklightBrightness
@@ -33,6 +35,7 @@
         android:persistent="false" />
     -->
 
+    <!--
     <PreferenceCategory
         android:key="navigation_bar_category"
         android:title="@string/navigation_bar_category" >
@@ -78,6 +81,7 @@
             android:persistent="false" />
 
     </PreferenceCategory>
+    -->
 
     <PreferenceCategory
         android:key="power_key"
@@ -88,6 +92,7 @@
             android:title="@string/power_menu_title"
             android:fragment="org.lineageos.lineageparts.input.PowerMenuActions" />
 
+        <!--
         <SwitchPreference
             android:key="power_end_call"
             android:title="@string/power_end_call_title"
@@ -109,9 +114,11 @@
             android:entryValues="@array/torch_long_press_power_timeout_values"
             android:dependency="torch_long_press_power_gesture"
             android:persistent="false" />
+        -->
 
     </PreferenceCategory>
 
+    <!--
     <PreferenceCategory
         android:key="home_key"
         android:title="@string/hardware_keys_home_key_title" >
@@ -301,6 +308,7 @@
             android:title="@string/swap_volume_buttons_title"
             android:summary="@string/swap_volume_buttons_summary" />
     </PreferenceCategory>
+    -->
 
     <PreferenceCategory
         android:key="extras_category"
diff --git a/src/org/lineageos/lineageparts/input/ButtonSettings.java b/src/org/lineageos/lineageparts/input/ButtonSettings.java
index 92ef78e..cb92f89 100644
--- a/src/org/lineageos/lineageparts/input/ButtonSettings.java
+++ b/src/org/lineageos/lineageparts/input/ButtonSettings.java
@@ -52,7 +52,6 @@ import java.util.List;
 import lineageos.hardware.LineageHardwareManager;
 import lineageos.providers.LineageSettings;
 
-/*
 public class ButtonSettings extends SettingsPreferenceFragment implements
         Preference.OnPreferenceChangeListener {
     private static final String TAG = "SystemSettings";
@@ -171,6 +170,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         final ContentResolver resolver = getActivity().getContentResolver();
         final PreferenceScreen prefScreen = getPreferenceScreen();
 
+        /*
         final int deviceKeys = getResources().getInteger(
                 com.android.internal.R.integer.config_deviceHardwareKeys);
         final int deviceWakeKeys = getResources().getInteger(
@@ -192,7 +192,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         final boolean showAppSwitchWake = (deviceWakeKeys & KEY_MASK_APP_SWITCH) != 0;
         final boolean showCameraWake = (deviceWakeKeys & KEY_MASK_CAMERA) != 0;
         final boolean showVolumeWake = (deviceWakeKeys & KEY_MASK_VOLUME) != 0;
-
+        */
         boolean hasAnyBindableKey = false;
         final PreferenceCategory powerCategory =
                 (PreferenceCategory) prefScreen.findPreference(CATEGORY_POWER);
@@ -221,7 +221,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                 LineageSettings.System.TORCH_LONG_PRESS_POWER_TIMEOUT, 0);
         mTorchLongPressPowerTimeout = initList(KEY_TORCH_LONG_PRESS_POWER_TIMEOUT,
                 torchLongPressPowerTimeout);
-
+        /*
         // Home button answers calls.
         mHomeAnswerCall = (SwitchPreference) findPreference(KEY_HOME_ANSWER_CALL);
 
@@ -461,6 +461,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                 mCameraSleepOnRelease.setDependency(LineageSettings.System.CAMERA_WAKE_SCREEN);
             }
         }
+        */
         mVolumeWakeScreen = (SwitchPreference) findPreference(LineageSettings.System.VOLUME_WAKE_SCREEN);
         mVolumeMusicControls = (SwitchPreference) findPreference(KEY_VOLUME_MUSIC_CONTROLS);
 
@@ -472,6 +473,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         }
     }
 
+    /*
     @Override
     public void onResume() {
         super.onResume();
@@ -496,6 +498,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             mHomeAnswerCall.setChecked(homeButtonAnswersCall);
         }
     }
+    */
 
     private ListPreference initList(String key, Action value) {
         return initList(key, value.ordinal());
@@ -625,6 +628,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             handleListChange(mAppSwitchLongPressAction, newValue,
                     LineageSettings.System.KEY_APP_SWITCH_LONG_PRESS_ACTION);
             return true;
+        /*
         } else if (preference == mVolumeKeyCursorControl) {
             handleSystemListChange(mVolumeKeyCursorControl, newValue,
                     Settings.System.VOLUME_KEY_CURSOR_CONTROL);
@@ -643,6 +647,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             LineageSettings.Secure.putString(getContentResolver(),
                     LineageSettings.Secure.RECENTS_LONG_PRESS_ACTIVITY, putString);
             return true;
+        */
         } else if (preference == mTorchLongPressPowerTimeout) {
             handleListChange(mTorchLongPressPowerTimeout, newValue,
                     LineageSettings.System.TORCH_LONG_PRESS_POWER_TIMEOUT);
@@ -651,6 +656,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         return false;
     }
 
+    /*
     private static void writeDisableNavkeysOption(Context context, boolean enabled) {
         LineageSettings.Global.putInt(context.getContentResolver(),
                 LineageSettings.Global.DEV_FORCE_SHOW_NAVBAR, enabled ? 1 : 0);
@@ -775,5 +781,5 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                         ? LineageSettings.Secure.RING_HOME_BUTTON_BEHAVIOR_ANSWER
                         : LineageSettings.Secure.RING_HOME_BUTTON_BEHAVIOR_DO_NOTHING));
     }
+    */
 }
-*/
-- 
2.7.4

