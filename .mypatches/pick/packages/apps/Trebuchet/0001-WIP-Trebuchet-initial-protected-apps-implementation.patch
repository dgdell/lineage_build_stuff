From 2a36c2639e3986833097196b1da9ddcb29f55bfe Mon Sep 17 00:00:00 2001
From: Joey <joey@lineageos.org>
Date: Thu, 26 Apr 2018 10:45:25 +0200
Subject: [PATCH] [WIP] Trebuchet: initial protected apps implementation

Change-Id: If8b1e126a92b393b9f493925746a6f53a574805d
Signed-off-by: Joey <joey@lineageos.org>
---
 AndroidManifest.xml                           |   6 +
 proguard.flags                                |   4 +
 res/drawable/avd_protected_lock.xml           |  53 ++++++
 res/drawable/avd_protected_unlock.xml         |  53 ++++++
 res/drawable/ic_protected_locked.xml          |   9 +
 res/drawable/ic_protected_unlocked.xml        |   9 +
 res/drawable/ic_settings_trust.xml            |  26 +++
 .../activity_protected_apps_manager.xml       |  47 +++++
 res/layout/item_protected_app.xml             |  29 +++
 res/values/config.xml                         |   2 +-
 res/values/lineage_strings.xml                |   6 +
 res/xml/launcher_quick_preferences.xml        |   8 +-
 src/com/android/launcher3/Launcher.java       |   1 +
 .../launcher3/QuickSettingsActivity.java      |  12 ++
 .../protect/ProtectedAppsAdapter.java         |  88 +++++++++
 .../protect/ProtectedAppsFilter.java          |  19 ++
 .../launcher3/protect/ProtectedComponent.java |  18 ++
 .../protect/ProtectedDatabaseHelper.java      |  80 ++++++++
 .../protect/ProtectedManagerActivity.java     | 172 ++++++++++++++++++
 19 files changed, 640 insertions(+), 2 deletions(-)
 create mode 100644 res/drawable/avd_protected_lock.xml
 create mode 100644 res/drawable/avd_protected_unlock.xml
 create mode 100644 res/drawable/ic_protected_locked.xml
 create mode 100644 res/drawable/ic_protected_unlocked.xml
 create mode 100644 res/drawable/ic_settings_trust.xml
 create mode 100644 res/layout/activity_protected_apps_manager.xml
 create mode 100644 res/layout/item_protected_app.xml
 create mode 100644 src/com/android/launcher3/protect/ProtectedAppsAdapter.java
 create mode 100644 src/com/android/launcher3/protect/ProtectedAppsFilter.java
 create mode 100644 src/com/android/launcher3/protect/ProtectedComponent.java
 create mode 100644 src/com/android/launcher3/protect/ProtectedDatabaseHelper.java
 create mode 100644 src/com/android/launcher3/protect/ProtectedManagerActivity.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index d74a88372..320b4ac8b 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -175,5 +175,11 @@
             android:autoRemoveFromRecents="true"
             android:label="@string/settings_button_text"
             android:theme="@style/QuickSettingsTheme" />
+
+        <activity
+            android:name=".protect.ProtectedManagerActivity"
+            android:label="@string/protected_apps_manager_name"
+            android:theme="@android:style/Theme.DeviceDefault.Settings"
+            android:autoRemoveFromRecents="true" />
     </application>
 </manifest>
diff --git a/proguard.flags b/proguard.flags
index 37db545e5..b41b68d80 100644
--- a/proguard.flags
+++ b/proguard.flags
@@ -116,3 +116,7 @@
 -keep class com.android.launcher3.graphics.** {
  *;
 }
+
+-keep class com.android.launcher3.protect.** {
+ *;
+}
\ No newline at end of file
diff --git a/res/drawable/avd_protected_lock.xml b/res/drawable/avd_protected_lock.xml
new file mode 100644
index 000000000..24db144f9
--- /dev/null
+++ b/res/drawable/avd_protected_lock.xml
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2017 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+     
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<animated-vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt">
+    <aapt:attr name="android:drawable">
+        <vector
+            android:width="24dp"
+            android:height="24dp"
+            android:alpha="1"
+            android:viewportHeight="24"
+            android:viewportWidth="24">
+            <path
+                android:name="lock"
+                android:fillColor="?android:attr/textColorSecondary"
+                android:pathData="M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z" />
+            <group
+                android:name="group"
+                android:pivotX="8"
+                android:pivotY="6">
+                <path
+                    android:name="line"
+                    android:fillColor="?android:attr/textColorSecondary"
+                    android:pathData="M 7, 6 L 9, 6 L 9, 8 L 7, 8 L 7, 6" />
+            </group>
+        </vector>
+    </aapt:attr>
+    <target android:name="group">
+        <aapt:attr name="android:animation">
+            <objectAnimator
+                android:name="group"
+                android:duration="350"
+                android:interpolator="@android:anim/accelerate_decelerate_interpolator"
+                android:propertyName="scaleY"
+                android:valueFrom="0"
+                android:valueTo="1"
+                android:valueType="floatType" />
+        </aapt:attr>
+    </target>
+</animated-vector>
diff --git a/res/drawable/avd_protected_unlock.xml b/res/drawable/avd_protected_unlock.xml
new file mode 100644
index 000000000..22a3d3112
--- /dev/null
+++ b/res/drawable/avd_protected_unlock.xml
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2017 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<animated-vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt">
+    <aapt:attr name="android:drawable">
+        <vector
+            android:width="24dp"
+            android:height="24dp"
+            android:alpha="1"
+            android:viewportHeight="24"
+            android:viewportWidth="24">
+            <path
+                android:name="lock"
+                android:fillColor="?android:attr/textColorSecondary"
+                android:pathData="M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,1 10,15A2,2 0 0,1 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17Z" />
+            <group
+                android:name="group"
+                android:pivotX="8"
+                android:pivotY="6">
+                <path
+                    android:name="line"
+                    android:fillColor="?android:attr/textColorSecondary"
+                    android:pathData="M 7, 6 L 9, 6 L 9, 8 L 7, 8 L 7, 6" />
+            </group>
+        </vector>
+    </aapt:attr>
+    <target android:name="group">
+        <aapt:attr name="android:animation">
+            <objectAnimator
+                android:name="group"
+                android:duration="350"
+                android:interpolator="@android:anim/accelerate_decelerate_interpolator"
+                android:propertyName="scaleY"
+                android:valueFrom="1"
+                android:valueTo="0"
+                android:valueType="floatType" />
+        </aapt:attr>
+    </target>
+</animated-vector>
diff --git a/res/drawable/ic_protected_locked.xml b/res/drawable/ic_protected_locked.xml
new file mode 100644
index 000000000..ddb7d88a6
--- /dev/null
+++ b/res/drawable/ic_protected_locked.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="?android:attr/textColorSecondary"
+        android:pathData="M12,17c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM18,8h-1L17,6c0,-2.76 -2.24,-5 -5,-5S7,3.24 7,6v2L6,8c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2L20,10c0,-1.1 -0.9,-2 -2,-2zM8.9,6c0,-1.71 1.39,-3.1 3.1,-3.1s3.1,1.39 3.1,3.1v2L8.9,8L8.9,6zM18,20L6,20L6,10h12v10z"/>
+</vector>
diff --git a/res/drawable/ic_protected_unlocked.xml b/res/drawable/ic_protected_unlocked.xml
new file mode 100644
index 000000000..4286671c8
--- /dev/null
+++ b/res/drawable/ic_protected_unlocked.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="?android:attr/textColorSecondary"
+        android:pathData="M12,17c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM18,8h-1L17,6c0,-2.76 -2.24,-5 -5,-5S7,3.24 7,6h1.9c0,-1.71 1.39,-3.1 3.1,-3.1 1.71,0 3.1,1.39 3.1,3.1v2L6,8c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2L20,10c0,-1.1 -0.9,-2 -2,-2zM18,20L6,20L6,10h12v10z"/>
+</vector>
diff --git a/res/drawable/ic_settings_trust.xml b/res/drawable/ic_settings_trust.xml
new file mode 100644
index 000000000..4d36f0f67
--- /dev/null
+++ b/res/drawable/ic_settings_trust.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2018 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="@dimen/settings_icon_size"
+    android:height="@dimen/settings_icon_size"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="@color/settings_icons"
+        android:pathData="M5,3L19,3C20.105,3 21,3.895 21,5L21,12C21,16.971 16.971,21 12,21C7.029,21 3,16.971 3,12L3,5C3,3.895 3.895,3 5,3ZM18.902,13.168C18.994,12.624 18.627,12.108 18.082,12.016C17.538,11.925 17.022,12.292 16.93,12.837C16.528,15.225 14.45,17 12,17C9.55,17 7.472,15.226 7.069,12.838C6.978,12.294 6.462,11.927 5.917,12.018C5.373,12.11 5.005,12.626 5.097,13.171C5.661,16.517 8.57,19 12,19C15.43,19 18.339,16.516 18.902,13.168ZM11.046,5.698L9.127,11.297C9.045,11.516 9,11.753 9,12C9,13.104 9.895,14 11,14C11.01,14 11.019,14 11.029,14L13,14C13.55,14 14.05,13.78 14.41,13.41C14.78,13.05 15,12.55 15,12L12.6,12L11,11.999L11.438,10.724L11.646,10.116L12.938,6.346C12.978,6.238 13,6.121 13,6C13,5.448 12.552,5 12,5C11.553,5 11.174,5.293 11.046,5.698Z" />
+</vector>
\ No newline at end of file
diff --git a/res/layout/activity_protected_apps_manager.xml b/res/layout/activity_protected_apps_manager.xml
new file mode 100644
index 000000000..b01ee967b
--- /dev/null
+++ b/res/layout/activity_protected_apps_manager.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2018 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/protected_apps_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone" />
+
+    <LinearLayout
+        android:id="@+id/protected_apps_loading"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:orientation="vertical">
+
+        <ProgressBar
+            android:layout_width="56dp"
+            android:layout_height="56dp" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="@string/protected_apps_loading"
+            android:textSize="16sp" />
+    </LinearLayout>
+</LinearLayout>
diff --git a/res/layout/item_protected_app.xml b/res/layout/item_protected_app.xml
new file mode 100644
index 000000000..602749752
--- /dev/null
+++ b/res/layout/item_protected_app.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="64dp">
+
+    <ImageView
+        android:id="@+id/item_protected_app_icon"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_centerVertical="true"
+        android:layout_marginStart="16dp" />
+
+    <ImageView
+        android:id="@+id/item_protected_app_switch"
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_alignParentEnd="true"
+        android:layout_centerVertical="true"
+        android:layout_marginEnd="16dp" />
+
+    <TextView
+        android:id="@+id/item_protected_app_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@id/item_protected_app_switch"
+        android:layout_centerVertical="true"
+        android:layout_marginEnd="56dp"
+        android:layout_marginStart="72dp" />
+</RelativeLayout>
diff --git a/res/values/config.xml b/res/values/config.xml
index f87d7a839..0b21bbd1f 100644
--- a/res/values/config.xml
+++ b/res/values/config.xml
@@ -102,7 +102,7 @@
 
     <!-- Name of a subclass of com.android.launcher3.AppFilter used to
          filter the activities shown in the launcher. Can be empty. -->
-    <string name="app_filter_class" translatable="false"></string>
+    <string name="app_filter_class" translatable="false">com.android.launcher3.protect.ProtectedAppsFilter</string>
 
     <!-- Name of an icon provider class. -->
     <string name="icon_provider_class" translatable="false">com.android.launcher3.icons.CustomIconsProvider</string>
diff --git a/res/values/lineage_strings.xml b/res/values/lineage_strings.xml
index 980de5da3..024b63f63 100644
--- a/res/values/lineage_strings.xml
+++ b/res/values/lineage_strings.xml
@@ -75,4 +75,10 @@
     <string name="settings_edit_allow_summary_on">Icons and widgets can be added, removed and moved on the homescreen</string>
     <string name="settings_edit_allow_summary_off">Icons and widgets can\'t be added, removed and moved on the homescreen</string>
     <string name="settings_edit_widgets_error">It\'s not possible to add widgets to the home screen</string>
+
+    <!-- Protected apps -->
+    <string name="protected_apps_manager_name">Protected apps</string>
+    <string name="protected_apps_auth_manager">Unlock to manage the protected apps</string>
+    <string name="protected_apps_loading">Loading\u2026</string>
+    <string name="protected_apps_no_lock_error">Please set up a secure lock screen to restrict access</string>
 </resources>
diff --git a/res/xml/launcher_quick_preferences.xml b/res/xml/launcher_quick_preferences.xml
index 559e7825a..310acf36d 100644
--- a/res/xml/launcher_quick_preferences.xml
+++ b/res/xml/launcher_quick_preferences.xml
@@ -1,4 +1,5 @@
-<?xml version="1.0" encoding="utf-8"?><!-- Copyright (C) 2015 Google Inc.
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 the LineageOS project.
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -22,6 +23,11 @@
         android:icon="@drawable/ic_settings_grid"
         android:title="@string/grid_size_text" />
 
+    <Preference
+        android:key="pref_protected_apps"
+        android:title="@string/protected_apps_manager_name"
+        android:icon="@drawable/ic_settings_trust" />
+
     <Preference
         android:key="pref_icon_pack"
         android:title="@string/icon_pack_title" />
diff --git a/src/com/android/launcher3/Launcher.java b/src/com/android/launcher3/Launcher.java
index 9d85a64b9..dfdff5d7e 100644
--- a/src/com/android/launcher3/Launcher.java
+++ b/src/com/android/launcher3/Launcher.java
@@ -2516,6 +2516,7 @@ public class Launcher extends BaseActivity
             PromiseAppInfo promiseAppInfo = (PromiseAppInfo) item;
             intent = promiseAppInfo.getMarketIntent();
         } else {
+            // TODO LINEAGE: check if protected
             intent = item.getIntent();
         }
         if (intent == null) {
diff --git a/src/com/android/launcher3/QuickSettingsActivity.java b/src/com/android/launcher3/QuickSettingsActivity.java
index 0304ccb05..216210027 100644
--- a/src/com/android/launcher3/QuickSettingsActivity.java
+++ b/src/com/android/launcher3/QuickSettingsActivity.java
@@ -19,6 +19,8 @@ import android.view.View;
 import android.widget.NumberPicker;
 
 import com.android.launcher3.icons.IconsHandler;
+import com.android.launcher3.protect.ProtectedAppsAdapter;
+import com.android.launcher3.protect.ProtectedManagerActivity;
 
 public class QuickSettingsActivity extends AppCompatActivity {
     private static final String KEY_GRID_SIZE = "pref_grid_size";
@@ -81,6 +83,16 @@ public class QuickSettingsActivity extends AppCompatActivity {
                 mGridPref.setSummary(mPrefs.getString(KEY_GRID_SIZE, getDefaulGridSize()));
             }
 
+            Preference protectedApps = findPreference("pref_protected_apps");
+            if (protectedApps != null) {
+                protectedApps.setOnPreferenceClickListener(preference -> {
+                    Intent intent = new Intent(getActivity(), ProtectedManagerActivity.class);
+                    getActivity().startActivity(intent);
+                    getActivity().finish();
+                    return true;
+                });
+            }
+
             Preference more = findPreference("pref_more");
             if (more != null) {
                 more.setOnPreferenceClickListener(preference -> {
diff --git a/src/com/android/launcher3/protect/ProtectedAppsAdapter.java b/src/com/android/launcher3/protect/ProtectedAppsAdapter.java
new file mode 100644
index 000000000..ed5ab5795
--- /dev/null
+++ b/src/com/android/launcher3/protect/ProtectedAppsAdapter.java
@@ -0,0 +1,88 @@
+package com.android.launcher3.protect;
+
+import android.graphics.drawable.AnimatedVectorDrawable;
+import android.graphics.drawable.Drawable;
+import android.support.annotation.NonNull;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.android.launcher3.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ProtectedAppsAdapter extends
+        RecyclerView.Adapter<ProtectedAppsAdapter.ProtectedAppViewHolder> {
+    private List<ProtectedComponent> mComponents = new ArrayList<>();
+    private final IProtectedApp mOnItemChangeListener;
+
+    ProtectedAppsAdapter(IProtectedApp listener) {
+        mOnItemChangeListener = listener;
+    }
+
+    void updateAppList(List<ProtectedComponent> components) {
+        mComponents = components;
+        notifyDataSetChanged();
+    }
+
+    @NonNull
+    @Override
+    public ProtectedAppViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        return new ProtectedAppViewHolder(LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_protected_app, parent, false));
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ProtectedAppViewHolder holder, int position) {
+        holder.bind(mComponents.get(position));
+    }
+
+    @Override
+    public int getItemCount() {
+        return mComponents.size();
+    }
+
+    class ProtectedAppViewHolder extends RecyclerView.ViewHolder {
+        private View mView;
+        private ImageView mAppIcon;
+        private TextView mAppLabel;
+        private ImageView mProtectedSwitch;
+
+        ProtectedAppViewHolder(View itemView) {
+            super(itemView);
+            mView = itemView;
+            mAppIcon = itemView.findViewById(R.id.item_protected_app_icon);
+            mAppLabel = itemView.findViewById(R.id.item_protected_app_title);
+            mProtectedSwitch = itemView.findViewById(R.id.item_protected_app_switch);
+        }
+
+        void bind(ProtectedComponent component) {
+            mAppIcon.setImageDrawable(component.icon);
+            mAppLabel.setText(component.label);
+
+            mProtectedSwitch.setImageResource(component.isProtected ?
+                R.drawable.ic_protected_locked : R.drawable.ic_protected_unlocked);
+
+            mView.setOnClickListener(v -> {
+                component.isProtected = !component.isProtected;
+
+                mProtectedSwitch.setImageResource(component.isProtected ?
+                        R.drawable.avd_protected_lock : R.drawable.avd_protected_unlock);
+                AnimatedVectorDrawable avd = (AnimatedVectorDrawable)
+                        mProtectedSwitch.getDrawable();
+                avd.start();
+
+                mOnItemChangeListener.onItemChanged(component.packageName, component.isProtected);
+            });
+        }
+    }
+
+    public interface IProtectedApp {
+        void onItemChanged(String packageName, boolean isNowHidden);
+    }
+}
diff --git a/src/com/android/launcher3/protect/ProtectedAppsFilter.java b/src/com/android/launcher3/protect/ProtectedAppsFilter.java
new file mode 100644
index 000000000..429bcb40f
--- /dev/null
+++ b/src/com/android/launcher3/protect/ProtectedAppsFilter.java
@@ -0,0 +1,19 @@
+package com.android.launcher3.protect;
+
+import android.content.ComponentName;
+import android.content.Context;
+
+import com.android.launcher3.AppFilter;
+
+public class ProtectedAppsFilter extends AppFilter {
+    private ProtectedDatabaseHelper mDbHelper;
+
+    public ProtectedAppsFilter(Context context) {
+        mDbHelper = ProtectedDatabaseHelper.getInstance(context);
+    }
+
+    @Override
+    public boolean shouldShowApp(ComponentName app) {
+        return !mDbHelper.isPackageProtected(app.getPackageName());
+    }
+}
diff --git a/src/com/android/launcher3/protect/ProtectedComponent.java b/src/com/android/launcher3/protect/ProtectedComponent.java
new file mode 100644
index 000000000..55edd2811
--- /dev/null
+++ b/src/com/android/launcher3/protect/ProtectedComponent.java
@@ -0,0 +1,18 @@
+package com.android.launcher3.protect;
+
+import android.graphics.drawable.Drawable;
+
+class ProtectedComponent {
+    String packageName;
+    Drawable icon;
+    String label;
+    boolean isProtected;
+
+    ProtectedComponent(String packageName, Drawable icon, String label,
+                              boolean isProtected) {
+        this.packageName = packageName;
+        this.icon = icon;
+        this.label = label;
+        this.isProtected = isProtected;
+    }
+}
diff --git a/src/com/android/launcher3/protect/ProtectedDatabaseHelper.java b/src/com/android/launcher3/protect/ProtectedDatabaseHelper.java
new file mode 100644
index 000000000..b7c5797aa
--- /dev/null
+++ b/src/com/android/launcher3/protect/ProtectedDatabaseHelper.java
@@ -0,0 +1,80 @@
+package com.android.launcher3.protect;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+import android.support.annotation.NonNull;
+
+public final class ProtectedDatabaseHelper extends SQLiteOpenHelper {
+    private static final int DATABASE_VERSION = 1;
+    private static final String DATABASE_NAME = "protected_apps_db";
+
+    private static final String TABLE_NAME = "protected_apps";
+    private static final String KEY_UID = "uid";
+    private static final String KEY_PKGNAME = "pkgname";
+
+    private static final String CMD_CREATE_TABLE = "CREATE TABLE %1$s " +
+            "(%2$s INTEGER PRIMARY KEY AUTOINCREMENT, %3$s TEXT);";
+    private static final String CMD_LOOK_FOR_PKG = "SELECT * FROM %1$s WHERE %2$s = \'%3$s\'";
+    private static final String CMD_DELETE_PKG = "DELETE FROM %1$s WHERE %2$s = \'%3$s\'";
+
+    private static ProtectedDatabaseHelper sInstance = null;
+
+    private ProtectedDatabaseHelper(Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    public static ProtectedDatabaseHelper getInstance(Context context) {
+        if (sInstance == null) {
+            sInstance = new ProtectedDatabaseHelper(context);
+        }
+
+        return sInstance;
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(String.format(CMD_CREATE_TABLE, TABLE_NAME, KEY_UID, KEY_PKGNAME));
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+    }
+
+    public void addApp(@NonNull String packageName) {
+        if (isPackageProtected(packageName)) {
+            return;
+        }
+
+        SQLiteDatabase db = getWritableDatabase();
+        ContentValues values = new ContentValues();
+
+        values.put(KEY_PKGNAME, packageName);
+        db.insert(TABLE_NAME, null, values);
+        db.close();
+    }
+
+    public void removeApp(@NonNull String packageName) {
+        if (!isPackageProtected(packageName)) {
+            return;
+        }
+
+        SQLiteDatabase db = getWritableDatabase();
+        db.execSQL(String.format(CMD_DELETE_PKG, TABLE_NAME, KEY_PKGNAME, packageName));
+        db.close();
+    }
+
+    public boolean isPackageProtected(@NonNull String packageName) {
+        String query = String.format(CMD_LOOK_FOR_PKG, TABLE_NAME, KEY_PKGNAME, packageName);
+        SQLiteDatabase db = getReadableDatabase();
+        Cursor cursor = db.rawQuery(query, null);
+        boolean result = cursor.getCount() != 0;
+
+        cursor.close();
+        db.close();
+
+        return result;
+    }
+}
\ No newline at end of file
diff --git a/src/com/android/launcher3/protect/ProtectedManagerActivity.java b/src/com/android/launcher3/protect/ProtectedManagerActivity.java
new file mode 100644
index 000000000..c8ba98990
--- /dev/null
+++ b/src/com/android/launcher3/protect/ProtectedManagerActivity.java
@@ -0,0 +1,172 @@
+package com.android.launcher3.protect;
+
+import android.app.Activity;
+import android.app.KeyguardManager;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v7.widget.DefaultItemAnimator;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.Toast;
+
+import com.android.launcher3.Launcher;
+import com.android.launcher3.LauncherAppState;
+import com.android.launcher3.LauncherModel;
+import com.android.launcher3.R;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.TimeoutException;
+
+public class ProtectedManagerActivity extends Activity implements
+        ProtectedAppsAdapter.IProtectedApp {
+    private static final int REQUEST_AUTH_CODE = 92;
+
+    private RecyclerView mRecyclerView;
+    private LinearLayout mLoadingLayout;
+
+    private ProtectedAppsAdapter mAdapter;
+    private ProtectedDatabaseHelper mDbHelper;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstance) {
+        super.onCreate(savedInstance);
+
+        setContentView(R.layout.activity_protected_apps_manager);
+        mRecyclerView = findViewById(R.id.protected_apps_list);
+        mLoadingLayout = findViewById(R.id.protected_apps_loading);
+
+        mAdapter = new ProtectedAppsAdapter(this);
+        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));
+        mRecyclerView.setItemAnimator(new DefaultItemAnimator());
+        mRecyclerView.setAdapter(mAdapter);
+
+        mDbHelper = ProtectedDatabaseHelper.getInstance(this);
+
+        authenticate();
+    }
+
+    @Override
+    public void onPause() {
+        LauncherAppState state = LauncherAppState.getInstanceNoCreate();
+        if (state != null) {
+            state.getModel().forceReload();
+        }
+
+        super.onPause();
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (requestCode != REQUEST_AUTH_CODE || resultCode != Activity.RESULT_OK) {
+            return;
+        }
+
+        showUi();
+    }
+
+    @Override
+    public void onItemChanged(String packageName, boolean isNowHidden) {
+        if (isNowHidden) {
+            mDbHelper.addApp(packageName);
+        } else {
+            mDbHelper.removeApp(packageName);
+        }
+    }
+
+    private void authenticate() {
+        String title = getString(R.string.protected_apps_manager_name);
+        String message = getString(R.string.protected_apps_auth_manager);
+
+        KeyguardManager manager = getSystemService(KeyguardManager.class);
+        if (manager == null) {
+            finish();
+            return;
+        }
+
+        Intent intent = manager.createConfirmDeviceCredentialIntent(title, message);
+        if (intent == null) {
+            Toast.makeText(this, R.string.protected_apps_no_lock_error, Toast.LENGTH_LONG)
+                    .show();
+            showUi();
+            return;
+        }
+        startActivityForResult(intent, REQUEST_AUTH_CODE);
+    }
+
+    private void showUi() {
+        PackageManager manager = getPackageManager();
+
+        try {
+            if (manager == null) {
+                throw new NullPointerException("packageManager is null");
+            }
+
+            LoadComponentsTask task = new LoadComponentsTask(mDbHelper, manager);
+            task.execute();
+
+            List<ProtectedComponent> components = task.get();
+            mAdapter.updateAppList(components);
+            mLoadingLayout.setVisibility(View.GONE);
+            mRecyclerView.setVisibility(View.VISIBLE);
+        } catch (NullPointerException | ExecutionException | InterruptedException e) {
+            finish();
+        }
+    }
+
+    static class LoadComponentsTask extends AsyncTask<Void, Void,
+            List<ProtectedComponent>> {
+        @NonNull
+        private ProtectedDatabaseHelper mDbHelper;
+        @NonNull
+        private PackageManager mPackageManager;
+
+        LoadComponentsTask(@NonNull ProtectedDatabaseHelper dbHelper,
+                           @NonNull PackageManager packageManager) {
+            mDbHelper = dbHelper;
+            mPackageManager = packageManager;
+        }
+
+        @Override
+        public List<ProtectedComponent> doInBackground(Void... args) {
+            Intent filter = new Intent(Intent.ACTION_MAIN, null);
+            filter.addCategory(Intent.CATEGORY_LAUNCHER);
+
+            List<ResolveInfo> apps = mPackageManager.queryIntentActivities(filter,
+                    PackageManager.GET_META_DATA);
+            List<ProtectedComponent> components = new ArrayList<>();
+
+            for (ResolveInfo info : apps) {
+                try {
+                    String packageName = info.activityInfo.packageName;
+                    String appLabel = mPackageManager.getApplicationLabel(
+                            mPackageManager.getApplicationInfo(packageName,
+                                    PackageManager.GET_META_DATA)).toString();
+
+                    components.add(new ProtectedComponent(
+                            packageName,
+                            info.loadIcon(mPackageManager),
+                            appLabel,
+                            mDbHelper.isPackageProtected(packageName)));
+                } catch (PackageManager.NameNotFoundException ignored) {
+                }
+            }
+
+            Collections.sort(components, (a, b) -> a.label.compareTo(b.label));
+
+            return components;
+        }
+    }
+}
-- 
2.17.1

