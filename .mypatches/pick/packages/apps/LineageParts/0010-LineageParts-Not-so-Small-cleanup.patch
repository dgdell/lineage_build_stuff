From 27d65577a33edbeb458f0ee5dce55f0b7cad7d87 Mon Sep 17 00:00:00 2001
From: Michael W <baddaemon87@gmail.com>
Date: Fri, 3 Aug 2018 20:38:47 +0200
Subject: [PATCH 10/11] LineageParts: (Not-so-)Small cleanup

* Remove unused imports
* Fix a few line length issues
* Convert a few anonymous classes to lambda expressions
* Convert a few global vars to locals
* Remove unused methods
* Add copyrights to changed files

Change-Id: I3187f135796b1a6a55de64defe7ef642396aadba

# Conflicts:
#	src/org/lineageos/lineageparts/livedisplay/LiveDisplaySettings.java
#	src/org/lineageos/lineageparts/notificationlight/NotificationLightSettings.java
---
 .../lineageos/lineageparts/PartsActivity.java |  17 +-
 .../SettingsPreferenceFragment.java           |  17 +-
 .../applications/ExpandedDesktopSettings.java |  17 +-
 .../applications/LongScreenSettings.java      |  16 +-
 .../ContributorsCloudFragment.java            |  51 +--
 .../ContributorsCloudViewController.java      |  35 +-
 .../egg/octo/OctopusDrawable.java             |  14 +-
 .../egg/octo/TaperedPathStroke.java           |   4 -
 .../hardware/DisplayRotation.java             |   2 +-
 .../input/BacklightTimeoutSeekBar.java        |   6 +-
 .../input/ButtonBacklightBrightness.java      |  10 +-
 .../lineageparts/input/ButtonSettings.java    |  52 ++-
 .../lineageparts/input/PowerMenuActions.java  |  13 +-
 .../lineageparts/lineagestats/Utilities.java  |  14 +-
 .../livedisplay/DisplayColor.java             |  15 +-
 .../livedisplay/DisplayTemperature.java       |  14 +-
 .../livedisplay/LiveDisplaySettings.java      |  94 +++--
 .../livedisplay/PictureAdjustment.java        |  18 +-
 .../AlphaPatternDrawable.java                 |   3 +-
 .../ApplicationLightPreference.java           |  20 +-
 .../BatteryLightSettings.java                 |  17 +-
 .../BrightnessPreference.java                 |  11 -
 .../notificationlight/ColorPickerView.java    |   7 +-
 .../LightSettingsDialog.java                  |  20 +-
 .../NotificationLightSettings.java            |  99 +++---
 .../power/PerfProfileSettings.java            |  21 +-
 .../PrivacyGuardAppListAdapter.java           |   4 +-
 .../privacyguard/PrivacyGuardManager.java     |   3 +-
 .../lineageparts/profiles/AppGroupConfig.java |  66 ++--
 .../lineageparts/profiles/AppGroupList.java   |  32 +-
 .../profiles/NFCProfileSelect.java            |  43 +--
 .../lineageparts/profiles/NamePreference.java |  15 +-
 .../profiles/ProfilesSettings.java            |  18 +-
 .../profiles/SetupActionsFragment.java        | 330 +++++++-----------
 .../profiles/SetupTriggersFragment.java       |  31 +-
 .../profiles/actions/item/BaseItem.java       |   4 -
 .../profiles/actions/item/BrightnessItem.java |   3 +-
 .../profiles/actions/item/DozeModeItem.java   |   3 +-
 .../profiles/actions/item/LockModeItem.java   |   3 +-
 .../item/NotificationLightModeItem.java       |   3 +-
 .../actions/item/ProfileNameItem.java         |   3 +-
 .../profiles/actions/item/RingModeItem.java   |   3 +-
 .../profiles/actions/item/TriggerItem.java    |   5 +-
 .../actions/item/VolumeStreamItem.java        |   2 +-
 .../triggers/BluetoothTriggerFragment.java    |  29 +-
 .../profiles/triggers/NfcTriggerFragment.java |   5 +-
 .../triggers/WifiTriggerFragment.java         |  31 +-
 .../statusbar/StatusBarSettings.java          |   1 -
 .../lineageparts/style/StylePreferences.java  |   4 -
 .../lineageparts/utils/DeviceUtils.java       |   7 +-
 .../weather/WeatherServiceSettings.java       |  49 +--
 .../widget/CustomDialogPreference.java        |   4 +-
 .../lineageparts/widget/LayoutPreference.java |   4 -
 .../lineageparts/widget/SwitchBar.java        |   8 +-
 54 files changed, 510 insertions(+), 810 deletions(-)

diff --git a/src/org/lineageos/lineageparts/PartsActivity.java b/src/org/lineageos/lineageparts/PartsActivity.java
index ab4ee70..7564417 100644
--- a/src/org/lineageos/lineageparts/PartsActivity.java
+++ b/src/org/lineageos/lineageparts/PartsActivity.java
@@ -171,17 +171,8 @@ public class PartsActivity extends SettingsDrawerActivity implements
     }
 
     public void startPreferencePanel(String fragmentClass, Bundle args, int titleRes,
-                                     CharSequence titleText, Fragment resultTo, int resultRequestCode) {
-        String title = null;
-        if (titleRes < 0) {
-            if (titleText != null) {
-                title = titleText.toString();
-            } else {
-                // There not much we can do in that case
-                title = "";
-            }
-        }
-
+                                     CharSequence titleText, Fragment resultTo,
+                                     int resultRequestCode) {
         Intent intent = new Intent();
         intent.setComponent(PartsList.LINEAGEPARTS_ACTIVITY);
         intent.putExtra(EXTRA_SHOW_FRAGMENT, fragmentClass);
@@ -211,8 +202,8 @@ public class PartsActivity extends SettingsDrawerActivity implements
         return switchToFragment(fragment, args, titleRes, titleText);
     }
 
-    private  boolean switchToFragment(Fragment fragment, Bundle args, int titleRes,
-                                    CharSequence titleText) {
+    private boolean switchToFragment(Fragment fragment, Bundle args, int titleRes,
+                                     CharSequence titleText) {
         Log.d(TAG, "Launching fragment: " + fragment.getClass().getName());
 
         fragment.setArguments(args);
diff --git a/src/org/lineageos/lineageparts/SettingsPreferenceFragment.java b/src/org/lineageos/lineageparts/SettingsPreferenceFragment.java
index 0946f68..1503902 100644
--- a/src/org/lineageos/lineageparts/SettingsPreferenceFragment.java
+++ b/src/org/lineageos/lineageparts/SettingsPreferenceFragment.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2010 The Android Open Source Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -61,12 +62,6 @@ import lineageos.preference.SettingsHelper;
 public abstract class SettingsPreferenceFragment extends PreferenceFragment
         implements DialogCreatable, PartsUpdater.Refreshable {
 
-    /**
-     * The Help Uri Resource key. This can be passed as an extra argument when creating the
-     * Fragment.
-     **/
-    public static final String HELP_URI_RESOURCE_KEY = "help_uri_resource";
-
     private static final String TAG = "SettingsPreference";
 
     private static final int DELAY_HIGHLIGHT_DURATION_MILLIS = 600;
@@ -75,8 +70,6 @@ public abstract class SettingsPreferenceFragment extends PreferenceFragment
 
     private SettingsDialogFragment mDialogFragment;
 
-    private String mHelpUri;
-
     private static final int ORDER_FIRST = -1;
     private static final int ORDER_LAST = Integer.MAX_VALUE -1;
 
@@ -427,12 +420,8 @@ public abstract class SettingsPreferenceFragment extends PreferenceFragment
             mPreferenceHighlighted = true;
             mLayoutManager.scrollToPosition(position);
 
-            getView().postDelayed(new Runnable() {
-                @Override
-                public void run() {
-                    mAdapter.highlight(position);
-                }
-            }, DELAY_HIGHLIGHT_DURATION_MILLIS);
+            getView().postDelayed(() ->
+                    mAdapter.highlight(position), DELAY_HIGHLIGHT_DURATION_MILLIS);
         }
     }
 
diff --git a/src/org/lineageos/lineageparts/applications/ExpandedDesktopSettings.java b/src/org/lineageos/lineageparts/applications/ExpandedDesktopSettings.java
index de5dc48..71c726f 100644
--- a/src/org/lineageos/lineageparts/applications/ExpandedDesktopSettings.java
+++ b/src/org/lineageos/lineageparts/applications/ExpandedDesktopSettings.java
@@ -1,5 +1,6 @@
-/**
+/*
  * Copyright (C) 2015-2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -36,7 +37,6 @@ import android.view.WindowManagerGlobal;
 import android.view.WindowManagerPolicyControl;
 import android.widget.AdapterView;
 import android.widget.BaseAdapter;
-import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.SectionIndexer;
@@ -53,9 +53,7 @@ import org.lineageos.lineageparts.widget.SwitchBar;
 
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 
 public class ExpandedDesktopSettings extends SettingsPreferenceFragment
         implements AdapterView.OnItemClickListener, ApplicationsState.Callbacks,
@@ -72,8 +70,6 @@ public class ExpandedDesktopSettings extends SettingsPreferenceFragment
     private ApplicationsState mApplicationsState;
     private ApplicationsState.Session mSession;
     private ActivityFilter mActivityFilter;
-    private Map<String, ApplicationsState.AppEntry> mEntryMap =
-            new HashMap<String, ApplicationsState.AppEntry>();
 
     private SwitchBar mSwitchBar;
     private ListView mUserListView;
@@ -82,10 +78,7 @@ public class ExpandedDesktopSettings extends SettingsPreferenceFragment
 
     private boolean isGloballyExpanded(ContentResolver cr) {
         final String value = Settings.Global.getString(cr, Settings.Global.POLICY_CONTROL);
-        if ("immersive.full=*".equals(value)) {
-            return true;
-        }
-        return false;
+        return "immersive.full=*".equals(value);
     }
 
     @Override
@@ -300,10 +293,6 @@ public class ExpandedDesktopSettings extends SettingsPreferenceFragment
         }
 
         mAllPackagesAdapter.setEntries(entries, sections, positions);
-        mEntryMap.clear();
-        for (ApplicationsState.AppEntry e : entries) {
-            mEntryMap.put(e.info.packageName, e);
-        }
 
         if (mIsGloballyExpanded) {
             showGlobalUi();
diff --git a/src/org/lineageos/lineageparts/applications/LongScreenSettings.java b/src/org/lineageos/lineageparts/applications/LongScreenSettings.java
index 6a03a5e..06c9622 100644
--- a/src/org/lineageos/lineageparts/applications/LongScreenSettings.java
+++ b/src/org/lineageos/lineageparts/applications/LongScreenSettings.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -28,7 +28,6 @@ import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
-import android.widget.CompoundButton;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.SectionIndexer;
@@ -43,9 +42,7 @@ import org.lineageos.lineageparts.SettingsPreferenceFragment;
 
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 
 public class LongScreenSettings extends SettingsPreferenceFragment
         implements ApplicationsState.Callbacks {
@@ -54,10 +51,7 @@ public class LongScreenSettings extends SettingsPreferenceFragment
     private ApplicationsState mApplicationsState;
     private ApplicationsState.Session mSession;
     private ActivityFilter mActivityFilter;
-    private Map<String, ApplicationsState.AppEntry> mEntryMap =
-            new HashMap<String, ApplicationsState.AppEntry>();
 
-    private ListView mUserListView;
     private LongScreen mLongScreen;
 
     @Override
@@ -88,8 +82,8 @@ public class LongScreenSettings extends SettingsPreferenceFragment
     public void onViewCreated(final View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
-        mUserListView = (ListView) view.findViewById(R.id.user_list_view);
-        mUserListView.setAdapter(mAllPackagesAdapter);
+        ListView userListView = (ListView) view.findViewById(R.id.user_list_view);
+        userListView.setAdapter(mAllPackagesAdapter);
     }
 
     @Override
@@ -172,10 +166,6 @@ public class LongScreenSettings extends SettingsPreferenceFragment
         }
 
         mAllPackagesAdapter.setEntries(entries, sections, positions);
-        mEntryMap.clear();
-        for (ApplicationsState.AppEntry e : entries) {
-            mEntryMap.put(e.info.packageName, e);
-        }
     }
 
     private void rebuild() {
diff --git a/src/org/lineageos/lineageparts/contributors/ContributorsCloudFragment.java b/src/org/lineageos/lineageparts/contributors/ContributorsCloudFragment.java
index 0dd2401..b948031 100644
--- a/src/org/lineageos/lineageparts/contributors/ContributorsCloudFragment.java
+++ b/src/org/lineageos/lineageparts/contributors/ContributorsCloudFragment.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -50,8 +51,6 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
 import android.view.animation.LinearInterpolator;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
 import android.widget.ArrayAdapter;
 import android.widget.ImageView;
 import android.widget.ListView;
@@ -128,7 +127,7 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
     private static class ContributorsAdapter extends ArrayAdapter<ContributorsDataHolder> {
 
         public ContributorsAdapter(Context context) {
-            super(context, R.id.contributor_name, new ArrayList<ContributorsDataHolder>());
+            super(context, R.id.contributor_name, new ArrayList<>());
         }
 
         @Override
@@ -188,7 +187,7 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
 
         @Override
         protected void onPostExecute(Boolean result) {
-            if (result == true) {
+            if (result) {
                 mImageView.setImageBitmap(mViewInfo.mBitmap);
                 mViewController.update();
                 if (mNotify) {
@@ -319,13 +318,10 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
         mSearchResults = (ListView) v.findViewById(R.id.contributors_cloud_search_results);
         mSearchAdapter = new ContributorsAdapter(getActivity());
         mSearchResults.setAdapter(mSearchAdapter);
-        mSearchResults.setOnItemClickListener(new OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                ContributorsDataHolder contributor =
-                        (ContributorsDataHolder) parent.getItemAtPosition(position);
-                onContributorSelected(contributor);
-            }
+        mSearchResults.setOnItemClickListener((parent, view, position, id) -> {
+            ContributorsDataHolder contributor =
+                    (ContributorsDataHolder) parent.getItemAtPosition(position);
+            onContributorSelected(contributor);
         });
 
         // Load the data from the database and fill the image
@@ -421,12 +417,7 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
         if (focusX != -1 && focusY != -1) {
             mViewController.setZoomTransitionDuration(2500);
             mViewController.setScale(10, focusX, focusY, true);
-            mHandler.postDelayed(new Runnable() {
-                @Override
-                public void run() {
-                    mViewController.setZoomTransitionDuration(-1);
-                }
-            }, 2500);
+            mHandler.postDelayed(() -> mViewController.setZoomTransitionDuration(-1), 2500);
         }
     }
 
@@ -604,10 +595,6 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
             try {
                 mDatabase = SQLiteDatabase.openDatabase(dbPath.getAbsolutePath(),
                         null, SQLiteDatabase.OPEN_READONLY);
-                if (mDatabase == null) {
-                    Log.e(TAG, "Cannot open cloud database: " + DB_NAME + ". db == null");
-                    return null;
-                }
                 return mDatabase;
 
             } catch (SQLException ex) {
@@ -740,7 +727,8 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
         // Total contributors
         String[] args = new String[]{String.valueOf(query.replaceAll("\\|", ""))};
         Cursor c = db.rawQuery(
-                "select id, name || case when username is null then '' else ' <'||username||'>' end contributor " +
+                "select id, name || case when username is null then '' else ' <'||username||'>' " +
+                "end contributor " +
                 "from metadata where lower(filter) like lower('%' || ? || '%') and id > 0 " +
                 "order by commits desc", args);
         if (c == null) {
@@ -772,7 +760,8 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
     }
 
     private boolean hasLargeHeap() {
-        ActivityManager am = (ActivityManager) getActivity().getSystemService(Context.ACTIVITY_SERVICE);
+        ActivityManager am =
+                (ActivityManager) getActivity().getSystemService(Context.ACTIVITY_SERVICE);
         return am.getMemoryClass() >= 96;
     }
 
@@ -784,13 +773,13 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
     public static void extractContributorsCloudDatabase(Context context) {
         final int BUFFER = 1024;
         InputStream is = null;
-        OutputStream os = null;
+        OutputStream os;
         File databasePath = context.getDatabasePath(DB_NAME);
         try {
             databasePath.getParentFile().mkdir();
             is = context.getResources().getAssets().open(DB_NAME, AssetManager.ACCESS_BUFFER);
             os = new FileOutputStream(databasePath);
-            int read = -1;
+            int read;
             byte[] data = new byte[BUFFER];
             while ((read = is.read(data, 0, BUFFER)) != -1) {
                 os.write(data, 0, read);
@@ -816,25 +805,19 @@ public class ContributorsCloudFragment extends Fragment implements SearchView.On
 
                     // Index the top 100 contributors, for fun :)
                     File dbPath = context.getDatabasePath(DB_NAME);
-                    SQLiteDatabase db = null;
+                    SQLiteDatabase db;
                     try {
                         db = SQLiteDatabase.openDatabase(dbPath.getAbsolutePath(),
                                 null, SQLiteDatabase.OPEN_READONLY);
-                        if (db == null) {
-                            Log.e(TAG, "Cannot open cloud database: " + DB_NAME + ". db == null");
-                            return null;
-                        }
                     } catch (Exception e) {
                         Log.e(TAG, e.getMessage(), e);
-                        if (db != null && db.isOpen()) {
-                            db.close();
-                        }
                         return null;
                     }
 
                     List<SearchIndexableRaw> result = new ArrayList<>();
                     Cursor c = db.rawQuery(
-                            "select id, username from metadata order by commits desc limit 100;", null);
+                            "select id, username from metadata order by commits desc limit 100;",
+                            null);
                     while (c.moveToNext()) {
                         SearchIndexableRaw raw = new SearchIndexableRaw(context);
                         raw.key = KEY_PREFIX + c.getString(0);
diff --git a/src/org/lineageos/lineageparts/contributors/ContributorsCloudViewController.java b/src/org/lineageos/lineageparts/contributors/ContributorsCloudViewController.java
index b560ff3..7eaef50 100644
--- a/src/org/lineageos/lineageparts/contributors/ContributorsCloudViewController.java
+++ b/src/org/lineageos/lineageparts/contributors/ContributorsCloudViewController.java
@@ -1,19 +1,20 @@
-/*******************************************************************************
+/*
  * Copyright 2011, 2012 Chris Banes.
  * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *******************************************************************************/
+ */
 
 package org.lineageos.lineageparts.contributors;
 
@@ -52,22 +53,22 @@ public class ContributorsCloudViewController implements View.OnTouchListener,
 
     private static final String LOG_TAG = "ContributorsCloud";
 
-    public static final float DEFAULT_MAX_SCALE = 3.0f;
-    public static final float DEFAULT_MID_SCALE = 1.75f;
-    public static final float DEFAULT_MIN_SCALE = 1.0f;
-    public static final int DEFAULT_ZOOM_DURATION = 200;
+    private static final float DEFAULT_MAX_SCALE = 3.0f;
+    private static final float DEFAULT_MID_SCALE = 1.75f;
+    private static final float DEFAULT_MIN_SCALE = 1.0f;
+    private static final int DEFAULT_ZOOM_DURATION = 200;
 
     // let debug flag be dynamic, but still Proguard can be used to remove from
     // release builds
     private static final boolean DEBUG = Log.isLoggable(LOG_TAG, Log.DEBUG);
 
-    static final Interpolator sInterpolator = new AccelerateDecelerateInterpolator();
-    int ZOOM_DURATION = DEFAULT_ZOOM_DURATION;
+    private static final Interpolator sInterpolator = new AccelerateDecelerateInterpolator();
+    private int ZOOM_DURATION = DEFAULT_ZOOM_DURATION;
 
-    static final int EDGE_NONE = -1;
-    static final int EDGE_LEFT = 0;
-    static final int EDGE_RIGHT = 1;
-    static final int EDGE_BOTH = 2;
+    private static final int EDGE_NONE = -1;
+    private static final int EDGE_LEFT = 0;
+    private static final int EDGE_RIGHT = 1;
+    private static final int EDGE_BOTH = 2;
 
     private float mMinScale = DEFAULT_MIN_SCALE;
     private float mMidScale = DEFAULT_MID_SCALE;
@@ -127,11 +128,11 @@ public class ContributorsCloudViewController implements View.OnTouchListener,
      * Set's the ImageView's ScaleType to Matrix.
      */
     private static void setImageViewScaleTypeMatrix(ImageView imageView) {
-        /**
+        /*
          * PhotoView sets it's own ScaleType to Matrix, then diverts all calls
          * setScaleType to this.setScaleType automatically.
          */
-        if (null != imageView /*&& !(imageView instanceof IPhotoView)*/) {
+        if (null != imageView) {
             if (!ScaleType.MATRIX.equals(imageView.getScaleType())) {
                 imageView.setScaleType(ScaleType.MATRIX);
             }
@@ -451,7 +452,7 @@ public class ContributorsCloudViewController implements View.OnTouchListener,
         mSuppMatrix.postTranslate(dx, dy);
         checkAndDisplayMatrix();
 
-        /**
+        /*
          * Here we decide whether to let the ImageView's parent to start taking
          * over the touch event.
          *
@@ -501,7 +502,7 @@ public class ContributorsCloudViewController implements View.OnTouchListener,
                 final int bottom = imageView.getBottom();
                 final int left = imageView.getLeft();
 
-                /**
+                /*
                  * We need to check whether the ImageView's bounds have changed.
                  * This would be easier if we targeted API 11+ as we could just use
                  * View.OnLayoutChangeListener. Instead we have to replicate the
diff --git a/src/org/lineageos/lineageparts/egg/octo/OctopusDrawable.java b/src/org/lineageos/lineageparts/egg/octo/OctopusDrawable.java
index fb7089c..0bc8c72 100644
--- a/src/org/lineageos/lineageparts/egg/octo/OctopusDrawable.java
+++ b/src/org/lineageos/lineageparts/egg/octo/OctopusDrawable.java
@@ -21,7 +21,6 @@ import android.animation.TimeAnimator;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
-import android.graphics.DashPathEffect;
 import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Path;
@@ -55,10 +54,9 @@ public class OctopusDrawable extends Drawable {
 
     private Paint mPaint = new Paint();
     private Arm[] mArms = new Arm[4]; // 8
-    final PointF mCenter = new PointF();
-    private int mSizePx = 100;
-    final Matrix M = new Matrix();
-    final Matrix M_inv = new Matrix();
+    private final PointF mCenter = new PointF();
+    private final Matrix M = new Matrix();
+    private final Matrix M_inv = new Matrix();
     private TimeAnimator mDriftAnimation;
     private float[] mPtmp = new float[2];
     private float[] mScaledBounds = new float[2];
@@ -89,10 +87,8 @@ public class OctopusDrawable extends Drawable {
     }
 
     public void setSizePx(int size) {
-        mSizePx = size;
-        M.setScale(mSizePx / BASE_SCALE, mSizePx / BASE_SCALE);
-        // TaperedPathStroke.setMinStep(20f*BASE_SCALE/mSizePx); // nice little floaty circles
-        TaperedPathStroke.setMinStep(8f * BASE_SCALE / mSizePx); // classic tentacles
+        M.setScale(size / BASE_SCALE, size / BASE_SCALE);
+        TaperedPathStroke.setMinStep(8f * BASE_SCALE / size); // classic tentacles
         M.invert(M_inv);
     }
 
diff --git a/src/org/lineageos/lineageparts/egg/octo/TaperedPathStroke.java b/src/org/lineageos/lineageparts/egg/octo/TaperedPathStroke.java
index 68bd233..dd46364 100644
--- a/src/org/lineageos/lineageparts/egg/octo/TaperedPathStroke.java
+++ b/src/org/lineageos/lineageparts/egg/octo/TaperedPathStroke.java
@@ -21,9 +21,6 @@ import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.graphics.PathMeasure;
-import android.os.Debug;
-
-import java.util.Arrays;
 
 public class TaperedPathStroke {
     static float sMinStepPx = 4f;
@@ -49,7 +46,6 @@ public class TaperedPathStroke {
                 last = true;
             }
             pm.getPosTan(t, pos, tan);
-            // float r = len > 0 ? lerp(t/len, r1, r2) : r1;
             float r = 3f;
             c.drawCircle(pos[0], pos[1], r, pt);
             // walk forward 1/4 radius, not too small though
diff --git a/src/org/lineageos/lineageparts/hardware/DisplayRotation.java b/src/org/lineageos/lineageparts/hardware/DisplayRotation.java
index 3ec4d7e..99cdba2 100644
--- a/src/org/lineageos/lineageparts/hardware/DisplayRotation.java
+++ b/src/org/lineageos/lineageparts/hardware/DisplayRotation.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -36,7 +37,6 @@ public class DisplayRotation extends SettingsPreferenceFragment {
     private static final String TAG = "DisplayRotation";
 
     public static final String KEY_ACCELEROMETER = "accelerometer";
-    private static final String KEY_LOCKSCREEN_ROTATION = "lockscreen_rotation";
     private static final String ROTATION_0_PREF = "display_rotation_0";
     private static final String ROTATION_90_PREF = "display_rotation_90";
     private static final String ROTATION_180_PREF = "display_rotation_180";
diff --git a/src/org/lineageos/lineageparts/input/BacklightTimeoutSeekBar.java b/src/org/lineageos/lineageparts/input/BacklightTimeoutSeekBar.java
index 9b6b94d..c59ff62 100644
--- a/src/org/lineageos/lineageparts/input/BacklightTimeoutSeekBar.java
+++ b/src/org/lineageos/lineageparts/input/BacklightTimeoutSeekBar.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2013 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -24,7 +25,6 @@ import android.widget.SeekBar;
 public class BacklightTimeoutSeekBar extends SeekBar {
     private int mMax;
     private int mGap;
-    private boolean mUpdatingThumb;
 
     public BacklightTimeoutSeekBar(Context context) {
         super(context);
@@ -40,16 +40,12 @@ public class BacklightTimeoutSeekBar extends SeekBar {
 
     @Override
     protected void onSizeChanged(int w, int h, int oldw, int oldh) {
-        mUpdatingThumb = true;
         super.onSizeChanged(w, h, oldw, oldh);
-        mUpdatingThumb = false;
     }
 
     @Override
     public void setThumb(Drawable thumb) {
-        mUpdatingThumb = true;
         super.setThumb(thumb);
-        mUpdatingThumb = false;
     }
 
     @Override
diff --git a/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java b/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
index d51864f..a5c0374 100644
--- a/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
+++ b/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
@@ -99,14 +99,10 @@ public class ButtonBacklightBrightness extends CustomDialogPreference<AlertDialo
     }
 
     @Override
-    protected void onPrepareDialogBuilder(AlertDialog.Builder builder, DialogInterface.OnClickListener listener) {
+    protected void onPrepareDialogBuilder(AlertDialog.Builder builder,
+                                          DialogInterface.OnClickListener listener) {
         super.onPrepareDialogBuilder(builder, listener);
-        builder.setNeutralButton(R.string.reset,
-                new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-            }
-        });
+        builder.setNeutralButton(R.string.reset, null);
     }
 
     @Override
diff --git a/src/org/lineageos/lineageparts/input/ButtonSettings.java b/src/org/lineageos/lineageparts/input/ButtonSettings.java
index cdd9943..65fb00a 100644
--- a/src/org/lineageos/lineageparts/input/ButtonSettings.java
+++ b/src/org/lineageos/lineageparts/input/ButtonSettings.java
@@ -18,12 +18,8 @@
 package org.lineageos.lineageparts.input;
 
 import android.app.ActivityManager;
-import android.content.ComponentName;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
 import android.content.res.Resources;
 import android.os.Bundle;
 import android.os.Handler;
@@ -35,8 +31,6 @@ import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceCategory;
 import android.support.v7.preference.PreferenceScreen;
 import android.util.Log;
-import android.view.Display;
-import android.view.DisplayInfo;
 import android.view.IWindowManager;
 import android.view.KeyCharacterMap;
 import android.view.KeyEvent;
@@ -46,12 +40,9 @@ import org.lineageos.lineageparts.R;
 import org.lineageos.lineageparts.SettingsPreferenceFragment;
 import org.lineageos.lineageparts.utils.DeviceUtils;
 import org.lineageos.lineageparts.utils.TelephonyUtils;
-import org.lineageos.internal.util.ScreenType;
 
 import static org.lineageos.internal.util.DeviceKeysConstants.*;
 
-import java.util.List;
-
 import lineageos.hardware.LineageHardwareManager;
 import lineageos.providers.LineageSettings;
 
@@ -155,7 +146,6 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         final boolean showCameraWake = (deviceWakeKeys & KEY_MASK_CAMERA) != 0;
         final boolean showVolumeWake = (deviceWakeKeys & KEY_MASK_VOLUME) != 0;
 
-        boolean hasAnyBindableKey = false;
         final PreferenceCategory powerCategory =
                 (PreferenceCategory) prefScreen.findPreference(CATEGORY_POWER);
         final PreferenceCategory homeCategory =
@@ -261,7 +251,8 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
 
         if (hasHomeKey) {
             if (!showHomeWake) {
-                homeCategory.removePreference(findPreference(LineageSettings.System.HOME_WAKE_SCREEN));
+                homeCategory.removePreference(
+                        findPreference(LineageSettings.System.HOME_WAKE_SCREEN));
             }
 
             if (!TelephonyUtils.isVoiceCapable(getActivity())) {
@@ -275,15 +266,14 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                 mHomeLongPressAction.setEnabled(false);
                 mHomeDoubleTapAction.setEnabled(false);
             }
-
-            hasAnyBindableKey = true;
         } else {
             prefScreen.removePreference(homeCategory);
         }
 
         if (hasBackKey) {
             if (!showBackWake) {
-                backCategory.removePreference(findPreference(LineageSettings.System.BACK_WAKE_SCREEN));
+                backCategory.removePreference(
+                        findPreference(LineageSettings.System.BACK_WAKE_SCREEN));
                 prefScreen.removePreference(backCategory);
             }
         } else {
@@ -292,7 +282,8 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
 
         if (hasMenuKey) {
             if (!showMenuWake) {
-                menuCategory.removePreference(findPreference(LineageSettings.System.MENU_WAKE_SCREEN));
+                menuCategory.removePreference(
+                        findPreference(LineageSettings.System.MENU_WAKE_SCREEN));
             }
 
             Action pressAction = Action.fromSettings(resolver,
@@ -303,15 +294,14 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                         LineageSettings.System.KEY_MENU_LONG_PRESS_ACTION,
                         hasAssistKey ? Action.NOTHING : Action.APP_SWITCH);
             mMenuLongPressAction = initList(KEY_MENU_LONG_PRESS, longPressAction);
-
-            hasAnyBindableKey = true;
         } else {
             prefScreen.removePreference(menuCategory);
         }
 
         if (hasAssistKey) {
             if (!showAssistWake) {
-                assistCategory.removePreference(findPreference(LineageSettings.System.ASSIST_WAKE_SCREEN));
+                assistCategory.removePreference(
+                        findPreference(LineageSettings.System.ASSIST_WAKE_SCREEN));
             }
 
             Action pressAction = Action.fromSettings(resolver,
@@ -321,8 +311,6 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             Action longPressAction = Action.fromSettings(resolver,
                     LineageSettings.System.KEY_ASSIST_LONG_PRESS_ACTION, Action.VOICE_SEARCH);
             mAssistLongPressAction = initList(KEY_ASSIST_LONG_PRESS, longPressAction);
-
-            hasAnyBindableKey = true;
         } else {
             prefScreen.removePreference(assistCategory);
         }
@@ -337,24 +325,26 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                     LineageSettings.System.KEY_APP_SWITCH_ACTION, Action.APP_SWITCH);
             mAppSwitchPressAction = initList(KEY_APP_SWITCH_PRESS, pressAction);
 
-            mAppSwitchLongPressAction = initList(KEY_APP_SWITCH_LONG_PRESS, appSwitchLongPressAction);
-
-            hasAnyBindableKey = true;
+            mAppSwitchLongPressAction = initList(KEY_APP_SWITCH_LONG_PRESS,
+                    appSwitchLongPressAction);
         } else {
             prefScreen.removePreference(appSwitchCategory);
         }
 
         if (hasCameraKey) {
-            mCameraWakeScreen = (SwitchPreference) findPreference(LineageSettings.System.CAMERA_WAKE_SCREEN);
-            mCameraSleepOnRelease =
-                    (SwitchPreference) findPreference(LineageSettings.System.CAMERA_SLEEP_ON_RELEASE);
-            mCameraLaunch = (SwitchPreference) findPreference(LineageSettings.System.CAMERA_LAUNCH);
+            mCameraWakeScreen =
+                    (SwitchPreference) findPreference(LineageSettings.System.CAMERA_WAKE_SCREEN);
+            mCameraSleepOnRelease = (SwitchPreference)
+                    findPreference(LineageSettings.System.CAMERA_SLEEP_ON_RELEASE);
+            mCameraLaunch =
+                    (SwitchPreference) findPreference(LineageSettings.System.CAMERA_LAUNCH);
 
             if (!showCameraWake) {
                 prefScreen.removePreference(mCameraWakeScreen);
             }
             // Only show 'Camera sleep on release' if the device has a focus key
-            if (res.getBoolean(org.lineageos.platform.internal.R.bool.config_singleStageCameraKey)) {
+            int resId = org.lineageos.platform.internal.R.bool.config_singleStageCameraKey;
+            if (res.getBoolean(resId)) {
                 prefScreen.removePreference(mCameraSleepOnRelease);
             }
         } else {
@@ -363,7 +353,8 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
 
         if (DeviceUtils.hasVolumeRocker(getActivity())) {
             if (!showVolumeWake) {
-                volumeCategory.removePreference(findPreference(LineageSettings.System.VOLUME_WAKE_SCREEN));
+                volumeCategory.removePreference(
+                        findPreference(LineageSettings.System.VOLUME_WAKE_SCREEN));
             }
 
             if (!TelephonyUtils.isVoiceCapable(getActivity())) {
@@ -417,7 +408,8 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             }
         }
 
-        mVolumeWakeScreen = (SwitchPreference) findPreference(LineageSettings.System.VOLUME_WAKE_SCREEN);
+        mVolumeWakeScreen =
+                (SwitchPreference) findPreference(LineageSettings.System.VOLUME_WAKE_SCREEN);
         mVolumeMusicControls = (SwitchPreference) findPreference(KEY_VOLUME_MUSIC_CONTROLS);
 
         if (mVolumeWakeScreen != null) {
diff --git a/src/org/lineageos/lineageparts/input/PowerMenuActions.java b/src/org/lineageos/lineageparts/input/PowerMenuActions.java
index bb7140d..98ac1f7 100644
--- a/src/org/lineageos/lineageparts/input/PowerMenuActions.java
+++ b/src/org/lineageos/lineageparts/input/PowerMenuActions.java
@@ -32,6 +32,7 @@ import org.lineageos.lineageparts.R;
 import org.lineageos.lineageparts.SettingsPreferenceFragment;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 import lineageos.providers.LineageSettings;
@@ -185,13 +186,9 @@ public class PowerMenuActions extends SettingsPreferenceFragment {
         if (savedActions == null) {
             defaultActions = mContext.getResources().getStringArray(
                     com.android.internal.R.array.config_globalActionsList);
-            for (String action : defaultActions) {
-                mLocalUserConfig.add(action);
-            }
+            mLocalUserConfig.addAll(Arrays.asList(defaultActions));
         } else {
-            for (String action : savedActions.split("\\|")) {
-                mLocalUserConfig.add(action);
-            }
+            mLocalUserConfig.addAll(Arrays.asList(savedActions.split("\\|")));
         }
     }
 
@@ -202,13 +199,11 @@ public class PowerMenuActions extends SettingsPreferenceFragment {
         for (String action : mAllActions) {
             if (settingsArrayContains(action)) {
                 setactions.add(action);
-            } else {
-                continue;
             }
         }
 
         for (int i = 0; i < setactions.size(); i++) {
-            s.append(setactions.get(i).toString());
+            s.append(setactions.get(i));
             if (i != setactions.size() - 1) {
                 s.append("|");
             }
diff --git a/src/org/lineageos/lineageparts/lineagestats/Utilities.java b/src/org/lineageos/lineageparts/lineagestats/Utilities.java
index f09c4b0..5a98ba8 100644
--- a/src/org/lineageos/lineageparts/lineagestats/Utilities.java
+++ b/src/org/lineageos/lineageparts/lineagestats/Utilities.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -26,17 +27,18 @@ import android.text.TextUtils;
 import lineageos.providers.LineageSettings;
 
 import java.math.BigInteger;
-import java.net.NetworkInterface;
 import java.security.MessageDigest;
 
 public class Utilities {
     public static String getUniqueID(Context context) {
-        final String id = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
+        final String id = Settings.Secure.getString(context.getContentResolver(),
+                Settings.Secure.ANDROID_ID);
         return digest(context.getPackageName() + id);
     }
 
     public static String getCarrier(Context context) {
-        TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
+        TelephonyManager tm =
+                (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         String carrier = tm.getNetworkOperatorName();
         if (TextUtils.isEmpty(carrier)) {
             carrier = "Unknown";
@@ -45,7 +47,8 @@ public class Utilities {
     }
 
     public static String getCarrierId(Context context) {
-        TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
+        TelephonyManager tm =
+                (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         String carrierId = tm.getNetworkOperator();
         if (TextUtils.isEmpty(carrierId)) {
             carrierId = "0";
@@ -54,7 +57,8 @@ public class Utilities {
     }
 
     public static String getCountryCode(Context context) {
-        TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
+        TelephonyManager tm =
+                (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         String countryCode = tm.getNetworkCountryIso();
         if (TextUtils.isEmpty(countryCode)) {
             countryCode = "Unknown";
diff --git a/src/org/lineageos/lineageparts/livedisplay/DisplayColor.java b/src/org/lineageos/lineageparts/livedisplay/DisplayColor.java
index e272653..939d265 100644
--- a/src/org/lineageos/lineageparts/livedisplay/DisplayColor.java
+++ b/src/org/lineageos/lineageparts/livedisplay/DisplayColor.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2013-2015 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -38,7 +39,6 @@ import lineageos.hardware.LiveDisplayManager;
 public class DisplayColor extends CustomDialogPreference<AlertDialog> {
     private static final String TAG = "ColorCalibration";
 
-    private final Context mContext;
     private final LiveDisplayManager mLiveDisplay;
 
     // These arrays must all match in length and order
@@ -62,22 +62,17 @@ public class DisplayColor extends CustomDialogPreference<AlertDialog> {
     public DisplayColor(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        mContext = context;
-        mLiveDisplay = LiveDisplayManager.getInstance(mContext);
+        mLiveDisplay = LiveDisplayManager.getInstance(context);
 
         setDialogLayoutResource(R.layout.display_color_calibration);
     }
 
     @Override
-    protected void onPrepareDialogBuilder(AlertDialog.Builder builder, DialogInterface.OnClickListener listener) {
+    protected void onPrepareDialogBuilder(AlertDialog.Builder builder,
+                                          DialogInterface.OnClickListener listener) {
         super.onPrepareDialogBuilder(builder, listener);
 
-        builder.setNeutralButton(R.string.reset,
-                new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-            }
-        });
+        builder.setNeutralButton(R.string.reset, null);
     }
 
     @Override
diff --git a/src/org/lineageos/lineageparts/livedisplay/DisplayTemperature.java b/src/org/lineageos/lineageparts/livedisplay/DisplayTemperature.java
index a60d5e0..bdd73b2 100644
--- a/src/org/lineageos/lineageparts/livedisplay/DisplayTemperature.java
+++ b/src/org/lineageos/lineageparts/livedisplay/DisplayTemperature.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -63,15 +64,11 @@ public class DisplayTemperature extends CustomDialogPreference<AlertDialog> {
     }
 
     @Override
-    protected void onPrepareDialogBuilder(AlertDialog.Builder builder, DialogInterface.OnClickListener listener) {
+    protected void onPrepareDialogBuilder(AlertDialog.Builder builder,
+                                          DialogInterface.OnClickListener listener) {
         super.onPrepareDialogBuilder(builder, listener);
 
-        builder.setNeutralButton(R.string.reset,
-                new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-            }
-        });
+        builder.setNeutralButton(R.string.reset, null);
     }
 
     @Override
@@ -231,7 +228,8 @@ public class DisplayTemperature extends CustomDialogPreference<AlertDialog> {
                     ((mBalanceMin != 0) || (mBalanceMax != 0));
 
             if (mUseBalance) {
-                mBalanceCurve = MathUtils.powerCurve(mMin, mConfig.getDefaultDayTemperature(), mMax);
+                mBalanceCurve =
+                        MathUtils.powerCurve(mMin, mConfig.getDefaultDayTemperature(), mMax);
                 mBarMax = mBalanceMax - mBalanceMin;
             } else {
                 mBalanceCurve = null;
diff --git a/src/org/lineageos/lineageparts/livedisplay/LiveDisplaySettings.java b/src/org/lineageos/lineageparts/livedisplay/LiveDisplaySettings.java
index b27f3c5..625a60a 100644
--- a/src/org/lineageos/lineageparts/livedisplay/LiveDisplaySettings.java
+++ b/src/org/lineageos/lineageparts/livedisplay/LiveDisplaySettings.java
@@ -95,26 +95,20 @@ public class LiveDisplaySettings extends SettingsPreferenceFragment implements S
 
     private ListPreference mLiveDisplay;
 
-    private SwitchPreference mColorEnhancement;
-    private SwitchPreference mLowPower;
     private SwitchPreference mOutdoorMode;
     private SwitchPreference mReadingMode;
 
-    private PictureAdjustment mPictureAdjustment;
     private DisplayTemperature mDisplayTemperature;
-    private DisplayColor mDisplayColor;
 
     private ListPreference mColorProfile;
     private String[] mColorProfileSummaries;
 
-    private String[] mModeEntries;
     private String[] mModeValues;
     private String[] mModeSummaries;
 
     private boolean mHasDisplayModes = false;
 
     private LiveDisplayManager mLiveDisplayManager;
-    private LiveDisplayConfig mConfig;
 
     private LineageHardwareManager mHardware;
 
@@ -125,7 +119,7 @@ public class LiveDisplaySettings extends SettingsPreferenceFragment implements S
 
         mHardware = LineageHardwareManager.getInstance(getActivity());
         mLiveDisplayManager = LiveDisplayManager.getInstance(getActivity());
-        mConfig = mLiveDisplayManager.getConfig();
+        LiveDisplayConfig config = mLiveDisplayManager.getConfig();
 
         addPreferencesFromResource(R.xml.livedisplay);
 
@@ -141,7 +135,7 @@ public class LiveDisplaySettings extends SettingsPreferenceFragment implements S
         mLiveDisplay = (ListPreference) findPreference(KEY_LIVE_DISPLAY);
         mLiveDisplay.setValue(String.valueOf(adaptiveMode));
 
-        mModeEntries = res.getStringArray(
+        String[] modeEntries = res.getStringArray(
                 org.lineageos.platform.internal.R.array.live_display_entries);
         mModeValues = res.getStringArray(
                 org.lineageos.platform.internal.R.array.live_display_values);
@@ -149,83 +143,85 @@ public class LiveDisplaySettings extends SettingsPreferenceFragment implements S
                 org.lineageos.platform.internal.R.array.live_display_summaries);
 
         // Remove outdoor mode from lists if there is no support
-        if (!mConfig.hasFeature(LiveDisplayManager.MODE_OUTDOOR)) {
+        if (!config.hasFeature(LiveDisplayManager.MODE_OUTDOOR)) {
             int idx = ArrayUtils.indexOf(mModeValues, String.valueOf(MODE_OUTDOOR));
-            String[] entriesTemp = new String[mModeEntries.length - 1];
+            String[] entriesTemp = new String[modeEntries.length - 1];
             String[] valuesTemp = new String[mModeValues.length - 1];
             String[] summariesTemp = new String[mModeSummaries.length - 1];
             int j = 0;
-            for (int i = 0; i < mModeEntries.length; i++) {
+            for (int i = 0; i < modeEntries.length; i++) {
                 if (i == idx) {
                     continue;
                 }
-                entriesTemp[j] = mModeEntries[i];
+                entriesTemp[j] = modeEntries[i];
                 valuesTemp[j] = mModeValues[i];
                 summariesTemp[j] = mModeSummaries[i];
                 j++;
             }
-            mModeEntries = entriesTemp;
+            modeEntries = entriesTemp;
             mModeValues = valuesTemp;
             mModeSummaries = summariesTemp;
         }
 
-        mLiveDisplay.setEntries(mModeEntries);
+        mLiveDisplay.setEntries(modeEntries);
         mLiveDisplay.setEntryValues(mModeValues);
         mLiveDisplay.setOnPreferenceChangeListener(this);
 
         mDisplayTemperature = (DisplayTemperature) findPreference(KEY_LIVE_DISPLAY_TEMPERATURE);
 
         mColorProfile = (ListPreference) findPreference(KEY_LIVE_DISPLAY_COLOR_PROFILE);
-        if (liveDisplayOptionsPrefs != null && mColorProfile != null
-                && (!mConfig.hasFeature(FEATURE_DISPLAY_MODES) || !updateDisplayModes())) {
-            liveDisplayOptionsPrefs.removePreference(mColorProfile);
-        } else {
-            mHasDisplayModes = true;
-            mColorProfile.setOnPreferenceChangeListener(this);
+        if (mColorProfile != null) {
+            if (liveDisplayPrefs != null
+                    && (!config.hasFeature(FEATURE_DISPLAY_MODES) || !updateDisplayModes())) {
+                liveDisplayPrefs.removePreference(mColorProfile);
+            } else {
+                mHasDisplayModes = true;
+                mColorProfile.setOnPreferenceChangeListener(this);
+            }
         }
 
         mOutdoorMode = (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_AUTO_OUTDOOR_MODE);
-        if (liveDisplayOptionsPrefs != null && mOutdoorMode != null
-                && !mConfig.hasFeature(MODE_OUTDOOR)) {
-            liveDisplayOptionsPrefs.removePreference(mOutdoorMode);
+        if (liveDisplayPrefs != null && mOutdoorMode != null
+                && !config.hasFeature(MODE_OUTDOOR)) {
+            liveDisplayPrefs.removePreference(mOutdoorMode);
             mOutdoorMode = null;
         }
 
         mReadingMode = (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_READING_ENHANCEMENT);
-        if (liveDisplayOptionsPrefs != null && mReadingMode != null
-                && !mHardware.isSupported(LineageHardwareManager.FEATURE_READING_ENHANCEMENT)) {
-            liveDisplayOptionsPrefs.removePreference(mReadingMode);
-            mReadingMode = null;
-        } else {
-            mReadingMode.setOnPreferenceChangeListener(this);
+        if (mReadingMode != null) {
+            if (liveDisplayPrefs != null
+                    && !mHardware.isSupported(LineageHardwareManager.FEATURE_READING_ENHANCEMENT)) {
+                liveDisplayPrefs.removePreference(mReadingMode);
+                mReadingMode = null;
+            } else{
+                mReadingMode.setOnPreferenceChangeListener(this);
+            }
         }
 
-        mLowPower = (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_LOW_POWER);
-        if (advancedPrefs != null && mLowPower != null
-                && !mConfig.hasFeature(FEATURE_CABC)) {
-            advancedPrefs.removePreference(mLowPower);
-            mLowPower = null;
+        SwitchPreference lowPower = (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_LOW_POWER);
+        if (advancedPrefs != null && lowPower != null
+                && !config.hasFeature(FEATURE_CABC)) {
+            advancedPrefs.removePreference(lowPower);
         }
 
-        mColorEnhancement = (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_COLOR_ENHANCE);
-        if (advancedPrefs != null && mColorEnhancement != null
-                && !mConfig.hasFeature(FEATURE_COLOR_ENHANCEMENT)) {
-            advancedPrefs.removePreference(mColorEnhancement);
-            mColorEnhancement = null;
+        SwitchPreference colorEnhancement =
+                (SwitchPreference) findPreference(KEY_LIVE_DISPLAY_COLOR_ENHANCE);
+        if (advancedPrefs != null && colorEnhancement != null
+                && !config.hasFeature(FEATURE_COLOR_ENHANCEMENT)) {
+            advancedPrefs.removePreference(colorEnhancement);
         }
 
-        mPictureAdjustment = (PictureAdjustment) findPreference(KEY_PICTURE_ADJUSTMENT);
-        if (advancedPrefs != null && mPictureAdjustment != null &&
-                    !mConfig.hasFeature(LiveDisplayManager.FEATURE_PICTURE_ADJUSTMENT)) {
-            advancedPrefs.removePreference(mPictureAdjustment);
-            mPictureAdjustment = null;
+        PictureAdjustment pictureAdjustment =
+                (PictureAdjustment) findPreference(KEY_PICTURE_ADJUSTMENT);
+        if (advancedPrefs != null && pictureAdjustment != null &&
+                    !config.hasFeature(LiveDisplayManager.FEATURE_PICTURE_ADJUSTMENT)) {
+            advancedPrefs.removePreference(pictureAdjustment);
         }
 
-        mDisplayColor = (DisplayColor) findPreference(KEY_DISPLAY_COLOR);
-        if (advancedPrefs != null && mDisplayColor != null &&
-                !mConfig.hasFeature(LiveDisplayManager.FEATURE_COLOR_ADJUSTMENT)) {
-            advancedPrefs.removePreference(mDisplayColor);
-            mDisplayColor = null;
+        DisplayColor displayColor = (DisplayColor) findPreference(KEY_DISPLAY_COLOR);
+        if (advancedPrefs != null && displayColor != null &&
+                !config.hasFeature(LiveDisplayManager.FEATURE_COLOR_ADJUSTMENT)) {
+            advancedPrefs.removePreference(displayColor);
         }
 
         if (advancedPrefs.getPreferenceCount() == 0) {
diff --git a/src/org/lineageos/lineageparts/livedisplay/PictureAdjustment.java b/src/org/lineageos/lineageparts/livedisplay/PictureAdjustment.java
index 0e5b9ef..8ef4e69 100644
--- a/src/org/lineageos/lineageparts/livedisplay/PictureAdjustment.java
+++ b/src/org/lineageos/lineageparts/livedisplay/PictureAdjustment.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -42,7 +43,6 @@ import lineageos.hardware.LiveDisplayManager;
 public class PictureAdjustment extends CustomDialogPreference<AlertDialog> {
     private static final String TAG = "PictureAdjustment";
 
-    private final Context mContext;
     private final LiveDisplayManager mLiveDisplay;
     private final List<Range<Float>> mRanges;
 
@@ -69,23 +69,18 @@ public class PictureAdjustment extends CustomDialogPreference<AlertDialog> {
     public PictureAdjustment(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        mContext = context;
-        mLiveDisplay = LiveDisplayManager.getInstance(mContext);
+        mLiveDisplay = LiveDisplayManager.getInstance(context);
         mRanges = mLiveDisplay.getConfig().getPictureAdjustmentRanges();
 
         setDialogLayoutResource(R.layout.display_picture_adjustment);
     }
 
     @Override
-    protected void onPrepareDialogBuilder(AlertDialog.Builder builder, DialogInterface.OnClickListener listener) {
+    protected void onPrepareDialogBuilder(AlertDialog.Builder builder,
+                                          DialogInterface.OnClickListener listener) {
         super.onPrepareDialogBuilder(builder, listener);
 
-        builder.setNeutralButton(R.string.reset,
-                new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-            }
-        });
+        builder.setNeutralButton(R.string.reset, null);
     }
 
     private void updateBars() {
@@ -210,7 +205,8 @@ public class PictureAdjustment extends CustomDialogPreference<AlertDialog> {
         private TextView mValue;
         private Range<Float> mRange;
 
-        public ColorSeekBar(IntervalSeekBar seekBar, Range<Float> range, TextView value, int index) {
+        public ColorSeekBar(IntervalSeekBar seekBar, Range<Float> range, TextView value,
+                            int index) {
             mSeekBar = seekBar;
             mValue = value;
             mIndex = index;
diff --git a/src/org/lineageos/lineageparts/notificationlight/AlphaPatternDrawable.java b/src/org/lineageos/lineageparts/notificationlight/AlphaPatternDrawable.java
index 3717363..1c7c7dd 100644
--- a/src/org/lineageos/lineageparts/notificationlight/AlphaPatternDrawable.java
+++ b/src/org/lineageos/lineageparts/notificationlight/AlphaPatternDrawable.java
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2010 Daniel Nilsson
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -34,7 +35,7 @@ import android.graphics.drawable.Drawable;
  */
 public class AlphaPatternDrawable extends Drawable {
 
-    private int mRectangleSize = 10;
+    private int mRectangleSize;
 
     private Paint mPaint = new Paint();
     private Paint mPaintWhite = new Paint();
diff --git a/src/org/lineageos/lineageparts/notificationlight/ApplicationLightPreference.java b/src/org/lineageos/lineageparts/notificationlight/ApplicationLightPreference.java
index 0e7f43e..be4141e 100644
--- a/src/org/lineageos/lineageparts/notificationlight/ApplicationLightPreference.java
+++ b/src/org/lineageos/lineageparts/notificationlight/ApplicationLightPreference.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -94,8 +95,8 @@ public class ApplicationLightPreference extends CustomDialogPreference<LightSett
      * @param offValue
      * @param onOffChangeable
      */
-    public ApplicationLightPreference(Context context, AttributeSet attrs,
-                                      int color, int onValue, int offValue, boolean onOffChangeable) {
+    public ApplicationLightPreference(Context context, AttributeSet attrs, int color,
+                                      int onValue, int offValue, boolean onOffChangeable) {
         super(context, attrs);
         mColorValue = color;
         mOnValue = onValue;
@@ -154,7 +155,8 @@ public class ApplicationLightPreference extends CustomDialogPreference<LightSett
     }
 
     private void updatePreferenceViews() {
-        final int size = (int) getContext().getResources().getDimension(R.dimen.oval_notification_size);
+        final int size =
+                (int) getContext().getResources().getDimension(R.dimen.oval_notification_size);
 
         if (mLightColorView != null) {
             mLightColorView.setEnabled(true);
@@ -312,8 +314,10 @@ public class ApplicationLightPreference extends CustomDialogPreference<LightSett
             return getContext().getResources().getString(R.string.default_time);
         }
 
-        String[] timeNames = getContext().getResources().getStringArray(R.array.notification_pulse_length_entries);
-        String[] timeValues = getContext().getResources().getStringArray(R.array.notification_pulse_length_values);
+        String[] timeNames = getContext().getResources().getStringArray(
+                R.array.notification_pulse_length_entries);
+        String[] timeValues = getContext().getResources().getStringArray(
+                R.array.notification_pulse_length_values);
 
         for (int i = 0; i < timeValues.length; i++) {
             if (Integer.decode(timeValues[i]).equals(time)) {
@@ -329,8 +333,10 @@ public class ApplicationLightPreference extends CustomDialogPreference<LightSett
             return getContext().getResources().getString(R.string.default_time);
         }
 
-        String[] timeNames = getContext().getResources().getStringArray(R.array.notification_pulse_speed_entries);
-        String[] timeValues = getContext().getResources().getStringArray(R.array.notification_pulse_speed_values);
+        String[] timeNames = getContext().getResources().getStringArray(
+                R.array.notification_pulse_speed_entries);
+        String[] timeValues = getContext().getResources().getStringArray(
+                R.array.notification_pulse_speed_values);
 
         for (int i = 0; i < timeValues.length; i++) {
             if (Integer.decode(timeValues[i]).equals(time)) {
diff --git a/src/org/lineageos/lineageparts/notificationlight/BatteryLightSettings.java b/src/org/lineageos/lineageparts/notificationlight/BatteryLightSettings.java
index 2637bef..c4de674 100644
--- a/src/org/lineageos/lineageparts/notificationlight/BatteryLightSettings.java
+++ b/src/org/lineageos/lineageparts/notificationlight/BatteryLightSettings.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -82,8 +83,8 @@ public class BatteryLightSettings extends SettingsPreferenceFragment implements
                 context, LightsCapabilities.LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS);
         final boolean pulsatingLed =
                 LightsCapabilities.supports(context, LightsCapabilities.LIGHTS_PULSATING_LED);
-        final boolean segmentedBatteryLed =
-                LightsCapabilities.supports(context, LightsCapabilities.LIGHTS_SEGMENTED_BATTERY_LED);
+        final boolean segmentedBatteryLed = LightsCapabilities.supports(context,
+                LightsCapabilities.LIGHTS_SEGMENTED_BATTERY_LED);
 
         addPreferencesFromResource(R.xml.battery_light_settings);
 
@@ -122,7 +123,8 @@ public class BatteryLightSettings extends SettingsPreferenceFragment implements
             mLowColorPref.setDefaultValues(mDefaultLowColor, 0, 0);
             mLowColorPref.setBrightness(mBatteryBrightness);
 
-            mMediumColorPref = (ApplicationLightPreference) prefSet.findPreference(MEDIUM_COLOR_PREF);
+            mMediumColorPref =
+                    (ApplicationLightPreference) prefSet.findPreference(MEDIUM_COLOR_PREF);
             mMediumColorPref.setOnPreferenceChangeListener(this);
             mMediumColorPref.setDefaultValues(mDefaultMediumColor, 0, 0);
             mMediumColorPref.setBrightness(mBatteryBrightness);
@@ -205,11 +207,14 @@ public class BatteryLightSettings extends SettingsPreferenceFragment implements
         ContentResolver resolver = getActivity().getContentResolver();
 
         if (key.equals(LOW_COLOR_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.BATTERY_LIGHT_LOW_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.BATTERY_LIGHT_LOW_COLOR, color);
         } else if (key.equals(MEDIUM_COLOR_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.BATTERY_LIGHT_MEDIUM_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.BATTERY_LIGHT_MEDIUM_COLOR, color);
         } else if (key.equals(FULL_COLOR_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.BATTERY_LIGHT_FULL_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.BATTERY_LIGHT_FULL_COLOR, color);
             updateBrightnessPrefColor(color);
         }
     }
diff --git a/src/org/lineageos/lineageparts/notificationlight/BrightnessPreference.java b/src/org/lineageos/lineageparts/notificationlight/BrightnessPreference.java
index 355d7fb..cc29522 100644
--- a/src/org/lineageos/lineageparts/notificationlight/BrightnessPreference.java
+++ b/src/org/lineageos/lineageparts/notificationlight/BrightnessPreference.java
@@ -17,10 +17,8 @@
 package org.lineageos.lineageparts.notificationlight;
 
 import android.app.AlertDialog;
-import android.app.Dialog;
 import android.app.Notification;
 import android.app.NotificationManager;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
@@ -28,17 +26,12 @@ import android.os.Handler;
 import android.os.Message;
 import android.os.Parcel;
 import android.os.Parcelable;
-import android.os.UserHandle;
-import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceViewHolder;
 import android.util.AttributeSet;
 import android.view.View;
 import android.widget.SeekBar;
 import android.widget.TextView;
 
-import lineageos.providers.LineageSettings;
-
-import org.lineageos.internal.notification.LightsCapabilities;
 import org.lineageos.internal.notification.LineageNotification;
 import org.lineageos.lineageparts.widget.CustomDialogPreference;
 import org.lineageos.lineageparts.R;
@@ -72,7 +65,6 @@ public class BrightnessPreference extends CustomDialogPreference<AlertDialog>
     private int mLedColor = DEFAULT_LED_COLOR;
 
     private final Context mContext;
-    private final Handler mHandler;
 
     private final Notification.Builder mNotificationBuilder;
     private NotificationManager mNotificationManager;
@@ -91,9 +83,6 @@ public class BrightnessPreference extends CustomDialogPreference<AlertDialog>
 
         mContext = context;
 
-        // Message handler used for led notification update throttling.
-        mHandler = new Handler();
-
         mNotificationManager =
                 (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
 
diff --git a/src/org/lineageos/lineageparts/notificationlight/ColorPickerView.java b/src/org/lineageos/lineageparts/notificationlight/ColorPickerView.java
index c660115..300eeea 100644
--- a/src/org/lineageos/lineageparts/notificationlight/ColorPickerView.java
+++ b/src/org/lineageos/lineageparts/notificationlight/ColorPickerView.java
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2010 Daniel Nilsson
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -30,7 +31,6 @@ import android.graphics.Shader;
 import android.graphics.Paint.Align;
 import android.graphics.Paint.Style;
 import android.graphics.Shader.TileMode;
-import android.os.Build;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
@@ -230,10 +230,7 @@ public class ColorPickerView extends View {
                     rect.bottom + BORDER_WIDTH_PX, mBorderPaint);
         }
 
-        // On Honeycomb+ we need to use software rendering to create the shader properly
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
-            setLayerType(View.LAYER_TYPE_SOFTWARE, null);
-        }
+        setLayerType(View.LAYER_TYPE_SOFTWARE, null);
 
         // Get the overlaying gradients ready and create the ComposeShader
         if (mValShader == null) {
diff --git a/src/org/lineageos/lineageparts/notificationlight/LightSettingsDialog.java b/src/org/lineageos/lineageparts/notificationlight/LightSettingsDialog.java
index a44713d..d0d82bf 100644
--- a/src/org/lineageos/lineageparts/notificationlight/LightSettingsDialog.java
+++ b/src/org/lineageos/lineageparts/notificationlight/LightSettingsDialog.java
@@ -49,7 +49,6 @@ import org.lineageos.internal.notification.LedValues;
 import org.lineageos.internal.notification.LightsCapabilities;
 import org.lineageos.internal.notification.LineageNotification;
 import org.lineageos.lineageparts.R;
-import org.lineageos.lineageparts.notificationlight.ColorPickerView.OnColorChangedListener;
 
 import java.util.ArrayList;
 import java.util.Locale;
@@ -62,8 +61,6 @@ public class LightSettingsDialog extends AlertDialog implements
     private final static long LED_UPDATE_DELAY_MS = 250;
 
     private ColorPickerView mColorPicker;
-    private LinearLayout mColorPanel;
-    private View mLightsDialogDivider;
 
     private EditText mHexColorInput;
     private ColorPanelView mNewColor;
@@ -73,8 +70,6 @@ public class LightSettingsDialog extends AlertDialog implements
     private Spinner mPulseSpeedOff;
     private LayoutInflater mInflater;
 
-    private OnColorChangedListener mListener;
-
     private NotificationManager mNotificationManager;
 
     private boolean mReadyForLed;
@@ -142,10 +137,10 @@ public class LightSettingsDialog extends AlertDialog implements
         View layout = mInflater.inflate(R.layout.dialog_light_settings, null);
 
         mColorPicker = (ColorPickerView) layout.findViewById(R.id.color_picker_view);
-        mColorPanel = (LinearLayout) layout.findViewById(R.id.color_panel_view);
+        LinearLayout colorPanel = (LinearLayout) layout.findViewById(R.id.color_panel_view);
         mHexColorInput = (EditText) layout.findViewById(R.id.hex_color_input);
         mNewColor = (ColorPanelView) layout.findViewById(R.id.color_panel);
-        mLightsDialogDivider = (View) layout.findViewById(R.id.lights_dialog_divider);
+        View lightsDialogDivider = (View) layout.findViewById(R.id.lights_dialog_divider);
         mPulseSpeedOn = (Spinner) layout.findViewById(R.id.on_spinner);
         mPulseSpeedOff = (Spinner) layout.findViewById(R.id.off_spinner);
 
@@ -183,8 +178,8 @@ public class LightSettingsDialog extends AlertDialog implements
         if (!LightsCapabilities.supports(
                 mContext, LightsCapabilities.LIGHTS_RGB_NOTIFICATION_LED)) {
             mColorPicker.setVisibility(View.GONE);
-            mColorPanel.setVisibility(View.GONE);
-            mLightsDialogDivider.setVisibility(View.GONE);
+            colorPanel.setVisibility(View.GONE);
+            lightsDialogDivider.setVisibility(View.GONE);
         }
 
         mLedBrightness = brightness;
@@ -243,10 +238,6 @@ public class LightSettingsDialog extends AlertDialog implements
         mNewColor.setColor(color);
         mHexColorInput.setText(String.format(Locale.US, format, color & mask));
 
-        if (mListener != null) {
-            mListener.onColorChanged(color);
-        }
-
         updateLed();
     }
 
@@ -447,9 +438,6 @@ public class LightSettingsDialog extends AlertDialog implements
                 mColorPicker.setColor(color);
                 mNewColor.setColor(color);
                 updateLed();
-                if (mListener != null) {
-                    mListener.onColorChanged(color);
-                }
             } catch (IllegalArgumentException ex) {
                 // Number format is incorrect, ignore
             }
diff --git a/src/org/lineageos/lineageparts/notificationlight/NotificationLightSettings.java b/src/org/lineageos/lineageparts/notificationlight/NotificationLightSettings.java
index e9533ce..22188e9 100644
--- a/src/org/lineageos/lineageparts/notificationlight/NotificationLightSettings.java
+++ b/src/org/lineageos/lineageparts/notificationlight/NotificationLightSettings.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,10 +19,8 @@ package org.lineageos.lineageparts.notificationlight;
 
 import android.app.AlertDialog;
 import android.app.Dialog;
-import android.app.NotificationManager;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
@@ -37,9 +36,6 @@ import android.text.TextUtils;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
 import android.widget.ListView;
 
 import org.lineageos.internal.notification.LightsCapabilities;
@@ -82,7 +78,6 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
     private int mDefaultLedOff;
     private PackageManager mPackageManager;
     private PreferenceGroup mApplicationPrefList;
-    private NotificationBrightnessPreference mNotificationBrightnessPref;
     private SystemSettingSwitchPreference mEnabledPref;
     private LineageSystemSettingSwitchPreference mCustomEnabledPref;
     private LineageSystemSettingSwitchPreference mScreenOnLightsPref;
@@ -90,12 +85,9 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
     private ApplicationLightPreference mDefaultPref;
     private ApplicationLightPreference mCallPref;
     private ApplicationLightPreference mVoicemailPref;
-    private Menu mMenu;
     private PackageListAdapter mPackageAdapter;
     private String mPackageList;
     private Map<String, Package> mPackages;
-    // liblights supports brightness control
-    private boolean mHALAdjustableBrightness;
     // Supports rgb color control
     private boolean mMultiColorLed;
     // Supports adjustable pulse
@@ -117,14 +109,16 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
 
         // Get the system defined default notification color
         mDefaultColor =
-                resources.getColor(com.android.internal.R.color.config_defaultNotificationColor, null);
+                resources.getColor(com.android.internal.R.color.config_defaultNotificationColor,
+                        null);
 
         mDefaultLedOn = resources.getInteger(
                 com.android.internal.R.integer.config_defaultNotificationLedOn);
         mDefaultLedOff = resources.getInteger(
                 com.android.internal.R.integer.config_defaultNotificationLedOff);
 
-        mHALAdjustableBrightness = LightsCapabilities.supports(
+        // liblights supports brightness control
+        boolean hasHALAdjustableBrightness = LightsCapabilities.supports(
                 context, LightsCapabilities.LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS);
         mLedCanPulse = LightsCapabilities.supports(
                 context, LightsCapabilities.LIGHTS_PULSATING_LED);
@@ -141,14 +135,12 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
                 findPreference(LineageSettings.System.NOTIFICATION_LIGHT_COLOR_AUTO);
 
         // Advanced light settings
-        mNotificationBrightnessPref = (NotificationBrightnessPreference)
-                findPreference(LineageSettings.System.NOTIFICATION_LIGHT_BRIGHTNESS_LEVEL);
         mScreenOnLightsPref = (LineageSystemSettingSwitchPreference)
                 findPreference(LineageSettings.System.NOTIFICATION_LIGHT_SCREEN_ON);
         mScreenOnLightsPref.setOnPreferenceChangeListener(this);
         mCustomEnabledPref = (LineageSystemSettingSwitchPreference)
                 findPreference(LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CUSTOM_ENABLE);
-        if (!mMultiColorLed || !mHALAdjustableBrightness) {
+        if (!mMultiColorLed || !hasHALAdjustableBrightness) {
             removePreference(BRIGHTNESS_SECTION);
         }
         if (!mLedCanPulse && !mMultiColorLed) {
@@ -160,8 +152,9 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
             mDefaultPref.setDefaultValues(mDefaultColor, mDefaultLedOn, mDefaultLedOff);
         }
 
-        // Missed call and Voicemail preferences should only show on devices with a voice capabilities
-        TelephonyManager tm = (TelephonyManager) getActivity().getSystemService(Context.TELEPHONY_SERVICE);
+        // Missed call and Voicemail preferences should only show on devices with voice capabilities
+        TelephonyManager tm =
+                (TelephonyManager) getActivity().getSystemService(Context.TELEPHONY_SERVICE);
         if (tm.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE
                 || (!mLedCanPulse && !mMultiColorLed)) {
             removePreference(PHONE_SECTION);
@@ -194,7 +187,8 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
             mGeneralPrefs.removePreference(mAutoGenerateColors);
         } else {
             mAutoGenerateColors.setOnPreferenceChangeListener(this);
-            watch(LineageSettings.System.getUriFor(LineageSettings.System.NOTIFICATION_LIGHT_COLOR_AUTO));
+            watch(LineageSettings.System.getUriFor(
+                    LineageSettings.System.NOTIFICATION_LIGHT_COLOR_AUTO));
         }
 
         watch(Settings.System.getUriFor(Settings.System.NOTIFICATION_LIGHT_PULSE));
@@ -362,7 +356,8 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
     }
 
     private boolean parsePackageList() {
-        final String baseString = LineageSettings.System.getString(getActivity().getContentResolver(),
+        final String baseString = LineageSettings.System.getString(
+                getActivity().getContentResolver(),
                 LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CUSTOM_VALUES);
 
         if (TextUtils.equals(mPackageList, baseString)) {
@@ -398,7 +393,7 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
             mPackageList = value;
         }
         LineageSettings.System.putString(getActivity().getContentResolver(),
-                                  LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CUSTOM_VALUES, value);
+                LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CUSTOM_VALUES, value);
     }
 
     /**
@@ -409,25 +404,35 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
      * @param timeon
      * @param timeoff
      */
-    protected void updateValues(String packageName, Integer color, Integer timeon, Integer timeoff) {
+    protected void updateValues(String packageName, Integer color, Integer timeon,
+                                Integer timeoff) {
         ContentResolver resolver = getActivity().getContentResolver();
 
         if (packageName.equals(DEFAULT_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_COLOR, color);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_LED_ON, timeon);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_LED_OFF, timeoff);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_LED_ON, timeon);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_LED_OFF, timeoff);
             refreshDefault();
             return;
         } else if (packageName.equals(MISSED_CALL_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_COLOR, color);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_LED_ON, timeon);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_LED_OFF, timeoff);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_LED_ON, timeon);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_LED_OFF, timeoff);
             refreshDefault();
             return;
         } else if (packageName.equals(VOICEMAIL_PREF)) {
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_COLOR, color);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_LED_ON, timeon);
-            LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_LED_OFF, timeoff);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_COLOR, color);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_LED_ON, timeon);
+            LineageSettings.System.putInt(resolver,
+                    LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_LED_OFF, timeoff);
             refreshDefault();
             return;
         }
@@ -446,9 +451,12 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
         ContentResolver resolver = getActivity().getContentResolver();
 
         // Reset to the framework default colors
-        LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_COLOR, mDefaultColor);
-        LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_COLOR, mDefaultColor);
-        LineageSettings.System.putInt(resolver, LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_COLOR, mDefaultColor);
+        LineageSettings.System.putInt(resolver,
+                LineageSettings.System.NOTIFICATION_LIGHT_PULSE_DEFAULT_COLOR, mDefaultColor);
+        LineageSettings.System.putInt(resolver,
+                LineageSettings.System.NOTIFICATION_LIGHT_PULSE_CALL_COLOR, mDefaultColor);
+        LineageSettings.System.putInt(resolver,
+                LineageSettings.System.NOTIFICATION_LIGHT_PULSE_VMAIL_COLOR, mDefaultColor);
 
         refreshDefault();
     }
@@ -462,12 +470,8 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
                 .setTitle(R.string.dialog_delete_title)
                 .setMessage(R.string.dialog_delete_message)
                 .setIconAttribute(android.R.attr.alertDialogIcon)
-                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        removeCustomApplicationPref(key);
-                    }
-                })
+                .setPositiveButton(android.R.string.ok, (dialog, which) ->
+                        removeCustomApplicationPref(key))
                 .setNegativeButton(android.R.string.cancel, null);
 
         builder.show();
@@ -490,10 +494,10 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        mMenu = menu;
-        mMenu.add(0, MENU_ADD, 0, R.string.add)
+        menu.add(0, MENU_ADD, 0, R.string.add)
                 .setIcon(R.drawable.ic_menu_add)
-                .setShowAsActionFlags(MenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);
+                .setShowAsActionFlags(
+                        MenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT);
     }
 
     @Override
@@ -528,14 +532,11 @@ public class NotificationLightSettings extends SettingsPreferenceFragment implem
                 builder.setView(list);
                 dialog = builder.create();
 
-                list.setOnItemClickListener(new OnItemClickListener() {
-                    @Override
-                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                        // Add empty application definition, the user will be able to edit it later
-                        PackageItem info = (PackageItem) parent.getItemAtPosition(position);
-                        addCustomApplicationPref(info.packageName);
-                        dialog.cancel();
-                    }
+                list.setOnItemClickListener((parent, view, position, itemId) -> {
+                    // Add empty application definition, the user will be able to edit it later
+                    PackageItem info = (PackageItem) parent.getItemAtPosition(position);
+                    addCustomApplicationPref(info.packageName);
+                    dialog.cancel();
                 });
                 break;
             default:
diff --git a/src/org/lineageos/lineageparts/power/PerfProfileSettings.java b/src/org/lineageos/lineageparts/power/PerfProfileSettings.java
index c882996..9941b3b 100644
--- a/src/org/lineageos/lineageparts/power/PerfProfileSettings.java
+++ b/src/org/lineageos/lineageparts/power/PerfProfileSettings.java
@@ -45,7 +45,6 @@ import org.lineageos.internal.graphics.drawable.StopMotionVectorDrawable;
 import java.util.ArrayList;
 import java.util.List;
 
-
 import lineageos.power.PerformanceManager;
 import lineageos.power.PerformanceProfile;
 
@@ -159,21 +158,11 @@ public class PerfProfileSettings extends SettingsPreferenceFragment
             final ValueAnimator color = ValueAnimator.ofArgb(
                     getColorAt(from), getColorAt(from + ((to - from) / 2)), getColorAt(to));
 
-            scale.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
-                @Override
-                public void onAnimationUpdate(ValueAnimator valueAnimator) {
-                    mDrawable.setCurrentFraction(
-                            (Float) valueAnimator.getAnimatedValue());
-                }
-            });
-            color.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
-                @Override
-                public void onAnimationUpdate(ValueAnimator valueAnimator) {
-                    mDrawable.setColorFilter(
-                            (Integer) valueAnimator.getAnimatedValue(),
-                            PorterDuff.Mode.SRC_IN);
-                }
-            });
+            scale.addUpdateListener(valueAnimator -> mDrawable.setCurrentFraction(
+                    (Float) valueAnimator.getAnimatedValue()));
+            color.addUpdateListener(valueAnimator -> mDrawable.setColorFilter(
+                    (Integer) valueAnimator.getAnimatedValue(),
+                    PorterDuff.Mode.SRC_IN));
 
             mAnimator.play(scale).with(color);
             mAnimator.start();
diff --git a/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardAppListAdapter.java b/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardAppListAdapter.java
index d08747e..3bb615a 100644
--- a/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardAppListAdapter.java
+++ b/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardAppListAdapter.java
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2013 SlimRoms Project
  * Copyright (C) 2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -96,7 +97,8 @@ public class PrivacyGuardAppListAdapter extends BaseAdapter implements SectionIn
             appHolder = new PrivacyGuardAppViewHolder();
             appHolder.title = (TextView) convertView.findViewById(R.id.app_title);
             appHolder.icon = (ImageView) convertView.findViewById(R.id.app_icon);
-            appHolder.privacyGuardIcon = (ImageView) convertView.findViewById(R.id.app_privacy_guard_icon);
+            appHolder.privacyGuardIcon =
+                    (ImageView) convertView.findViewById(R.id.app_privacy_guard_icon);
             convertView.setTag(appHolder);
         } else {
             appHolder = (PrivacyGuardAppViewHolder) convertView.getTag();
diff --git a/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardManager.java b/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardManager.java
index 9f88c70..4742b2d 100644
--- a/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardManager.java
+++ b/src/org/lineageos/lineageparts/privacyguard/PrivacyGuardManager.java
@@ -121,7 +121,8 @@ public class PrivacyGuardManager extends SettingsPreferenceFragment
         mLoadingContainer = mActivity.findViewById(R.id.loading_container);
 
         // get shared preference
-        mPreferences = mActivity.getSharedPreferences("privacy_guard_manager", Activity.MODE_PRIVATE);
+        mPreferences = mActivity.getSharedPreferences("privacy_guard_manager",
+                Activity.MODE_PRIVATE);
         if (savedInstanceState == null && !mPreferences.getBoolean("first_help_shown", false)) {
             showHelp();
         }
diff --git a/src/org/lineageos/lineageparts/profiles/AppGroupConfig.java b/src/org/lineageos/lineageparts/profiles/AppGroupConfig.java
index 46c86a3..e4ebb4a 100644
--- a/src/org/lineageos/lineageparts/profiles/AppGroupConfig.java
+++ b/src/org/lineageos/lineageparts/profiles/AppGroupConfig.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,7 +20,6 @@ package org.lineageos.lineageparts.profiles;
 import android.app.AlertDialog;
 import android.app.Dialog;
 import android.app.NotificationGroup;
-import android.content.DialogInterface;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
@@ -36,9 +36,7 @@ import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
 import android.widget.AdapterView.AdapterContextMenuInfo;
-import android.widget.AdapterView.OnItemClickListener;
 import android.widget.ListView;
 import android.widget.Toast;
 
@@ -91,7 +89,7 @@ public class AppGroupConfig extends SettingsPreferenceFragment
 
         final Bundle args = getArguments();
         if (args != null) {
-            mNotificationGroup = (NotificationGroup) args.getParcelable("NotificationGroup");
+            mNotificationGroup = args.getParcelable("NotificationGroup");
             mPackageManager = getPackageManager();
             mAppAdapter = new PackageListAdapter(getActivity());
 
@@ -116,7 +114,8 @@ public class AppGroupConfig extends SettingsPreferenceFragment
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
         return super.onCreateView(inflater, container, savedInstanceState);
     }
 
@@ -152,7 +151,8 @@ public class AppGroupConfig extends SettingsPreferenceFragment
             generalPrefs.addPreference(mNamePreference);
         }
 
-        PreferenceGroup applicationsList = (PreferenceGroup) prefSet.findPreference("applications_list");
+        PreferenceGroup applicationsList =
+                (PreferenceGroup) prefSet.findPreference("applications_list");
         if (applicationsList != null) {
             applicationsList.removeAll();
             for (String pkg : mNotificationGroup.getPackages()) {
@@ -208,13 +208,14 @@ public class AppGroupConfig extends SettingsPreferenceFragment
     @Override
     public boolean onPreferenceChange(Preference preference, Object newValue) {
         if (preference == mNamePreference) {
-            String name = mNamePreference.getName().toString();
+            String name = mNamePreference.getName();
             if (!name.equals(mNotificationGroup.getName())) {
                 if (!mProfileManager.notificationGroupExists(name)) {
                     mNotificationGroup.setName(name);
                 } else {
                     mNamePreference.setName(mNotificationGroup.getName());
-                    Toast.makeText(getActivity(), R.string.duplicate_appgroup_name, Toast.LENGTH_LONG).show();
+                    Toast.makeText(getActivity(), R.string.duplicate_appgroup_name,
+                            Toast.LENGTH_LONG).show();
                 }
             }
         }
@@ -256,54 +257,31 @@ public class AppGroupConfig extends SettingsPreferenceFragment
                 builder.setTitle(R.string.profile_choose_app);
                 builder.setView(list);
                 dialog = builder.create();
-                list.setOnItemClickListener(new OnItemClickListener() {
-                    @Override
-                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                        PackageItem info = (PackageItem) parent.getItemAtPosition(position);
-                        mNotificationGroup.addPackage(info.packageName);
-                        updatePackages();
-                        dialog.cancel();
-                    }
+                list.setOnItemClickListener((parent, view, position, id1) -> {
+                    PackageItem info = (PackageItem) parent.getItemAtPosition(position);
+                    mNotificationGroup.addPackage(info.packageName);
+                    updatePackages();
+                    dialog.cancel();
                 });
                 break;
             case DELETE_CONFIRM:
                 builder.setMessage(R.string.profile_app_delete_confirm);
                 builder.setTitle(R.string.profile_menu_delete_title);
                 builder.setIconAttribute(android.R.attr.alertDialogIcon);
-                builder.setPositiveButton(android.R.string.yes,
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                doDelete();
-                            }
-                        });
-                builder.setNegativeButton(android.R.string.no,
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                            }
-                        });
+                builder.setPositiveButton(android.R.string.yes, (dialog1, which) -> doDelete());
+                builder.setNegativeButton(android.R.string.no, null);
                 dialog = builder.create();
                 break;
             case DELETE_GROUP_CONFIRM:
                 builder.setMessage(R.string.profile_delete_appgroup);
                 builder.setTitle(R.string.profile_menu_delete_title);
                 builder.setIconAttribute(android.R.attr.alertDialogIcon);
-                builder.setPositiveButton(android.R.string.yes,
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                mProfileManager.removeNotificationGroup(mNotificationGroup);
-                                mNotificationGroup = null;
-                                finish();
-                            }
-                        });
-                builder.setNegativeButton(android.R.string.no,
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                            }
-                        });
+                builder.setPositiveButton(android.R.string.yes, (dialog2, which) -> {
+                    mProfileManager.removeNotificationGroup(mNotificationGroup);
+                    mNotificationGroup = null;
+                    finish();
+                });
+                builder.setNegativeButton(android.R.string.no, null);
                 dialog = builder.create();
                 break;
             default:
diff --git a/src/org/lineageos/lineageparts/profiles/AppGroupList.java b/src/org/lineageos/lineageparts/profiles/AppGroupList.java
index 77d710e..86e088a 100644
--- a/src/org/lineageos/lineageparts/profiles/AppGroupList.java
+++ b/src/org/lineageos/lineageparts/profiles/AppGroupList.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,7 +20,6 @@ package org.lineageos.lineageparts.profiles;
 import android.annotation.Nullable;
 import android.app.AlertDialog;
 import android.app.NotificationGroup;
-import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceScreen;
@@ -72,12 +72,7 @@ public class AppGroupList extends SettingsPreferenceFragment {
         final FloatingActionButton fab = getFloatingActionButton();
         fab.setImageResource(R.drawable.ic_menu_add_white);
         fab.setContentDescription(getString(R.string.profiles_add));
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                addAppGroup();
-            }
-        });
+        fab.setOnClickListener(v -> addAppGroup());
         fab.setVisibility(View.VISIBLE);
     }
 
@@ -117,19 +112,16 @@ public class AppGroupList extends SettingsPreferenceFragment {
         builder.setTitle(R.string.profile_new_appgroup);
         builder.setView(content);
 
-        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                String name = entry.getText().toString();
-                if (!mProfileManager.notificationGroupExists(name)) {
-                    NotificationGroup newGroup = new NotificationGroup(name);
-                    mProfileManager.addNotificationGroup(newGroup);
-
-                    refreshList();
-                } else {
-                    Toast.makeText(getActivity(),
-                            R.string.duplicate_appgroup_name, Toast.LENGTH_LONG).show();
-                }
+        builder.setPositiveButton(android.R.string.ok, (dialog, which) -> {
+            String name = entry.getText().toString();
+            if (!mProfileManager.notificationGroupExists(name)) {
+                NotificationGroup newGroup = new NotificationGroup(name);
+                mProfileManager.addNotificationGroup(newGroup);
+
+                refreshList();
+            } else {
+                Toast.makeText(getActivity(),
+                        R.string.duplicate_appgroup_name, Toast.LENGTH_LONG).show();
             }
         });
         builder.setNegativeButton(android.R.string.cancel, null);
diff --git a/src/org/lineageos/lineageparts/profiles/NFCProfileSelect.java b/src/org/lineageos/lineageparts/profiles/NFCProfileSelect.java
index 89c9f6f..cb43a26 100644
--- a/src/org/lineageos/lineageparts/profiles/NFCProfileSelect.java
+++ b/src/org/lineageos/lineageparts/profiles/NFCProfileSelect.java
@@ -21,10 +21,7 @@ import java.util.UUID;
 
 import android.app.Activity;
 import android.app.AlertDialog.Builder;
-import android.content.DialogInterface;
 import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
 import android.widget.Toast;
 
 import lineageos.app.Profile;
@@ -58,12 +55,7 @@ public class NFCProfileSelect extends Activity {
         setContentView(R.layout.nfc_select);
         setTitle(R.string.profile_unknown_nfc_tag);
 
-        findViewById(R.id.add_tag).setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                showProfileSelectionDialog();
-            }
-        });
+        findViewById(R.id.add_tag).setOnClickListener(v -> showProfileSelectionDialog());
     }
 
     @Override
@@ -87,30 +79,19 @@ public class NFCProfileSelect extends Activity {
 
         Builder builder = new Builder(this);
         builder.setTitle(R.string.profile_settings_title);
-        builder.setSingleChoiceItems(profileNames, currentChoice, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                currentChoice = which;
-            }
-        });
-        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                if (currentChoice != defaultChoice) {
-                    Profile profile = profiles[currentChoice];
-                    profile.addSecondaryUuid(mProfileUuid);
-                    mProfileManager.updateProfile(profile);
-                    Toast.makeText(NFCProfileSelect.this, R.string.profile_write_success, Toast.LENGTH_LONG).show();
-                }
-                finish();
-            }
-        });
-        builder.setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                finish();
+        builder.setSingleChoiceItems(profileNames, currentChoice, (dialog, which) ->
+                currentChoice = which);
+        builder.setPositiveButton(android.R.string.ok, (dialog, which) -> {
+            if (currentChoice != defaultChoice) {
+                Profile profile = profiles[currentChoice];
+                profile.addSecondaryUuid(mProfileUuid);
+                mProfileManager.updateProfile(profile);
+                Toast.makeText(NFCProfileSelect.this, R.string.profile_write_success,
+                        Toast.LENGTH_LONG).show();
             }
+            finish();
         });
+        builder.setNegativeButton(android.R.string.cancel, (dialog, which) -> finish());
         builder.show();
     }
 }
diff --git a/src/org/lineageos/lineageparts/profiles/NamePreference.java b/src/org/lineageos/lineageparts/profiles/NamePreference.java
index f4184ea..4ec5b70 100644
--- a/src/org/lineageos/lineageparts/profiles/NamePreference.java
+++ b/src/org/lineageos/lineageparts/profiles/NamePreference.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -42,7 +43,7 @@ public class NamePreference extends Preference implements
      */
     public NamePreference(Context context, String name) {
         super(context);
-        mName = name.toString();
+        mName = name;
         init();
     }
 
@@ -73,17 +74,17 @@ public class NamePreference extends Preference implements
     }
 
     public void setName(String name) {
-        mName = (name.toString());
+        mName = name;
         updatePreferenceViews();
     }
 
     public String getName() {
-        return(mName.toString());
+        return mName;
     }
 
     private void updatePreferenceViews() {
         if (mNameView != null) {
-            mNameView.setText(mName.toString());
+            mNameView.setText(mName);
         }
     }
 
@@ -94,7 +95,7 @@ public class NamePreference extends Preference implements
             if (context != null) {
                 final EditText entry = new EditText(context);
                 entry.setSingleLine();
-                entry.setText(mName.toString());
+                entry.setText(mName);
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(context);
                 builder.setTitle(R.string.rename_dialog_title);
@@ -105,8 +106,8 @@ public class NamePreference extends Preference implements
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 String value = entry.getText().toString();
-                                mName = value.toString();
-                                mNameView.setText(value.toString());
+                                mName = value;
+                                mNameView.setText(value);
                                 callChangeListener(this);
                             }
                         });
diff --git a/src/org/lineageos/lineageparts/profiles/ProfilesSettings.java b/src/org/lineageos/lineageparts/profiles/ProfilesSettings.java
index aaff296..7bcdc54 100644
--- a/src/org/lineageos/lineageparts/profiles/ProfilesSettings.java
+++ b/src/org/lineageos/lineageparts/profiles/ProfilesSettings.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2012 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,6 @@ import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.os.Bundle;
@@ -215,16 +215,12 @@ public class ProfilesSettings extends SettingsPreferenceFragment
                 .setTitle(R.string.profile_reset_title)
                 .setIconAttribute(android.R.attr.alertDialogIcon)
                 .setMessage(R.string.profile_reset_message)
-                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int id) {
-                        mProfileManager.resetAll();
-                        mProfileManager.setActiveProfile(
-                                mProfileManager.getActiveProfile().getUuid());
-                        dialog.dismiss();
-                        refreshList();
-
-                    }
+                .setPositiveButton(android.R.string.ok, (dialog, id) -> {
+                    mProfileManager.resetAll();
+                    mProfileManager.setActiveProfile(
+                            mProfileManager.getActiveProfile().getUuid());
+                    dialog.dismiss();
+                    refreshList();
                 })
                 .setNegativeButton(R.string.cancel, null)
                 .show();
diff --git a/src/org/lineageos/lineageparts/profiles/SetupActionsFragment.java b/src/org/lineageos/lineageparts/profiles/SetupActionsFragment.java
index 139f147..b37a328 100644
--- a/src/org/lineageos/lineageparts/profiles/SetupActionsFragment.java
+++ b/src/org/lineageos/lineageparts/profiles/SetupActionsFragment.java
@@ -29,7 +29,6 @@ import android.content.DialogInterface;
 import android.content.Intent;
 import android.location.LocationManager;
 import android.media.AudioManager;
-import android.media.RingtoneManager;
 import android.net.ConnectivityManager;
 import android.net.wifi.WifiManager;
 import android.nfc.NfcManager;
@@ -52,7 +51,6 @@ import android.view.ViewGroup;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.AdapterView;
 import android.widget.CheckBox;
-import android.widget.CompoundButton;
 import android.widget.EditText;
 import android.widget.ListView;
 import android.widget.SeekBar;
@@ -586,24 +584,16 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         if (mProfile.getUuid().equals(current.getUuid())) {
             AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
             builder.setMessage(getString(R.string.profile_remove_current_profile));
-            builder.setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    dialog.dismiss();
-                }
-            });
+            builder.setNegativeButton(R.string.cancel, (dialog, which) -> dialog.dismiss());
             return builder.create();
         }
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
         builder.setMessage(getString(R.string.profile_remove_dialog_message, mProfile.getName()));
-        builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                dialog.dismiss();
-                mProfileManager.removeProfile(mProfile);
-                finishFragment();
-            }
+        builder.setPositiveButton(R.string.yes, (dialog, which) -> {
+            dialog.dismiss();
+            mProfileManager.removeProfile(mProfile);
+            finishFragment();
         });
         builder.setNegativeButton(R.string.no, null);
         return builder.create();
@@ -623,16 +613,12 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         }
 
         builder.setTitle(R.string.profile_lockmode_title);
-        builder.setSingleChoiceItems(lockEntries, defaultIndex,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int item) {
-                        mProfile.setScreenLockMode(new LockSettings(LOCKMODE_MAPPING[item]));
-                        updateProfile();
-                        mAdapter.notifyDataSetChanged();
-                        dialog.dismiss();
-                    }
-                });
+        builder.setSingleChoiceItems(lockEntries, defaultIndex, (dialog, item) -> {
+            mProfile.setScreenLockMode(new LockSettings(LOCKMODE_MAPPING[item]));
+            updateProfile();
+            mAdapter.notifyDataSetChanged();
+            dialog.dismiss();
+        });
 
         builder.setNegativeButton(android.R.string.cancel, null);
         return builder.create();
@@ -681,16 +667,12 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         }
 
         builder.setTitle(R.string.notification_light_title);
-        builder.setSingleChoiceItems(notificationLightEntries, defaultIndex,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int item) {
-                        mProfile.setNotificationLightMode(NOTIFICATION_LIGHT_MAPPING[item]);
-                        updateProfile();
-                        mAdapter.notifyDataSetChanged();
-                        dialog.dismiss();
-                    }
-                });
+        builder.setSingleChoiceItems(notificationLightEntries, defaultIndex, (dialog, item) -> {
+            mProfile.setNotificationLightMode(NOTIFICATION_LIGHT_MAPPING[item]);
+            updateProfile();
+            mAdapter.notifyDataSetChanged();
+            dialog.dismiss();
+        });
 
         builder.setNegativeButton(android.R.string.cancel, null);
         return builder.create();
@@ -711,43 +693,30 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         }
 
         builder.setTitle(R.string.profile_airplanemode_title);
-        builder.setSingleChoiceItems(connectionNames, defaultIndex,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int item) {
-                        switch (item) {
-                            case 0: // disable override
-                                setting.setOverride(false);
-                                break;
-                            case 1: // enable override, disable
-                                setting.setOverride(true);
-                                setting.setValue(0);
-                                break;
-                            case 2: // enable override, enable
-                                setting.setOverride(true);
-                                setting.setValue(1);
-                                break;
-                        }
-                        mProfile.setAirplaneMode(setting);
-                        mAdapter.notifyDataSetChanged();
-                        updateProfile();
-                        dialog.dismiss();
-                    }
-                });
+        builder.setSingleChoiceItems(connectionNames, defaultIndex, (dialog, item) -> {
+            switch (item) {
+                case 0: // disable override
+                    setting.setOverride(false);
+                    break;
+                case 1: // enable override, disable
+                    setting.setOverride(true);
+                    setting.setValue(0);
+                    break;
+                case 2: // enable override, enable
+                    setting.setOverride(true);
+                    setting.setValue(1);
+                    break;
+            }
+            mProfile.setAirplaneMode(setting);
+            mAdapter.notifyDataSetChanged();
+            updateProfile();
+            dialog.dismiss();
+        });
 
         builder.setNegativeButton(android.R.string.cancel, null);
         return builder.create();
     }
 
-    private void requestProfileRingMode() {
-        // Launch the ringtone picker
-        Intent intent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
-        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, false);
-        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_SILENT, true);
-        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_RINGTONE);
-        startActivityForResult(intent, RINGTONE_REQUEST_CODE);
-    }
-
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -799,33 +768,29 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         }
 
         builder.setTitle(R.string.ring_mode_title);
-        builder.setSingleChoiceItems(names, defaultIndex,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int item) {
-                        switch (item) {
-                            case 0: // enable override, normal
-                                setting.setOverride(true);
-                                setting.setValue(values[0]);
-                                break;
-                            case 1: // enable override, vibrate
-                                setting.setOverride(true);
-                                setting.setValue(values[1]);
-                                break;
-                            case 2: // enable override, mute
-                                setting.setOverride(true);
-                                setting.setValue(values[2]);
-                                break;
-                            case 3:
-                                setting.setOverride(false);
-                                break;
-                        }
-                        mProfile.setRingMode(setting);
-                        mAdapter.notifyDataSetChanged();
-                        updateProfile();
-                        dialog.dismiss();
-                    }
-                });
+        builder.setSingleChoiceItems(names, defaultIndex, (dialog, item) -> {
+            switch (item) {
+                case 0: // enable override, normal
+                    setting.setOverride(true);
+                    setting.setValue(values[0]);
+                    break;
+                case 1: // enable override, vibrate
+                    setting.setOverride(true);
+                    setting.setValue(values[1]);
+                    break;
+                case 2: // enable override, mute
+                    setting.setOverride(true);
+                    setting.setValue(values[2]);
+                    break;
+                case 3:
+                    setting.setOverride(false);
+                    break;
+            }
+            mProfile.setRingMode(setting);
+            mAdapter.notifyDataSetChanged();
+            updateProfile();
+            dialog.dismiss();
+        });
 
         builder.setNegativeButton(android.R.string.cancel, null);
         return builder.create();
@@ -852,29 +817,25 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         }
 
         builder.setTitle(ConnectionOverrideItem.getConnectionTitle(getContext(), setting));
-        builder.setSingleChoiceItems(connectionNames, defaultIndex,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int item) {
-                        switch (item) {
-                            case 0: // disable override
-                                setting.setOverride(false);
-                                break;
-                            case 1: // enable override, disable
-                                setting.setOverride(true);
-                                setting.setValue(0);
-                                break;
-                            case 2: // enable override, enable
-                                setting.setOverride(true);
-                                setting.setValue(1);
-                                break;
-                        }
-                        mProfile.setConnectionSettings(setting);
-                        mAdapter.notifyDataSetChanged();
-                        updateProfile();
-                        dialog.dismiss();
-                    }
-                });
+        builder.setSingleChoiceItems(connectionNames, defaultIndex, (dialog, item) -> {
+            switch (item) {
+                case 0: // disable override
+                    setting.setOverride(false);
+                    break;
+                case 1: // enable override, disable
+                    setting.setOverride(true);
+                    setting.setValue(0);
+                    break;
+                case 2: // enable override, enable
+                    setting.setOverride(true);
+                    setting.setValue(1);
+                    break;
+            }
+            mProfile.setConnectionSettings(setting);
+            mAdapter.notifyDataSetChanged();
+            updateProfile();
+            dialog.dismiss();
+        });
 
         builder.setNegativeButton(android.R.string.cancel, null);
         return builder.create();
@@ -885,18 +846,13 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
         builder.setTitle(VolumeStreamItem.getNameForStream(streamId));
 
-        final AudioManager am = (AudioManager) getActivity().getSystemService(Context.AUDIO_SERVICE);
         final LayoutInflater inflater = LayoutInflater.from(getActivity());
         final View view = inflater.inflate(R.layout.dialog_profiles_volume_override, null);
         final SeekBar seekBar = (SeekBar) view.findViewById(R.id.seekbar);
         final CheckBox override = (CheckBox) view.findViewById(R.id.checkbox);
         override.setChecked(streamSettings.isOverride());
-        override.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                seekBar.setEnabled(isChecked);
-            }
-        });
+        override.setOnCheckedChangeListener((buttonView, isChecked) ->
+                seekBar.setEnabled(isChecked));
         final SeekBarVolumizer volumizer = new SeekBarVolumizer(getActivity(), streamId, null,
                 null);
         volumizer.start();
@@ -904,26 +860,20 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         seekBar.setEnabled(streamSettings.isOverride());
 
         builder.setView(view);
-        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                int value = seekBar.getProgress();
-                streamSettings.setOverride(override.isChecked());
-                streamSettings.setValue(value);
-                mProfile.setStreamSettings(streamSettings);
-                mAdapter.notifyDataSetChanged();
-                updateProfile();
-            }
+        builder.setPositiveButton(android.R.string.ok, (dialog, which) -> {
+            int value = seekBar.getProgress();
+            streamSettings.setOverride(override.isChecked());
+            streamSettings.setValue(value);
+            mProfile.setStreamSettings(streamSettings);
+            mAdapter.notifyDataSetChanged();
+            updateProfile();
         });
         builder.setNegativeButton(android.R.string.cancel, null);
-        setOnDismissListener(new DialogInterface.OnDismissListener() {
-            @Override
-            public void onDismiss(DialogInterface dialogInterface) {
-                if (volumizer != null) {
-                    volumizer.stop();
-                }
-                setOnDismissListener(null); // re-set this for next dialog
+        setOnDismissListener(dialogInterface -> {
+            if (volumizer != null) {
+                volumizer.stop();
             }
+            setOnDismissListener(null); // re-set this for next dialog
         });
         return builder.create();
     }
@@ -937,34 +887,22 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         final SeekBar seekBar = (SeekBar) view.findViewById(R.id.seekbar);
         final CheckBox override = (CheckBox) view.findViewById(R.id.checkbox);
         override.setChecked(brightnessSettings.isOverride());
-        override.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                seekBar.setEnabled(isChecked);
-            }
-        });
+        override.setOnCheckedChangeListener((buttonView, isChecked) ->
+                seekBar.setEnabled(isChecked));
         seekBar.setEnabled(brightnessSettings.isOverride());
         seekBar.setMax(255);
         seekBar.setProgress(brightnessSettings.getValue());
         builder.setView(view);
-        builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                int value = seekBar.getProgress();
-                brightnessSettings.setValue(value);
-                brightnessSettings.setOverride(override.isChecked());
-                mProfile.setBrightness(brightnessSettings);
-                mAdapter.notifyDataSetChanged();
-                updateProfile();
-                dialog.dismiss();
-            }
-        });
-        builder.setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                dialog.dismiss();
-            }
+        builder.setPositiveButton(android.R.string.ok, (dialog, which) -> {
+            int value = seekBar.getProgress();
+            brightnessSettings.setValue(value);
+            brightnessSettings.setOverride(override.isChecked());
+            mProfile.setBrightness(brightnessSettings);
+            mAdapter.notifyDataSetChanged();
+            updateProfile();
+            dialog.dismiss();
         });
+        builder.setNegativeButton(android.R.string.cancel, (dialog, which) -> dialog.dismiss());
         return builder.create();
     }
 
@@ -979,14 +917,11 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         final AlertDialog alertDialog = new AlertDialog.Builder(getActivity())
                 .setTitle(R.string.rename_dialog_title)
                 .setView(dialogView)
-                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        String value = entry.getText().toString();
-                        mProfile.setName(value);
-                        mAdapter.notifyDataSetChanged();
-                        updateProfile();
-                    }
+                .setPositiveButton(android.R.string.ok, (dialog, which) -> {
+                    String value = entry.getText().toString();
+                    mProfile.setName(value);
+                    mAdapter.notifyDataSetChanged();
+                    updateProfile();
                 })
                 .setNegativeButton(android.R.string.cancel, null)
                 .create();
@@ -1010,13 +945,10 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
                 alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(!empty);
             }
         });
-        alertDialog.setOnShowListener(new DialogInterface.OnShowListener() {
-            @Override
-            public void onShow(DialogInterface dialog) {
-                InputMethodManager imm = (InputMethodManager)
-                        getSystemService(Context.INPUT_METHOD_SERVICE);
-                imm.showSoftInput(entry, InputMethodManager.SHOW_IMPLICIT);
-            }
+        alertDialog.setOnShowListener(dialog -> {
+            InputMethodManager imm = (InputMethodManager)
+                    getSystemService(Context.INPUT_METHOD_SERVICE);
+            imm.showSoftInput(entry, InputMethodManager.SHOW_IMPLICIT);
         });
         return alertDialog;
     }
@@ -1031,19 +963,16 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
             items[i] = notificationGroups[i].getName();
             checked[i] = mProfile.getProfileGroup(notificationGroups[i].getUuid()) != null;
         }
-        DialogInterface.OnMultiChoiceClickListener listener =
-                new DialogInterface.OnMultiChoiceClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which, boolean isChecked) {
-                        if (isChecked) {
-                            mProfile.addProfileGroup(new ProfileGroup(notificationGroups[which].getUuid(), false));
-                        } else {
-                            mProfile.removeProfileGroup(notificationGroups[which].getUuid());
-                        }
-                        updateProfile();
-                        rebuildItemList();
-                    }
-                };
+        DialogInterface.OnMultiChoiceClickListener listener = (dialog, which, isChecked) -> {
+            if (isChecked) {
+                mProfile.addProfileGroup(new ProfileGroup(notificationGroups[which].getUuid(),
+                        false));
+            } else {
+                mProfile.removeProfileGroup(notificationGroups[which].getUuid());
+            }
+            updateProfile();
+            rebuildItemList();
+        };
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
                 .setMultiChoiceItems(items, checked, listener)
@@ -1062,20 +991,13 @@ public class SetupActionsFragment extends SettingsPreferenceFragment
         if (mNewProfileMode) {
             showButtonBar(true);
 
-            getBackButton().setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    finishPreferencePanel(SetupActionsFragment.this, Activity.RESULT_OK, null);
-                }
-            });
+            getBackButton().setOnClickListener(v ->
+                    finishPreferencePanel(SetupActionsFragment.this, Activity.RESULT_OK, null));
 
             getNextButton().setText(R.string.finish);
-            getNextButton().setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    mProfileManager.addProfile(mProfile);
-                    finishPreferencePanel(SetupActionsFragment.this, Activity.RESULT_OK, null);
-                }
+            getNextButton().setOnClickListener(v -> {
+                mProfileManager.addProfile(mProfile);
+                finishPreferencePanel(SetupActionsFragment.this, Activity.RESULT_OK, null);
             });
         }
         return view;
diff --git a/src/org/lineageos/lineageparts/profiles/SetupTriggersFragment.java b/src/org/lineageos/lineageparts/profiles/SetupTriggersFragment.java
index bccd658..fa892a5 100644
--- a/src/org/lineageos/lineageparts/profiles/SetupTriggersFragment.java
+++ b/src/org/lineageos/lineageparts/profiles/SetupTriggersFragment.java
@@ -126,27 +126,20 @@ public class SetupTriggersFragment extends SettingsPreferenceFragment {
 
         if (mNewProfileMode) {
             showButtonBar(true);
-            getNextButton().setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    Bundle args = new Bundle();
-                    args.putParcelable(ProfilesSettings.EXTRA_PROFILE,  mProfile);
-                    args.putBoolean(ProfilesSettings.EXTRA_NEW_PROFILE, mNewProfileMode);
-
-                    PartsActivity pa = (PartsActivity) getActivity();
-                    pa.startPreferencePanel(SetupActionsFragment.class.getCanonicalName(), args,
-                            R.string.profile_profile_manage, null,
-                            SetupTriggersFragment.this, REQUEST_SETUP_ACTIONS);
-                }
+            getNextButton().setOnClickListener(v -> {
+                Bundle args = new Bundle();
+                args.putParcelable(ProfilesSettings.EXTRA_PROFILE,  mProfile);
+                args.putBoolean(ProfilesSettings.EXTRA_NEW_PROFILE, mNewProfileMode);
+
+                PartsActivity pa = (PartsActivity) getActivity();
+                pa.startPreferencePanel(SetupActionsFragment.class.getCanonicalName(), args,
+                        R.string.profile_profile_manage, null,
+                        SetupTriggersFragment.this, REQUEST_SETUP_ACTIONS);
             });
 
             // back button
-            getBackButton().setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    finishPreferencePanel(SetupTriggersFragment.this, Activity.RESULT_CANCELED, null);
-                }
-            });
+            getBackButton().setOnClickListener(v -> finishPreferencePanel(
+                    SetupTriggersFragment.this, Activity.RESULT_CANCELED, null));
         }
         return root;
     }
@@ -161,6 +154,4 @@ public class SetupTriggersFragment extends SettingsPreferenceFragment {
             }
         }
     }
-
-
 }
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/BaseItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/BaseItem.java
index de04a25..c2f248a 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/BaseItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/BaseItem.java
@@ -8,10 +8,6 @@ import android.widget.TextView;
 
 import android.support.v7.preference.R;
 
-/**
- * Created by shade on 9/12/16.
- */
-
 public abstract class BaseItem implements Item {
 
     protected abstract String getTitle();
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/BrightnessItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/BrightnessItem.java
index c711044..3ad5bda 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/BrightnessItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/BrightnessItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.profiles.BrightnessSettings;
 
 public class BrightnessItem extends BaseItem {
-    BrightnessSettings mSettings;
+    private BrightnessSettings mSettings;
 
     public BrightnessItem(BrightnessSettings brightnessSettings) {
         if (brightnessSettings == null) {
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/DozeModeItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/DozeModeItem.java
index c341c6c..6d7d6aa 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/DozeModeItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/DozeModeItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.app.Profile;
 
 public class DozeModeItem extends BaseItem {
-    Profile mProfile;
+    private Profile mProfile;
 
     public DozeModeItem(Profile profile) {
        mProfile = profile;
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/LockModeItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/LockModeItem.java
index 9b742f1..73df705 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/LockModeItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/LockModeItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.app.Profile;
 
 public class LockModeItem extends BaseItem {
-    Profile mProfile;
+    private Profile mProfile;
 
     public LockModeItem(Profile profile) {
        mProfile = profile;
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/NotificationLightModeItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/NotificationLightModeItem.java
index 2dfb59b..e971fd7 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/NotificationLightModeItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/NotificationLightModeItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.app.Profile;
 
 public class NotificationLightModeItem extends BaseItem {
-    Profile mProfile;
+    private Profile mProfile;
 
     public NotificationLightModeItem(Profile profile) {
        mProfile = profile;
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/ProfileNameItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/ProfileNameItem.java
index 57e3f76..efed402 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/ProfileNameItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/ProfileNameItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -20,7 +21,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.app.Profile;
 
 public class ProfileNameItem extends BaseItem {
-    Profile mProfile;
+    private Profile mProfile;
 
     public ProfileNameItem(Profile profile) {
         this.mProfile = profile;
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/RingModeItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/RingModeItem.java
index 3078f60..0897932 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/RingModeItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/RingModeItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,7 +22,7 @@ import org.lineageos.lineageparts.profiles.actions.ItemListAdapter;
 import lineageos.profiles.RingModeSettings;
 
 public class RingModeItem extends BaseItem {
-    RingModeSettings mSettings;
+    private RingModeSettings mSettings;
 
     public RingModeItem(RingModeSettings ringModeSettings) {
         if (ringModeSettings == null) {
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/TriggerItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/TriggerItem.java
index bc0e362..3c3b790 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/TriggerItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/TriggerItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -30,8 +31,8 @@ public class TriggerItem extends BaseItem {
     // not in Profile.TriggerType, but we need it.
     public static final int NFC = 2;
 
-    Profile mProfile;
-    int mTriggerType;
+    private Profile mProfile;
+    private int mTriggerType;
 
     public TriggerItem(Profile profile, int whichTrigger) {
         mProfile = profile;
diff --git a/src/org/lineageos/lineageparts/profiles/actions/item/VolumeStreamItem.java b/src/org/lineageos/lineageparts/profiles/actions/item/VolumeStreamItem.java
index 975d858..6b2e6ee 100644
--- a/src/org/lineageos/lineageparts/profiles/actions/item/VolumeStreamItem.java
+++ b/src/org/lineageos/lineageparts/profiles/actions/item/VolumeStreamItem.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -17,7 +18,6 @@ package org.lineageos.lineageparts.profiles.actions.item;
 
 import android.content.Context;
 import android.media.AudioManager;
-import android.provider.Settings;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
diff --git a/src/org/lineageos/lineageparts/profiles/triggers/BluetoothTriggerFragment.java b/src/org/lineageos/lineageparts/profiles/triggers/BluetoothTriggerFragment.java
index 0bd83f5..26901a2 100644
--- a/src/org/lineageos/lineageparts/profiles/triggers/BluetoothTriggerFragment.java
+++ b/src/org/lineageos/lineageparts/profiles/triggers/BluetoothTriggerFragment.java
@@ -143,14 +143,11 @@ public class BluetoothTriggerFragment extends ListFragment {
 
         new AlertDialog.Builder(getActivity())
                 .setTitle(R.string.profile_trigger_configure)
-                .setSingleChoiceItems(entries, currentItem, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        mProfile.setTrigger(triggerType, triggerId, valueInts[which], triggerName);
-                        mProfileManager.updateProfile(mProfile);
-                        reloadTriggerListItems();
-                        dialog.dismiss();
-                    }
+                .setSingleChoiceItems(entries, currentItem, (dialog, which) -> {
+                    mProfile.setTrigger(triggerType, triggerId, valueInts[which], triggerName);
+                    mProfileManager.updateProfile(mProfile);
+                    reloadTriggerListItems();
+                    dialog.dismiss();
                 })
                 .show();
     }
@@ -162,16 +159,14 @@ public class BluetoothTriggerFragment extends ListFragment {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
         mEmptyView = inflater.inflate(R.layout.profile_bluetooth_empty_view, container, false);
-        mEmptyView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent bluetoothSettings = new Intent();
-                bluetoothSettings.setAction(
-                        Settings.ACTION_BLUETOOTH_SETTINGS);
-                startActivity(bluetoothSettings);
-            }
+        mEmptyView.setOnClickListener(v -> {
+            Intent bluetoothSettings = new Intent();
+            bluetoothSettings.setAction(
+                    Settings.ACTION_BLUETOOTH_SETTINGS);
+            startActivity(bluetoothSettings);
         });
 
         ViewGroup view = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);
diff --git a/src/org/lineageos/lineageparts/profiles/triggers/NfcTriggerFragment.java b/src/org/lineageos/lineageparts/profiles/triggers/NfcTriggerFragment.java
index adb684c..cc62b63 100644
--- a/src/org/lineageos/lineageparts/profiles/triggers/NfcTriggerFragment.java
+++ b/src/org/lineageos/lineageparts/profiles/triggers/NfcTriggerFragment.java
@@ -98,10 +98,11 @@ public class NfcTriggerFragment extends Fragment implements NFCProfileTagCallbac
 
     private void enableTagWriteMode() {
         IntentFilter tagDetected = new IntentFilter(NfcAdapter.ACTION_TAG_DISCOVERED);
-        mWriteTagFilters = new IntentFilter[] {
+        IntentFilter[] writeTagFilters = new IntentFilter[] {
             tagDetected
         };
-        mNfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), mWriteTagFilters, null);
+        mNfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), writeTagFilters,
+                null);
     }
 
     @Override
diff --git a/src/org/lineageos/lineageparts/profiles/triggers/WifiTriggerFragment.java b/src/org/lineageos/lineageparts/profiles/triggers/WifiTriggerFragment.java
index 9d5ad38..19999d0 100644
--- a/src/org/lineageos/lineageparts/profiles/triggers/WifiTriggerFragment.java
+++ b/src/org/lineageos/lineageparts/profiles/triggers/WifiTriggerFragment.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,7 +19,6 @@ package org.lineageos.lineageparts.profiles.triggers;
 import android.app.AlertDialog;
 import android.app.ListFragment;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.res.Resources;
 import android.net.wifi.WifiConfiguration;
@@ -86,16 +86,14 @@ public class WifiTriggerFragment extends ListFragment {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
         mEmptyView = inflater.inflate(R.layout.profile_wifi_empty_view, container, false);
-        mEmptyView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent wifiSettings = new Intent();
-                wifiSettings.setAction(
-                        Settings.ACTION_WIFI_SETTINGS);
-                startActivity(wifiSettings);
-            }
+        mEmptyView.setOnClickListener(v -> {
+            Intent wifiSettings = new Intent();
+            wifiSettings.setAction(
+                    Settings.ACTION_WIFI_SETTINGS);
+            startActivity(wifiSettings);
         });
 
         ViewGroup view = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);
@@ -163,14 +161,11 @@ public class WifiTriggerFragment extends ListFragment {
 
         new AlertDialog.Builder(getActivity())
                 .setTitle(R.string.profile_trigger_configure)
-                .setSingleChoiceItems(entries, currentItem, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        mProfile.setTrigger(triggerType, triggerId, valueInts[which], triggerName);
-                        mProfileManager.updateProfile(mProfile);
-                        reloadTriggerListItems();
-                        dialog.dismiss();
-                    }
+                .setSingleChoiceItems(entries, currentItem, (dialog, which) -> {
+                    mProfile.setTrigger(triggerType, triggerId, valueInts[which], triggerName);
+                    mProfileManager.updateProfile(mProfile);
+                    reloadTriggerListItems();
+                    dialog.dismiss();
                 })
                 .show();
     }
diff --git a/src/org/lineageos/lineageparts/statusbar/StatusBarSettings.java b/src/org/lineageos/lineageparts/statusbar/StatusBarSettings.java
index 9f4fb6d..c16bc82 100644
--- a/src/org/lineageos/lineageparts/statusbar/StatusBarSettings.java
+++ b/src/org/lineageos/lineageparts/statusbar/StatusBarSettings.java
@@ -20,7 +20,6 @@ import android.os.Bundle;
 import android.provider.Settings;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceCategory;
-import android.support.v7.preference.PreferenceScreen;
 import android.support.v7.preference.Preference.OnPreferenceChangeListener;
 import android.text.format.DateFormat;
 import android.text.TextUtils;
diff --git a/src/org/lineageos/lineageparts/style/StylePreferences.java b/src/org/lineageos/lineageparts/style/StylePreferences.java
index 7df3fbe..e6167e8 100644
--- a/src/org/lineageos/lineageparts/style/StylePreferences.java
+++ b/src/org/lineageos/lineageparts/style/StylePreferences.java
@@ -22,17 +22,13 @@ import android.app.WallpaperManager;
 import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
-import android.graphics.Color;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
-import android.support.annotation.ColorInt;
-import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v7.preference.Preference;
-import android.support.v7.graphics.Palette;
 import android.text.TextUtils;
 import android.util.Log;
 import android.widget.Toast;
diff --git a/src/org/lineageos/lineageparts/utils/DeviceUtils.java b/src/org/lineageos/lineageparts/utils/DeviceUtils.java
index a487c95..c81897b 100644
--- a/src/org/lineageos/lineageparts/utils/DeviceUtils.java
+++ b/src/org/lineageos/lineageparts/utils/DeviceUtils.java
@@ -1,6 +1,6 @@
 /*
- * Copyright (C) 2016 The CyanogenMod project
- * Copyright (C) 2017 The LineageOS project
+ * Copyright (C) 2016 The CyanogenMod Project
+ * Copyright (C) 2017 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -104,7 +104,8 @@ public class DeviceUtils {
     }
 
     public static boolean deviceSupportsMobileData(Context ctx) {
-        ConnectivityManager cm = (ConnectivityManager) ctx.getSystemService(Context.CONNECTIVITY_SERVICE);
+        ConnectivityManager cm =
+                (ConnectivityManager) ctx.getSystemService(Context.CONNECTIVITY_SERVICE);
         return cm.isNetworkSupported(ConnectivityManager.TYPE_MOBILE);
     }
 
diff --git a/src/org/lineageos/lineageparts/weather/WeatherServiceSettings.java b/src/org/lineageos/lineageparts/weather/WeatherServiceSettings.java
index 58532e2..b8a95eb 100644
--- a/src/org/lineageos/lineageparts/weather/WeatherServiceSettings.java
+++ b/src/org/lineageos/lineageparts/weather/WeatherServiceSettings.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -39,7 +40,6 @@ import android.support.v7.preference.PreferenceViewHolder;
 import android.util.AttributeSet;
 import android.util.Log;
 import android.util.Xml;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
@@ -151,22 +151,12 @@ public class WeatherServiceSettings extends SettingsPreferenceFragment
     private PackageMonitor mPackageMonitor = new PackageMonitor() {
         @Override
         public void onPackageAdded(String packageName, int uid) {
-            mHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    updateAdapter();
-                }
-            });
+            mHandler.post(WeatherServiceSettings.this::updateAdapter);
         }
 
         @Override
         public void onPackageRemoved(String packageName, int uid) {
-            mHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    updateAdapter();
-                }
-            });
+            mHandler.post(WeatherServiceSettings.this::updateAdapter);
         }
     };
 
@@ -225,13 +215,9 @@ public class WeatherServiceSettings extends SettingsPreferenceFragment
             Preference addServicePreference = new Preference(mContext);
             addServicePreference.setTitle(R.string.weather_settings_add_weather_provider);
             addServicePreference.setIcon(R.drawable.ic_menu_add);
-            addServicePreference.setOnPreferenceClickListener(
-                    new Preference.OnPreferenceClickListener() {
-                @Override
-                public boolean onPreferenceClick(Preference preference) {
-                    launchGetWeatherProviders();
-                    return false;
-                }
+            addServicePreference.setOnPreferenceClickListener(preference -> {
+                launchGetWeatherProviders();
+                return false;
             });
             mProvidersCategory.addPreference(addServicePreference);
 
@@ -285,12 +271,9 @@ public class WeatherServiceSettings extends SettingsPreferenceFragment
 
             mRadioButton = (RadioButton) holder.findViewById(R.id.radio);
             mRadioButton.setChecked(mInfo.isActive);
-            mRadioButton.setOnTouchListener(new View.OnTouchListener() {
-                @Override
-                public boolean onTouch(View v, MotionEvent event) {
-                    holder.itemView.onTouchEvent(event);
-                    return false;
-                }
+            mRadioButton.setOnTouchListener((v, event) -> {
+                holder.itemView.onTouchEvent(event);
+                return false;
             });
 
             boolean showSettings = mInfo.settingsComponentName != null;
@@ -302,12 +285,7 @@ public class WeatherServiceSettings extends SettingsPreferenceFragment
             mSettingsButton.setAlpha(mInfo.isActive ? 1f : DISABLED_ALPHA);
             mSettingsButton.setEnabled(mInfo.isActive);
             mSettingsButton.setFocusable(mInfo.isActive);
-            mSettingsButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    launchSettingsActivity(mInfo);
-                }
-            });
+            mSettingsButton.setOnClickListener(v -> launchSettingsActivity(mInfo));
         }
 
         @Override
@@ -452,12 +430,7 @@ public class WeatherServiceSettings extends SettingsPreferenceFragment
         emptyTextView.setText(R.string.weather_settings_no_services_prompt);
 
         Button addProviderButton = (Button) emptyView.findViewById(R.id.add_weather_provider);
-        addProviderButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                launchGetWeatherProviders();
-            }
-        });
+        addProviderButton.setOnClickListener(v -> launchGetWeatherProviders());
 
         contentRoot.addView(emptyView);
         setEmptyView(emptyView);
diff --git a/src/org/lineageos/lineageparts/widget/CustomDialogPreference.java b/src/org/lineageos/lineageparts/widget/CustomDialogPreference.java
index bbb14ba..acc00ec 100644
--- a/src/org/lineageos/lineageparts/widget/CustomDialogPreference.java
+++ b/src/org/lineageos/lineageparts/widget/CustomDialogPreference.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The Android Open Source Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -48,7 +49,8 @@ public class CustomDialogPreference<T extends DialogInterface> extends DialogPre
     }
 
     public boolean isDialogOpen() {
-        return getDialog() != null && getDialog() instanceof Dialog && ((Dialog)getDialog()).isShowing();
+        return getDialog() != null && getDialog() instanceof Dialog &&
+                ((Dialog)getDialog()).isShowing();
     }
 
     public T getDialog() {
diff --git a/src/org/lineageos/lineageparts/widget/LayoutPreference.java b/src/org/lineageos/lineageparts/widget/LayoutPreference.java
index 9acfa47..b11ac19 100644
--- a/src/org/lineageos/lineageparts/widget/LayoutPreference.java
+++ b/src/org/lineageos/lineageparts/widget/LayoutPreference.java
@@ -73,10 +73,6 @@ public class LayoutPreference extends Preference {
     private void setView(View view) {
         setLayoutResource(R.layout.layout_preference_frame);
         setSelectable(false);
-        //final ViewGroup allDetails = (ViewGroup) view.findViewById(R.id.all_details);
-        //if (allDetails != null) {
-        //    forceCustomPadding(allDetails, true /* additive padding */);
-        //}
         mRootView = view;
         setShouldDisableView(false);
     }
diff --git a/src/org/lineageos/lineageparts/widget/SwitchBar.java b/src/org/lineageos/lineageparts/widget/SwitchBar.java
index ee09c05..712f1bd 100644
--- a/src/org/lineageos/lineageparts/widget/SwitchBar.java
+++ b/src/org/lineageos/lineageparts/widget/SwitchBar.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The Android Open Source Project
+ * Copyright (C) 2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -101,12 +102,7 @@ public class SwitchBar extends LinearLayout implements CompoundButton.OnCheckedC
         lp = (MarginLayoutParams) mSwitch.getLayoutParams();
         lp.setMarginEnd(switchBarMarginEnd);
 
-        addOnSwitchChangeListener(new OnSwitchChangeListener() {
-            @Override
-            public void onSwitchChanged(Switch switchView, boolean isChecked) {
-                setTextViewLabel(isChecked);
-            }
-        });
+        addOnSwitchChangeListener((switchView, isChecked) -> setTextViewLabel(isChecked));
 
         setOnClickListener(this);
 
-- 
2.17.1

