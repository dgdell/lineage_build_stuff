From b127f9a3ad91b2a715c87454f8f444107c33998d Mon Sep 17 00:00:00 2001
From: LuK1337 <priv.luk@gmail.com>
Date: Wed, 29 Aug 2018 01:00:07 +0200
Subject: [PATCH] LineageParts: Reenable buttons related settings

Change-Id: I6323e837667d86d5f2e2ca13df7c17259d529643
---
 src/org/lineageos/lineageparts/gestures/KeyHandler.java     | 2 --
 .../lineageparts/input/ButtonBacklightBrightness.java       | 5 -----
 src/org/lineageos/lineageparts/input/ButtonSettings.java    | 6 ------
 3 files changed, 13 deletions(-)

diff --git a/src/org/lineageos/lineageparts/gestures/KeyHandler.java b/src/org/lineageos/lineageparts/gestures/KeyHandler.java
index e182762..30084b7 100644
--- a/src/org/lineageos/lineageparts/gestures/KeyHandler.java
+++ b/src/org/lineageos/lineageparts/gestures/KeyHandler.java
@@ -48,7 +48,6 @@ import android.util.Log;
 import android.util.SparseIntArray;
 import android.view.KeyEvent;
 
-/*
 import com.android.internal.os.DeviceKeyHandler;
 
 import lineageos.providers.LineageSettings;
@@ -408,4 +407,3 @@ public class KeyHandler implements DeviceKeyHandler {
         return pm.getLaunchIntentForPackage(resInfo.get(0).activityInfo.packageName);
     }
 }
-*/
diff --git a/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java b/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
index 17a3081..d51864f 100644
--- a/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
+++ b/src/org/lineageos/lineageparts/input/ButtonBacklightBrightness.java
@@ -74,7 +74,6 @@ public class ButtonBacklightBrightness extends CustomDialogPreference<AlertDialo
             mActiveControl = mKeyboardBrightness;
         }
         */
-        /*
         if (isButtonSupported()) {
             boolean isSingleValue = !context.getResources().getBoolean(
                     com.android.internal.R.bool.config_deviceHasVariableButtonBrightness);
@@ -88,7 +87,6 @@ public class ButtonBacklightBrightness extends CustomDialogPreference<AlertDialo
                     isSingleValue, defaultBrightness);
             mActiveControl = mButtonBrightness;
         }
-        */
 
         updateSummary();
     }
@@ -237,11 +235,8 @@ public class ButtonBacklightBrightness extends CustomDialogPreference<AlertDialo
                 || (deviceKeys & KEY_MASK_MENU) != 0
                 || (deviceKeys & KEY_MASK_ASSIST) != 0
                 || (deviceKeys & KEY_MASK_APP_SWITCH) != 0;
-        /*
         boolean hasBacklight = res.getInteger(
                 com.android.internal.R.integer.config_buttonBrightnessSettingDefault) > 0;
-        */
-        boolean hasBacklight = false;
 
         return hasBacklightKey && hasBacklight;
     }
diff --git a/src/org/lineageos/lineageparts/input/ButtonSettings.java b/src/org/lineageos/lineageparts/input/ButtonSettings.java
index 9b9ae60..cdd9943 100644
--- a/src/org/lineageos/lineageparts/input/ButtonSettings.java
+++ b/src/org/lineageos/lineageparts/input/ButtonSettings.java
@@ -228,13 +228,11 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
         // and don't even try unless the existing keys can be disabled
         boolean needsNavigationBar = false;
         if (hardware.isSupported(LineageHardwareManager.FEATURE_KEY_DISABLE)) {
-            /* wm.needsNavigationBar();
             try {
                 IWindowManager wm = WindowManagerGlobal.getWindowManagerService();
                 needsNavigationBar = wm.needsNavigationBar();
             } catch (RemoteException e) {
             }
-            */
 
             if (needsNavigationBar) {
                 prefScreen.removePreference(mDisableNavigationKeys);
@@ -373,12 +371,10 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
                         findPreference(LineageSettings.System.VOLUME_ANSWER_CALL));
             }
 
-/*
             int cursorControlAction = Settings.System.getInt(resolver,
                     Settings.System.VOLUME_KEY_CURSOR_CONTROL, 0);
             mVolumeKeyCursorControl = initList(KEY_VOLUME_KEY_CURSOR_CONTROL,
                     cursorControlAction);
-*/
 
             int swapVolumeKeys = LineageSettings.System.getInt(getContentResolver(),
                     LineageSettings.System.SWAP_VOLUME_KEYS_ON_ROTATION, 0);
@@ -568,12 +564,10 @@ public class ButtonSettings extends SettingsPreferenceFragment implements
             handleListChange((ListPreference) preference, newValue,
                     LineageSettings.System.KEY_APP_SWITCH_LONG_PRESS_ACTION);
             return true;
-/*
         } else if (preference == mVolumeKeyCursorControl) {
             handleSystemListChange(mVolumeKeyCursorControl, newValue,
                     Settings.System.VOLUME_KEY_CURSOR_CONTROL);
             return true;
-*/
         } else if (preference == mTorchLongPressPowerTimeout) {
             handleListChange(mTorchLongPressPowerTimeout, newValue,
                     LineageSettings.System.TORCH_LONG_PRESS_POWER_TIMEOUT);
-- 
2.17.1

