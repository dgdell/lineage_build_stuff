From e458e878246b10c953fcdcfa82e8e9bf1e98b2cb Mon Sep 17 00:00:00 2001
From: Sandeep Kunta <skunta@codeaurora.org>
Date: Mon, 24 Jul 2017 12:13:15 +0530
Subject: [PATCH] Show proper call duration

In current implementation, Date class is used to generate call
duration, but this also adds time zone offset to call duration
leading to incorrect output.
Present change fixes above issue by not using Date class.

Change-Id: I9c78a0691d292e16a5be2513de3576713a53d1f2
CRs-Fixed: 2061926
---
 .../calllogutils/CallEntryFormatter.java      | 43 ++++---------------
 1 file changed, 9 insertions(+), 34 deletions(-)

diff --git a/java/com/android/dialer/calllogutils/CallEntryFormatter.java b/java/com/android/dialer/calllogutils/CallEntryFormatter.java
index c5ec15748..9ca612b44 100644
--- a/java/com/android/dialer/calllogutils/CallEntryFormatter.java
+++ b/java/com/android/dialer/calllogutils/CallEntryFormatter.java
@@ -81,42 +81,17 @@ public class CallEntryFormatter {
   }
 
   private static CharSequence formatDuration(Context context, long elapsedSeconds) {
-    Resources res = context.getResources();
-    String formatPattern;
+    long minutes = 0;
+    long seconds = 0;
+
     if (elapsedSeconds >= 60) {
-      String minutesString = res.getString(R.string.call_details_minutes_abbreviation);
-      String secondsString = res.getString(R.string.call_details_seconds_abbreviation);
-      // example output: "1m 1s"
-      formatPattern =
-          context.getString(
-              R.string.call_duration_format_pattern, "m", minutesString, "s", secondsString);
+      minutes = elapsedSeconds / 60;
+      elapsedSeconds -= minutes * 60;
+      seconds = elapsedSeconds;
+      return context.getString(R.string.callDetailsDurationFormat, minutes, seconds);
     } else {
-      String secondsString = res.getString(R.string.call_details_seconds_abbreviation);
-      // example output: "1s"
-      formatPattern =
-          context.getString(R.string.call_duration_short_format_pattern, "s", secondsString);
-
-      // Temporary work around for a broken Hebrew(iw) translation.
-      if (formatPattern.endsWith("\'\'")) {
-        formatPattern = formatPattern.substring(0, formatPattern.length() - 1);
-      }
-    }
-
-    // If new translation issues arise, we should catch them here to prevent crashes.
-    try {
-      Date date = new Date(TimeUnit.SECONDS.toMillis(elapsedSeconds));
-      SimpleDateFormat format = new SimpleDateFormat(formatPattern);
-      String duration = format.format(date);
-
-      // SimpleDateFormat cannot display more than 59 minutes, instead it displays MINUTES % 60.
-      // Here we check for that value and replace it with the correct value.
-      if (elapsedSeconds >= TimeUnit.MINUTES.toSeconds(60)) {
-        int minutes = (int) (elapsedSeconds / 60);
-        duration = duration.replaceFirst(Integer.toString(minutes % 60), Integer.toString(minutes));
-      }
-      return duration;
-    } catch (Exception e) {
-      return "";
+      seconds = elapsedSeconds;
+      return context.getString(R.string.callDetailsShortDurationFormat, seconds);
     }
   }
 
-- 
2.17.1

