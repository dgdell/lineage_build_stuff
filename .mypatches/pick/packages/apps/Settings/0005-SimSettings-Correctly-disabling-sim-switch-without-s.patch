From 86d7d887334d26ae90e9ae0e8a2b638dd52486aa Mon Sep 17 00:00:00 2001
From: xyyx <xyyx@mail.ru>
Date: Fri, 19 Jan 2018 23:31:36 +0800
Subject: [PATCH 5/8] SimSettings: Correctly disabling sim switch without sim
 card

@xyyx: code extracted from MM CAF

Change-Id: I59924806302c57e5652b18235e50c9569153dbd3
---
 src/com/android/settings/sim/SimSettings.java | 24 ++++++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/src/com/android/settings/sim/SimSettings.java b/src/com/android/settings/sim/SimSettings.java
index 07ea2c3..2d71c0c 100644
--- a/src/com/android/settings/sim/SimSettings.java
+++ b/src/com/android/settings/sim/SimSettings.java
@@ -476,7 +476,11 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
                 mSwitch.setVisibility(View.GONE);
             } else {
                 mSwitch.setVisibility(View.VISIBLE);
-                mSwitch.setEnabled(!isAirplaneModeOn() || isValid());
+                if (isAirplaneModeOn() || (!isCurrentSubValid())) {
+                    mSwitch.setEnabled(false);
+                } else {
+                    mSwitch.setEnabled(true);
+                }
                 setChecked(getProvisionStatus(mSlotId) == PROVISIONED);
             }
         }
@@ -505,9 +509,21 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
 
         // This method returns true if SubScription record corresponds to this
         // Preference screen has a valid SIM and slot index/SubId.
-        @Override
-        protected boolean isValid() {
-            return super.isValid() && getProvisionStatus(mSlotId) >= 0;
+        private boolean isCurrentSubValid() {
+            boolean isSubValid = false;
+            if (hasCard()) {
+                SubscriptionInfo sir = mSubscriptionManager.
+                        getActiveSubscriptionInfoForSimSlotIndex(mSlotId);
+                if (sir != null ) {
+                    mSubInfoRecord = sir;
+                    if (SubscriptionManager.isValidSubscriptionId(mSubInfoRecord.getSubscriptionId()) &&
+                            mSubInfoRecord.getSimSlotIndex() >= 0 &&
+                            getProvisionStatus(mSubInfoRecord.getSimSlotIndex()) >= 0) {
+                        isSubValid = true;
+                    }
+                }
+            }
+            return isSubValid;
         }
 
         // Based on the received SIM provision state this method
-- 
2.7.4

