From aeec1d0a5f9603a849d3c88db1c238b324236b53 Mon Sep 17 00:00:00 2001
From: Alex Avance <aravance@gmail.com>
Date: Thu, 13 Jan 2011 17:46:46 -0600
Subject: [PATCH 07/12] Expose option to change the device hostname.

This adds an option to modify the device hostname used
in ip resolution. This is useful when connecting to the
android device in a dynamic dhcp environment.

Change-Id: I1d8302f06144dbb3e6ddba68594cc5718b4f0bb7
(based on commit Ibc145b74036617248d4f33c6866cc9c8a8cc8974)
---
 res/values/cm_strings.xml                     |  3 +
 res/xml/development_prefs.xml                 | 11 +++
 .../android/settings/HostnamePreference.java  | 73 +++++++++++++++++++
 3 files changed, 87 insertions(+)
 create mode 100644 src/com/android/settings/HostnamePreference.java

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index d1c58e46da..cd0759f42c 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -126,6 +126,9 @@
     <string name="security_settings_fingerprint_sensor_location_left">left side</string>
     <string name="security_settings_fingerprint_sensor_location_right">right side</string>
 
+    <!-- Hostname setting -->
+    <string name="device_hostname">Device hostname</string>
+
     <!-- Increasing ring tone volume -->
     <string name="increasing_ring_volume_option_title">Increasing ring volume</string>
     <string name="increasing_ring_min_volume_title">Start volume</string>
diff --git a/res/xml/development_prefs.xml b/res/xml/development_prefs.xml
index 87d109d94f..9d23494f8c 100644
--- a/res/xml/development_prefs.xml
+++ b/res/xml/development_prefs.xml
@@ -155,6 +155,17 @@
         <Preference android:key="clear_adb_keys"
                 android:title="@string/clear_adb_keys" />
 
+        <com.android.settings.HostnamePreference
+            android:key="device_hostname"
+            android:title="@string/device_hostname"
+            android:dialogTitle="@string/device_hostname"
+            android:positiveButtonText="@string/wifi_save"
+            android:negativeButtonText="@string/wifi_cancel"
+            android:selectAllOnFocus="true"
+            android:imeOptions="actionDone"
+            android:inputType="textNoSuggestions"
+            android:persistent="false" />
+
         <SwitchPreference
             android:key="enable_terminal"
             android:title="@string/enable_terminal_title"
diff --git a/src/com/android/settings/HostnamePreference.java b/src/com/android/settings/HostnamePreference.java
new file mode 100644
index 0000000000..068ba1e343
--- /dev/null
+++ b/src/com/android/settings/HostnamePreference.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright (C) 2013 The CyanogenMod project
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings;
+
+import android.content.Context;
+import android.os.SystemProperties;
+import android.support.v7.preference.EditTextPreference;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+import android.util.Log;
+
+import lineageos.providers.LineageSettings;
+
+public class HostnamePreference extends EditTextPreference {
+
+    private static final String TAG = "HostnamePreference";
+
+    private static final String PROP_HOSTNAME = "net.hostname";
+
+    public HostnamePreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setSummary(getText());
+    }
+
+    @Override
+    public void setText(String text) {
+        if (text == null) {
+            Log.e(TAG, "tried to set null hostname, request ignored");
+            return;
+        }
+        // Remove any character that is not alphanumeric, period, or hyphen
+        text = text.replaceAll("[^-.a-zA-Z0-9]", "");
+        if (TextUtils.isEmpty(text)) {
+            Log.w(TAG, "setting empty hostname");
+        } else {
+            Log.i(TAG, "hostname has been set: " + text);
+        }
+        SystemProperties.set(PROP_HOSTNAME, text);
+        persistHostname(text);
+        setSummary(text);
+    }
+
+    @Override
+    public String getText() {
+        return SystemProperties.get(PROP_HOSTNAME);
+    }
+
+    @Override
+    public void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        persistHostname(getText());
+    }
+
+    public void persistHostname(String hostname) {
+        LineageSettings.Secure.putString(getContext().getContentResolver(),
+                LineageSettings.Secure.DEVICE_HOSTNAME, hostname);
+    }
+
+}
-- 
2.17.1

