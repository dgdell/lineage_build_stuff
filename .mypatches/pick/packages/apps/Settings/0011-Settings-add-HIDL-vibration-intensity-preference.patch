From 72e1a7b6a6eefcc1d9be4924e2c361db090aeb26 Mon Sep 17 00:00:00 2001
From: Joey <joey@lineageos.org>
Date: Mon, 30 Jul 2018 11:53:43 +0200
Subject: [PATCH 11/12] Settings: add HIDL vibration intensity preference

* Adapt cmhw code to hidl implementation

Port the related changes from the following cm-14.1 commits:
35d2546596c13a4de9fcdc18f55ae17b958121b9 Settings: Add CMHW vibrator intensity preference

Port the related changes from the following cm-13.0 commits:
a284b34f11b3ad22084232950d81fb1bc68f21ce settings: Squashed commit of CMHW features
d4ebf3a59930db25be8296c88b40c3ee4330768f Settings: Cleanup display settings code
ba4c43f77699721dff7c2536ee61c0f8c18ea446 Settings: Change to CmHardwareService
d2d9f45236308fc9f722bf897030d1aacfbc8be8 settings: Move CMHW to CMSDK
bd3fe676619443b9060ffaa85abfe8e632e4340c Add isSupported() method to VibratorIntensity class
9c35338443d9d9d84bbfe4c899d82d2da1f85b60 Settings : Add multiuser support for CMHardware
bac4604893d4e24682e7bc016c362a2793bf1069 Settings: Fix one-time vibration intensity restore
a3a64ce79d1f7f2bb848cfa7af2260be6360ae0e Settings: Rework vibration intensity slider
76997a7856c5185c143088268d76bd760cf67a89 Settings: Save vibration intensity on close
a44bfb5a396056e22825f4989eee47b90b7bbc14 Settings: Move vibrator value restore to onActivityStop
9176a64ebcf2f59b01f0159ae129c56230b28cb6 Settings: Improve vibrator intensity dialog layout

Change-Id: Iece36085f8f07a171affefd9a1027fb11fed5d93
Signed-off-by: Joey <joey@lineageos.org>

# Conflicts:
#	res/values/cm_strings.xml
---
 Android.mk                                    |   3 +-
 res/layout/vibrator_intensity.xml             |  51 +++++
 res/values/cm_strings.xml                     |   5 +
 res/xml/sound_settings.xml                    |   9 +
 .../settings/notification/SoundSettings.java  |   4 +
 .../notification/VibratorIntensity.java       | 192 ++++++++++++++++++
 .../VibratorIntensityController.java          |  58 ++++++
 7 files changed, 321 insertions(+), 1 deletion(-)
 create mode 100644 res/layout/vibrator_intensity.xml
 create mode 100644 src/com/android/settings/notification/VibratorIntensity.java
 create mode 100644 src/com/android/settings/notification/VibratorIntensityController.java

diff --git a/Android.mk b/Android.mk
index a72311d25b..f78f19e0a0 100644
--- a/Android.mk
+++ b/Android.mk
@@ -37,7 +37,8 @@ LOCAL_JAVA_LIBRARIES := \
 LOCAL_STATIC_JAVA_LIBRARIES := \
     jsr305 \
     settings-logtags \
-    org.lineageos.platform.internal
+    org.lineageos.platform.internal \
+    vendor.lineage.vibrator-V1.0-java-static
 
 LOCAL_PROGUARD_FLAG_FILES := proguard.flags
 
diff --git a/res/layout/vibrator_intensity.xml b/res/layout/vibrator_intensity.xml
new file mode 100644
index 0000000000..0483c58c05
--- /dev/null
+++ b/res/layout/vibrator_intensity.xml
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2013-2016 The CyanogenMod Project
+     Copyright (C) 2018 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_height="match_parent"
+    android:layout_width="match_parent"
+    android:paddingTop="24dp"
+    android:paddingBottom="24dp"
+    android:paddingEnd="24dp">
+
+    <TextView
+        android:id="@+id/value"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_marginStart="4dp"
+        android:gravity="center_horizontal"
+        android:minEms="2" />
+
+    <SeekBar
+        android:id="@*android:id/seekbar"
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:layout_alignParentStart="true"
+        android:layout_marginStart="8dp"
+        android:layout_toStartOf="@id/value" />
+
+    <TextView
+        android:id="@+id/warning_text"
+        android:layout_below="@*android:id/seekbar"
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:layout_marginStart="24dp"
+        android:layout_marginTop="24dp" />
+
+</RelativeLayout>
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index cdd13b9818..5a08770e85 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -383,4 +383,9 @@
 
     <!-- Screenshot shutter sound -->
     <string name="screenshot_shutter_sound_title">Screenshot shutter sound</string>
+
+    <!-- Vibrator intensity -->
+    <string name="vibrator_intensity_title">Vibrator intensity</string>
+    <string name="vibrator_intensity_dialog_warning">Values greater than %1$d%% are not recommended</string>
+    <string name="vibrator_intensity_dialog_reset">Reset</string>
 </resources>
diff --git a/res/xml/sound_settings.xml b/res/xml/sound_settings.xml
index 6570db7e92..77061d1c13 100644
--- a/res/xml/sound_settings.xml
+++ b/res/xml/sound_settings.xml
@@ -177,6 +177,15 @@
             android:title="@string/screenshot_shutter_sound_title" />
     </PreferenceCategory>
 
+    <!-- Vibrator intensity -->
+    <com.android.settings.notification.VibratorIntensity
+        android:key="vibrator_intensity"
+        android:title="@string/vibrator_intensity_title"
+        android:dialogTitle="@string/vibrator_intensity_title"
+        android:max="255"
+        android:order="-40"
+        android:persistent="false" />
+
     <com.android.settingslib.RestrictedPreference
       android:key="cell_broadcast_settings"
       android:title="@string/cell_broadcast_settings"
diff --git a/src/com/android/settings/notification/SoundSettings.java b/src/com/android/settings/notification/SoundSettings.java
index e4c7e4cac3..be8881c3c2 100644
--- a/src/com/android/settings/notification/SoundSettings.java
+++ b/src/com/android/settings/notification/SoundSettings.java
@@ -26,6 +26,7 @@ import android.os.UserHandle;
 import android.preference.SeekBarVolumizer;
 import android.provider.SearchIndexableResource;
 import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceScreen;
 import android.text.TextUtils;
 
 import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
@@ -250,6 +251,9 @@ public class SoundSettings extends DashboardFragment {
         controllers.add(new EmergencyTonePreferenceController(context, fragment, lifecycle));
         controllers.add(new ScreenshotSoundPreferenceController(context, fragment, lifecycle));
 
+        // === Vibrator intensity Settings ===
+        controllers.add(new VibratorIntensityController(context));
+
         return controllers;
     }
 
diff --git a/src/com/android/settings/notification/VibratorIntensity.java b/src/com/android/settings/notification/VibratorIntensity.java
new file mode 100644
index 0000000000..befef21c88
--- /dev/null
+++ b/src/com/android/settings/notification/VibratorIntensity.java
@@ -0,0 +1,192 @@
+/**
+ * Copyright (C) 2013-2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.notification;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.graphics.Color;
+import android.graphics.LightingColorFilter;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.LayerDrawable;
+import android.os.RemoteException;
+import android.os.Vibrator;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.View;
+import android.widget.SeekBar;
+import android.widget.TextView;
+import android.widget.Button;
+
+import com.android.settingslib.CustomDialogPreference;
+import com.android.settings.R;
+
+import lineageos.providers.LineageSettings;
+import vendor.lineage.vibrator.V1_0.IVibrator;
+
+import java.util.NoSuchElementException;
+
+public class VibratorIntensity extends CustomDialogPreference
+        implements SeekBar.OnSeekBarChangeListener {
+
+    private static final String TAG = "VibratorIntensity";
+
+    private int mOriginalValue;
+    private int mDefaultValue;
+    private boolean mShowWarning;
+
+    private SeekBar mSeekBar;
+    private TextView mValueText;
+    private TextView mWarningText;
+
+    private Drawable mProgressDrawable;
+    private Drawable mProgressThumb;
+    private LightingColorFilter mRedFilter;
+
+    private IVibrator mServer;
+
+    public VibratorIntensity(final Context context, final AttributeSet attrs) {
+        super(context, attrs);
+
+        setDialogLayoutResource(R.layout.vibrator_intensity);
+    }
+
+    @Override
+    protected void onPrepareDialogBuilder(final AlertDialog.Builder builder,
+            final DialogInterface.OnClickListener listener) {
+        builder.setNeutralButton(R.string.vibrator_intensity_dialog_reset, null);
+        builder.setPositiveButton(android.R.string.ok, null);
+        builder.setNegativeButton(android.R.string.cancel, null);
+    }
+
+    @Override
+    protected void onBindDialogView(final View view) {
+        super.onBindDialogView(view);
+
+        mSeekBar = (SeekBar) view.findViewById(com.android.internal.R.id.seekbar);
+        mValueText = (TextView) view.findViewById(R.id.value);
+        mWarningText = (TextView) view.findViewById(R.id.warning_text);
+
+        try {
+            mServer = IVibrator.getService();
+            mDefaultValue = mServer.getDefaultIntensity();
+        } catch (NoSuchElementException | RemoteException e) {
+            throw new RuntimeException("Service not found!");
+        }
+
+        mShowWarning = mDefaultValue > 0 && mDefaultValue < 255;
+        if (mShowWarning) {
+            final String message = getContext().getResources().getString(
+                    R.string.vibrator_intensity_dialog_warning,
+                    intensityToPercent(mDefaultValue));
+            mWarningText.setText(message);
+        } else {
+            mWarningText.setVisibility(View.GONE);
+        }
+
+        final Drawable progressDrawable = mSeekBar.getProgressDrawable();
+        if (progressDrawable instanceof LayerDrawable) {
+            LayerDrawable ld = (LayerDrawable) progressDrawable;
+            mProgressDrawable = ld.findDrawableByLayerId(android.R.id.progress);
+        }
+        mProgressThumb = mSeekBar.getThumb();
+        mRedFilter = new LightingColorFilter(Color.BLACK,
+                getContext().getResources().getColor(android.R.color.holo_red_light));
+
+        mOriginalValue = LineageSettings.Secure.getInt(getContext().getContentResolver(),
+                LineageSettings.Secure.VIBRATOR_INTENSITY, mDefaultValue);
+        mSeekBar.setOnSeekBarChangeListener(this);
+        mSeekBar.setMax(255);
+        mSeekBar.setProgress(mOriginalValue);
+    }
+
+    @Override
+    protected boolean onDismissDialog(final DialogInterface dialog, final int which) {
+        // Can't use onPrepareDialogBuilder for this as we want the dialog
+        // to be kept open on click
+        if (which == DialogInterface.BUTTON_NEUTRAL) {
+            mSeekBar.setProgress(mDefaultValue);
+            testVibratorIntensity(mDefaultValue);
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    protected void onDialogClosed(final boolean positiveResult) {
+        super.onDialogClosed(positiveResult);
+
+        if (positiveResult) {
+            final int intensity = mSeekBar.getProgress();
+            LineageSettings.Secure.putInt(getContext().getContentResolver(),
+                    LineageSettings.Secure.VIBRATOR_INTENSITY, intensity);
+        } else {
+            setVibratorIntensity(mOriginalValue);
+        }
+    }
+
+    @Override
+    public void onProgressChanged(
+                final SeekBar seekBar, final int progress, final boolean fromUser) {
+        final int intensity = progress;
+        final boolean shouldWarn = mShowWarning && intensity > mDefaultValue;
+
+        if (mProgressDrawable != null) {
+            mProgressDrawable.setColorFilter(shouldWarn ? mRedFilter : null);
+        }
+        if (mProgressThumb != null) {
+            mProgressThumb.setColorFilter(shouldWarn ? mRedFilter : null);
+        }
+
+        mValueText.setText(
+                String.format("%d%%", intensityToPercent(intensity)));
+    }
+
+    @Override
+    public void onStartTrackingTouch(final SeekBar seekBar) {
+        // Do nothing
+    }
+
+    @Override
+    public void onStopTrackingTouch(final SeekBar seekBar) {
+        testVibratorIntensity(seekBar.getProgress());
+    }
+
+    private void setVibratorIntensity(final int intensity) {
+        try {
+            mServer.setIntensity(intensity);
+        } catch (RemoteException ignored) {
+        }
+    }
+
+    private void testVibratorIntensity(final int intensity) {
+        final Vibrator vib = (Vibrator) getContext().getSystemService(Context.VIBRATOR_SERVICE);
+        setVibratorIntensity(intensity);
+        vib.vibrate(200);
+    }
+
+    private static int intensityToPercent(int value) {
+        if (value > 255) {
+            value = 255;
+        } else if (value < 0) {
+            value = 0;
+        }
+
+        return Math.round(value * 100.f / 255);
+    }
+}
diff --git a/src/com/android/settings/notification/VibratorIntensityController.java b/src/com/android/settings/notification/VibratorIntensityController.java
new file mode 100644
index 0000000000..29e9bcf5d8
--- /dev/null
+++ b/src/com/android/settings/notification/VibratorIntensityController.java
@@ -0,0 +1,58 @@
+/**
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.notification;
+
+import android.content.Context;
+import android.os.RemoteException;
+import android.support.v7.preference.Preference;
+
+import com.android.settings.core.PreferenceControllerMixin;
+import com.android.settingslib.core.AbstractPreferenceController;
+
+import java.util.NoSuchElementException;
+
+import vendor.lineage.vibrator.V1_0.IVibrator;
+
+public class VibratorIntensityController extends AbstractPreferenceController
+        implements PreferenceControllerMixin {
+
+    private static final String KEY_VIBRATOR_INTENSITY = "vibrator_intensity";
+
+    public VibratorIntensityController(Context context) {
+        super(context);
+    }
+
+    @Override
+    public boolean isAvailable() {
+        try {
+            IVibrator server = IVibrator.getService();
+            return server != null;
+        } catch (NoSuchElementException | RemoteException ignored) {
+        }
+        return false;
+    }
+
+    @Override
+    public void updateState(Preference preference) {
+        super.updateState(preference);
+    }
+
+    @Override
+    public String getPreferenceKey() {
+        return KEY_VIBRATOR_INTENSITY;
+    }
+}
-- 
2.17.1

