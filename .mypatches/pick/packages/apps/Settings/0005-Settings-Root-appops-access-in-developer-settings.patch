From c968fc15ff6a5a8c48fba6895091743d03ebcc57 Mon Sep 17 00:00:00 2001
From: Adrian DC <radian.dc@gmail.com>
Date: Fri, 5 Aug 2016 09:11:44 +0200
Subject: [PATCH 05/13] Settings: Root appops access in developer settings

 * Allow users to directly access the root app settings,
    as the feature is mostly unknown and often a reason
    for users to try using alternatives to CM root

 * Use the appops extra intent to link the su tab,
    introduced in I79d963ecbadc624dc45a398387a348691318b6be

 * Implements the PreferenceClickListener from 126013

Change-Id: Ia5bc9d56fb11700b19d73336fad13c0a936091ff
Signed-off-by: Adrian DC <radian.dc@gmail.com>
---
 res/values/cm_strings.xml                          |  4 +++
 res/xml/development_prefs.xml                      |  5 ++++
 .../settings/development/DevelopmentSettings.java  | 31 +++++++++++++++++++++-
 3 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 539689f..ad0e480 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -32,6 +32,10 @@
     <string name="root_access_adb">ADB only</string>
     <string name="root_access_all">Apps and ADB</string>
 
+    <!-- Preference link for root appops -->
+    <string name="root_appops_title">Manage root accesses</string>
+    <string name="root_appops_summary">View and control the root rules</string>
+
     <!-- Double tap to sleep on status bar or lockscreen -->
     <string name="status_bar_double_tap_to_sleep_title">Tap to sleep</string>
     <string name="status_bar_double_tap_to_sleep_summary">Double-tap on the status bar or lockscreen to turn off the display</string>
diff --git a/res/xml/development_prefs.xml b/res/xml/development_prefs.xml
index f74d96d..a03f263 100644
--- a/res/xml/development_prefs.xml
+++ b/res/xml/development_prefs.xml
@@ -128,6 +128,11 @@
         android:entries="@array/root_access_entries"
         android:entryValues="@array/root_access_values" />
 
+    <Preference
+        android:key="root_appops"
+        android:title="@string/root_appops_title"
+        android:summary="@string/root_appops_summary" />
+
     <PreferenceCategory android:key="debug_debugging_category"
             android:title="@string/debug_debugging_category">
 
diff --git a/src/com/android/settings/development/DevelopmentSettings.java b/src/com/android/settings/development/DevelopmentSettings.java
index 501a7c5..520d1e8 100644
--- a/src/com/android/settings/development/DevelopmentSettings.java
+++ b/src/com/android/settings/development/DevelopmentSettings.java
@@ -69,6 +69,7 @@ import android.support.v4.content.LocalBroadcastManager;
 import android.support.v7.preference.ListPreference;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.Preference.OnPreferenceChangeListener;
+import android.support.v7.preference.Preference.OnPreferenceClickListener;
 import android.support.v7.preference.PreferenceGroup;
 import android.support.v7.preference.PreferenceScreen;
 import android.telephony.TelephonyManager;
@@ -89,6 +90,7 @@ import com.android.internal.app.LocalePicker;
 import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
 import com.android.settings.R;
 import com.android.settings.RestrictedSettingsFragment;
+import com.android.settings.Settings.AppOpsSummaryActivity;
 import com.android.settings.SettingsActivity;
 import com.android.settings.Utils;
 import com.android.settings.dashboard.DashboardFeatureProvider;
@@ -116,7 +118,8 @@ import java.util.List;
  */
 public class DevelopmentSettings extends RestrictedSettingsFragment
         implements DialogInterface.OnClickListener, DialogInterface.OnDismissListener,
-        OnPreferenceChangeListener, SwitchBar.OnSwitchChangeListener, Indexable {
+        OnPreferenceChangeListener, SwitchBar.OnSwitchChangeListener, Indexable,
+        OnPreferenceClickListener {
     private static final String TAG = "DevelopmentSettings";
 
     /**
@@ -234,6 +237,8 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
     private static final String ROOT_ACCESS_KEY = "root_access";
     private static final String ROOT_ACCESS_PROPERTY = "persist.sys.root_access";
 
+    private static final String ROOT_APPOPS_KEY = "root_appops";
+
     private static final String IMMEDIATELY_DESTROY_ACTIVITIES_KEY
             = "immediately_destroy_activities";
     private static final String APP_PROCESS_LIMIT_KEY = "app_process_limit";
@@ -352,6 +357,8 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
 
     private ColorModePreference mColorModePreference;
 
+    private Preference mRootAppops;
+
     private SwitchPreference mForceResizable;
 
     private SwitchPreference mColorTemperaturePreference;
@@ -619,8 +626,13 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
 
         mRootAccess = (ListPreference) findPreference(ROOT_ACCESS_KEY);
         mRootAccess.setOnPreferenceChangeListener(this);
+
+        mRootAppops = (Preference) findPreference(ROOT_APPOPS_KEY);
+        mRootAppops.setOnPreferenceClickListener(this);
+
         if (!removeRootOptionsIfRequired()) {
             mAllPrefs.add(mRootAccess);
+            mAllPrefs.add(mRootAppops);
         }
         addDashboardCategoryPreferences();
     }
@@ -978,6 +990,10 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         mRootAccess.setValue(value);
         mRootAccess.setSummary(getResources()
                 .getStringArray(R.array.root_access_entries)[Integer.valueOf(value)]);
+
+        if (mRootAppops != null) {
+            mRootAppops.setEnabled(isRootForAppsEnabled());
+        }
     }
 
     public static boolean isRootForAppsEnabled() {
@@ -2572,6 +2588,19 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
     }
 
     @Override
+    public boolean onPreferenceClick(Preference preference) {
+        if (preference == mRootAppops) {
+            Activity mActivity = getActivity();
+            Intent intent = new Intent(Intent.ACTION_MAIN);
+            intent.putExtra("appops_tab", getString(R.string.app_ops_categories_su));
+            intent.setClass(mActivity, AppOpsSummaryActivity.class);
+            mActivity.startActivity(intent);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
     public boolean onPreferenceTreeClick(Preference preference) {
         if (Utils.isMonkeyRunning()) {
             return false;
-- 
2.7.4

