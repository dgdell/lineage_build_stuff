From b188cd02ce33d1e22845a60802dfec862bd5792e Mon Sep 17 00:00:00 2001
From: Ethan Chen <intervigil@gmail.com>
Date: Tue, 24 Jul 2018 20:04:50 -0700
Subject: [PATCH 3/3] Updater: Use SharedPreference listener to get perf mode
 setting

* Don't query shared preferences on each call to install.

Change-Id: I022d76ba0659d9ad3fac48d84fa4172476cb506b
---
 .../lineageos/updater/UpdatesActivity.java    | 32 +++++++++++++++++--
 .../updater/controller/ABUpdateInstaller.java |  4 ---
 2 files changed, 29 insertions(+), 7 deletions(-)

diff --git a/src/org/lineageos/updater/UpdatesActivity.java b/src/org/lineageos/updater/UpdatesActivity.java
index 2d3fc57..4225873 100644
--- a/src/org/lineageos/updater/UpdatesActivity.java
+++ b/src/org/lineageos/updater/UpdatesActivity.java
@@ -75,6 +75,16 @@ public class UpdatesActivity extends UpdatesListActivity {
     private View mRefreshIconView;
     private RotateAnimation mRefreshAnimation;
 
+    private final SharedPreferences.OnSharedPreferenceChangeListener mPrefListener =
+        new SharedPreferences.OnSharedPreferenceChangeListener() {
+        @Override
+        public void onSharedPreferenceChanged(SharedPreferences sharedPrefs, String key) {
+            if (Constants.PREF_AB_PERF_MODE.equals(key)) {
+                setPerfMode();
+            }
+        }
+    };
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -173,6 +183,19 @@ public class UpdatesActivity extends UpdatesListActivity {
         LocalBroadcastManager.getInstance(this).registerReceiver(mBroadcastReceiver, intentFilter);
     }
 
+    @Override
+    public void onResume() {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        prefs.registerOnSharedPreferenceChangeListener(mPrefListener);
+        setPerfMode();
+    }
+
+    @Override
+    public void onPause() {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        prefs.unregisterOnSharedPreferenceChangeListener(mPrefListener);
+    }
+
     @Override
     public void onStop() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mBroadcastReceiver);
@@ -442,10 +465,13 @@ public class UpdatesActivity extends UpdatesListActivity {
                         UpdatesCheckReceiver.cancelRepeatingUpdatesCheck(this);
                         UpdatesCheckReceiver.cancelUpdatesCheck(this);
                     }
-
-                    boolean enableABPerfMode = abPerfMode.isChecked();
-                    mUpdaterService.getUpdaterController().setPerformanceMode(enableABPerfMode);
                 })
                 .show();
     }
+
+    private void setPerfMode() {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        boolean enabled = prefs.getBoolean(Constants.PREF_AB_PERF_MODE, false);
+        mUpdaterService.getUpdaterController().setPerformanceMode(enabled);
+    }
 }
diff --git a/src/org/lineageos/updater/controller/ABUpdateInstaller.java b/src/org/lineageos/updater/controller/ABUpdateInstaller.java
index b0be201..57bd2c1 100644
--- a/src/org/lineageos/updater/controller/ABUpdateInstaller.java
+++ b/src/org/lineageos/updater/controller/ABUpdateInstaller.java
@@ -214,10 +214,6 @@ class ABUpdateInstaller {
             }
         }
 
-        boolean enableABPerfMode = PreferenceManager.getDefaultSharedPreferences(mContext)
-                .getBoolean(Constants.PREF_AB_PERF_MODE, false);
-        mUpdateEngine.setPerformanceMode(enableABPerfMode);
-
         String zipFileUri = "file://" + file.getAbsolutePath();
         mUpdateEngine.applyPayload(zipFileUri, offset, 0, headerKeyValuePairs);
 
-- 
2.17.1

