From c0360e33a63a96c25012b7ecfed804f6654bfca6 Mon Sep 17 00:00:00 2001
From: Tom Marshall <tdm@cyngn.com>
Date: Tue, 18 Nov 2014 14:25:32 -0800
Subject: [PATCH 03/28] LatinIME: Only enable gesture mode if gesture lib is
 available

 * Prevents keyboard FC when gapps is not loaded.

Change-Id: I0d48e1cd80534513205f61913c798b48573ea38c
---
 java/src/com/android/inputmethod/latin/settings/Settings.java | 4 ++++
 java/src/com/android/inputmethod/latin/utils/JniUtils.java    | 2 ++
 2 files changed, 6 insertions(+)

diff --git a/java/src/com/android/inputmethod/latin/settings/Settings.java b/java/src/com/android/inputmethod/latin/settings/Settings.java
index 940f1bdfc..790f41bfc 100644
--- a/java/src/com/android/inputmethod/latin/settings/Settings.java
+++ b/java/src/com/android/inputmethod/latin/settings/Settings.java
@@ -31,6 +31,7 @@ import com.android.inputmethod.latin.InputAttributes;
 import com.android.inputmethod.latin.R;
 import com.android.inputmethod.latin.common.StringUtils;
 import com.android.inputmethod.latin.utils.AdditionalSubtypeUtils;
+import com.android.inputmethod.latin.utils.JniUtils;
 import com.android.inputmethod.latin.utils.ResourceUtils;
 import com.android.inputmethod.latin.utils.RunInLocale;
 import com.android.inputmethod.latin.utils.StatsUtils;
@@ -230,6 +231,9 @@ public final class Settings implements SharedPreferences.OnSharedPreferenceChang
     }
 
     public static boolean readFromBuildConfigIfGestureInputEnabled(final Resources res) {
+        if (!JniUtils.sHaveGestureLib) {
+            return false;
+        }
         return res.getBoolean(R.bool.config_gesture_input_enabled_by_build_config);
     }
 
diff --git a/java/src/com/android/inputmethod/latin/utils/JniUtils.java b/java/src/com/android/inputmethod/latin/utils/JniUtils.java
index fe9c860de..458c16932 100644
--- a/java/src/com/android/inputmethod/latin/utils/JniUtils.java
+++ b/java/src/com/android/inputmethod/latin/utils/JniUtils.java
@@ -23,9 +23,11 @@ import com.android.inputmethod.latin.define.JniLibName;
 public final class JniUtils {
     private static final String TAG = JniUtils.class.getSimpleName();
 
+    public static boolean sHaveGestureLib = false;
     static {
         try {
             System.loadLibrary(JniLibName.JNI_LIB_NAME2);
+            sHaveGestureLib = true;
         } catch (UnsatisfiedLinkError ue) {
             Log.e(TAG, "Could not load native library " + JniLibName.JNI_LIB_NAME2, ue);
             try {
-- 
2.17.1

