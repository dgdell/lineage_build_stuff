From 609748d734cdbec782d74f80f5a09dc94a7c5474 Mon Sep 17 00:00:00 2001
From: Paul Keith <javelinanddart@gmail.com>
Date: Sun, 14 May 2017 19:01:58 +0200
Subject: [PATCH 22/74] New Python mirror-regen script

Change-Id: I7741903e830ddaf1d834e4c570e4be6887b8111d
---
 README.md       | 17 +++++++++++--
 mirror-regen.py | 38 +++++++++++++++++++++++++++++
 mirror-regen.sh | 64 -------------------------------------------------
 3 files changed, 53 insertions(+), 66 deletions(-)
 create mode 100755 mirror-regen.py
 delete mode 100755 mirror-regen.sh

diff --git a/README.md b/README.md
index 39aff64..8a74812 100644
--- a/README.md
+++ b/README.md
@@ -6,5 +6,18 @@ Once the mirror is synced you can then run `repo init -u /path/to/mirror/Lineage
 
 If you want to sync the source quickly but want it to be up-to-date without syncing the mirror every time, then run `repo init -u http://www.github.com/LineageOS/android -b $BRANCHNAME --reference=/path/to/mirror/`. This will init the new repo and fetch all the (available) data from the mirror, but will fallback to GitHub if something is missing in the mirror.
 
-To update the mirror, either edit the manifest manually or use the `mirror-regen.sh` script.  
-**WARNING:** The script causes a data usage of ~15 MB. Also, it is possible that it fails downloading a page of repositories. As a result, these repositories that were on that page will be missing in the mirror manifest. **Please double check the resulting manifest before submitting it to Gerrit**
+To update the mirror, use the `mirror-regen.py` script.  
+Please make sure you set the environment variables before using the script:
+
+`GHUSER` contains a valid GitHub Username and  
+`GHTOKEN` contains a matching GitHub Personal Access Token  
+  
+To set these environment variables, run these commands in your terminal window:  
+  
+```
+export GHUSER="<Your Username>"
+export GHTOKEN="<Your Token>"
+```
+(You can obtain a GitHub Personal Access Token [here](https://github.com/settings/tokens))
+
+**WARNING:** Please make sure no repositories have been removed before pushing a manifest change to Gerrit. A poor network connection could result in an incomplete manifest.
diff --git a/mirror-regen.py b/mirror-regen.py
new file mode 100755
index 0000000..49f607e
--- /dev/null
+++ b/mirror-regen.py
@@ -0,0 +1,38 @@
+#!/usr/bin/python3
+
+import os
+import sys
+try:
+    from github import Github
+except ImportError:
+    print("Please install the pygithub package via pip3")
+    exit(1)
+e = os.environ.copy()
+# Environment variables for github username and api token
+try:
+    u = e["GHUSER"]
+    p = e["GHTOKEN"]
+except KeyError:
+    print("Please set the GHUSER and GHTOKEN environment variables")
+    exit(1)
+
+orgName = "LineageOS"
+org = Github(u, p).get_user(orgName)
+
+file = open("default.xml","w")
+file.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n")
+file.write("<manifest>\n")
+file.write("\n")
+file.write("  <remote  name=\"github\"\n")
+file.write("           fetch=\"..\" />\n")
+file.write("\n")
+file.write("  <default revision=\"master\"\n")
+file.write("           remote=\"github\"\n")
+file.write("           sync-j=\"4\" />\n")
+file.write("\n")
+
+for repo in org.get_repos():
+  file.write("  <project name=\"" + repo.full_name + "\" />\n")
+
+file.write("</manifest>\n")
+file.close()
diff --git a/mirror-regen.sh b/mirror-regen.sh
deleted file mode 100755
index 7d10679..0000000
--- a/mirror-regen.sh
+++ /dev/null
@@ -1,64 +0,0 @@
-#!/bin/bash
-
-# Initializing/Clearing Variables
-ORG="LineageOS"
-OUTPUT="default.xml"
-NUM_REPOS=0
-NUM_PAGES=0
-TMP=""
-AUTH=""
-if [ -n "$1" ]; then
-  AUTH="-u $1"
-fi
-echo -n "" > $OUTPUT
-
-function filter_json()
-{
-  # Define filter function to extract data from the JSON returned by the GitHub API
-  cat - | grep "\"$1\"" | sed -e "s/ *\"$1\": \"//g" | sed -e "s/ *\"$1\": //g" | sed -e "s/\",$//g" | sed -e "s/,$//g"
-}
-
-# Fetching Organization Information (Number of Repos, etc.)
-echo "---- Fetching organization information ----"
-NUM_REPOS=$(curl -i -# $AUTH "https://api.github.com/orgs/$ORG" | filter_json "public_repos")
-NUM_PAGES=$(( NUM_REPOS / 100 ))
-if [ $((NUM_PAGES * 100)) -lt $NUM_REPOS ]; then
-  NUM_PAGES=$((NUM_PAGES+1))
-fi
-echo ""
-echo "Number of Repos: $NUM_REPOS"
-echo "Number of Pages: $NUM_PAGES"
-echo ""
-
-# Fetch the repo names
-COUNTER=1
-while [ ! $COUNTER -gt $NUM_PAGES ]; do
-  echo "---- Fetching page $COUNTER of $NUM_PAGES ----"
-  if [ "$TMP" != "" ]; then
-    TMP="$TMP
-"
-  fi
-  TMP="$TMP$(curl -# $AUTH "https://api.github.com/orgs/$ORG/repos?per_page=100&type=public&page=$COUNTER" | filter_json "full_name")"
-  let COUNTER=COUNTER+1
-  echo ""
-done
-
-# Write to the output file
-cat >> $OUTPUT << "EOF"
-<?xml version="1.0" encoding="UTF-8"?>
-<manifest>
-
-  <remote  name="github"
-           fetch=".." />
-
-  <default revision="master"
-           remote="github"
-           sync-j="4" />
-
-EOF
-while read repo; do
-  echo "  <project name=\"$repo\" />" >> $OUTPUT
-done <<< "$(echo "$TMP" | sort - | uniq )"
-echo "</manifest>" >> $OUTPUT
-
-echo "Done generating manifest at $OUTPUT"
-- 
2.17.1

