From 0b3c2d85c971eb34b2995be278a71485a283778f Mon Sep 17 00:00:00 2001
From: Michael W <baddaemon87@gmail.com>
Date: Tue, 27 Feb 2018 19:09:10 +0100
Subject: [PATCH 117/249] wiki: Validate device specific pages

* Restructure generator script to use template files
  * Also change error behavior: Existing page won't generate an error
    anymore
* Modify ruby validator:
  * Restructure existing code into functions
  * Add function to load templates (the ones from scripts), fill them
    properly and compare to the device specific files
    (build, info, install)
  * Of course also check if the files exist
  * Additionally use wiki-relative path for outputs to decrease line length
    on error lines

Change-Id: Id5ccfdff1a01bd641475e7a95b1ca55341b3edcf
---
 scripts/generate_device.sh   | 55 ++++++++-------------------
 scripts/templates/build.md   |  8 ++++
 scripts/templates/info.md    |  9 +++++
 scripts/templates/install.md |  8 ++++
 test/validate.rb             | 73 ++++++++++++++++++++++++++----------
 5 files changed, 93 insertions(+), 60 deletions(-)
 create mode 100644 scripts/templates/build.md
 create mode 100644 scripts/templates/info.md
 create mode 100644 scripts/templates/install.md

diff --git a/scripts/generate_device.sh b/scripts/generate_device.sh
index bed6056..04cdee4 100755
--- a/scripts/generate_device.sh
+++ b/scripts/generate_device.sh
@@ -18,50 +18,25 @@ BUILD_PATH="pages/build/$DEVICE.md"
 INFO_PATH="pages/info/$DEVICE.md"
 INSTALL_PATH="pages/install/$DEVICE.md"
 
-if ([ -e $BUILD_PATH ] || [ -e $DATA_PATH ] || [ -e $INFO_PATH ] || [ -e $INSTALL_PATH ]); then
-    echo "One or more of these files already exists: $DATA_PATH, $BUILD_PATH, $INFO_PATH, $INSTALL_PATH"
-    exit 1
+if [ ! -f $DATA_PATH ]; then
+  cp -a "device_sample/sample.yml" $DATA_PATH
+  sed -i "s/sample/$DEVICE/g" $DATA_PATH
 fi
 
-cp -a "device_sample/sample.yml" $DATA_PATH
-sed -i "s/sample/$DEVICE/g" $DATA_PATH
-
 # generate device info file
-(cat << EOF) > $INFO_PATH
----
-sidebar: home_sidebar
-title: Info about $DEVICE
-folder: info
-layout: deviceinfo
-permalink: /devices/$DEVICE/
-device: $DEVICE
----
-{% include templates/device_info.md %}
-
-EOF
+if [ ! -f $INFO_PATH ]; then
+  cat scripts/templates/info.md > $INFO_PATH
+  sed -i "s/{codename}/$DEVICE/g" $INFO_PATH
+fi
 
 #generate build info for the device
-(cat << EOF) > $BUILD_PATH
----
-sidebar: home_sidebar
-title: Build for $DEVICE
-folder: build
-permalink: /devices/$DEVICE/build
-device: $DEVICE
----
-{% include templates/device_build.md %}
-
-EOF
+if [ ! -f $BUILD_PATH ]; then
+  cat scripts/templates/build.md > $BUILD_PATH
+  sed -i "s/{codename}/$DEVICE/g" $BUILD_PATH
+fi
 
 # generate installation instructions for the device
-(cat << EOF) > $INSTALL_PATH
----
-sidebar: home_sidebar
-title: Install LineageOS on $DEVICE
-folder: install
-permalink: /devices/$DEVICE/install
-device: $DEVICE
----
-{% include templates/device_install.md %}
-
-EOF
+if [ ! -f $INSTALL_PATH ]; then
+  cat scripts/templates/install.md > $INSTALL_PATH
+  sed -i "s/{codename}/$DEVICE/g" $INSTALL_PATH
+fi
diff --git a/scripts/templates/build.md b/scripts/templates/build.md
new file mode 100644
index 0000000..1f39144
--- /dev/null
+++ b/scripts/templates/build.md
@@ -0,0 +1,8 @@
+---
+sidebar: home_sidebar
+title: Build for {codename}
+folder: build
+permalink: /devices/{codename}/build
+device: {codename}
+---
+{% include templates/device_build.md %}
diff --git a/scripts/templates/info.md b/scripts/templates/info.md
new file mode 100644
index 0000000..d9e0cc4
--- /dev/null
+++ b/scripts/templates/info.md
@@ -0,0 +1,9 @@
+---
+sidebar: home_sidebar
+title: Info about {codename}
+folder: info
+layout: deviceinfo
+permalink: /devices/{codename}/
+device: {codename}
+---
+{% include templates/device_info.md %}
diff --git a/scripts/templates/install.md b/scripts/templates/install.md
new file mode 100644
index 0000000..3fbafa8
--- /dev/null
+++ b/scripts/templates/install.md
@@ -0,0 +1,8 @@
+---
+sidebar: home_sidebar
+title: Install LineageOS on {codename}
+folder: install
+permalink: /devices/{codename}/install
+device: {codename}
+---
+{% include templates/device_install.md %}
diff --git a/test/validate.rb b/test/validate.rb
index 4657178..a27dd81 100755
--- a/test/validate.rb
+++ b/test/validate.rb
@@ -13,38 +13,71 @@ def yaml_to_json(yaml)
    YAML.load_file(yaml).to_json
 end
 
-schema_path = File.expand_path('schema-06.yml', __dir__)
-schema = yaml_to_json(schema_path)
-
-sample_path = File.expand_path('../device_sample/sample.yml', __dir__)
-begin
-  sample = yaml_to_json(sample_path)
-rescue Psych::SyntaxError => e
-  puts 'Error parsing sample file: ' + e.message
+def to_relative_path(path)
+  wiki_dir = File.expand_path('../', __dir__) + '/'
+  return path.sub(wiki_dir, '')
 end
 
-begin
-  JSON::Validator.validate!(schema, sample, :validate_schema => true)
-rescue JSON::Schema::ValidationError => e
-  puts sample_path + ': ' + e.message
+def validate_json(schema, device_path)
+  device = yaml_to_json(device_path)
+  JSON::Validator.validate!(schema, device, :validate_schema => true)
+rescue JSON::Schema::ValidationError, Psych::SyntaxError => e
+  puts to_relative_path(device_path) + ': ' + e.message
   at_exit { exit false }
 end
 
+def load_template(template_file)
+  template_dir = File.expand_path('../scripts/templates', __dir__) + '/'
+  return File.open(template_dir + template_file, 'r') { |file| file.read }
+end
+
+def validate_template(template, path, codename)
+  if File.file?(path)
+    template_content = template.gsub('{codename}', codename)
+    file_content = File.open(path, 'r') { |file| file.read }
+    if not template_content == file_content
+      puts to_relative_path(path) + ': Not generated from template'
+      at_exit { exit false }
+    end
+  else
+    puts 'Missing file for ' + codename + ' at ' + path
+    at_exit { exit false }
+  end
+end
+
 trap "SIGINT" do
   puts "Aborted by user"
   exit 130
 end
 
-device_dir = File.expand_path('../_data/devices/', __dir__) + '/'
+schema_path = File.expand_path('schema-06.yml', __dir__)
+schema = yaml_to_json(schema_path)
+
+sample_path = File.expand_path('../device_sample/sample.yml', __dir__)
+validate_json(schema, sample_path)
+
+wiki_dir = File.expand_path('../', __dir__) + '/'
+device_dir = wiki_dir + '_data/devices/'
+pages = wiki_dir + 'pages/'
+build_dir = pages + 'build/'
+info_dir = pages + 'info/'
+install_dir = pages + 'install/'
+
+# load once, these are equal across all devices
+build_template = load_template('build.md')
+info_template = load_template('info.md')
+install_template = load_template('install.md')
+
 Dir.entries(device_dir).each do |filename|
   device_path = device_dir + filename
   if File.file?(device_path)
-    begin
-      device = yaml_to_json(device_path)
-      JSON::Validator.validate!(schema, device, :validate_schema => true)
-    rescue JSON::Schema::ValidationError, Psych::SyntaxError => e
-      puts device_path + ': ' + e.message
-      at_exit { exit false }
-    end
+    validate_json(schema, device_path)
+
+    codename = filename.sub('.yml', '')
+    test_file = codename + '.md'
+
+    validate_template(build_template, build_dir + test_file, codename)
+    validate_template(info_template, info_dir + test_file, codename)
+    validate_template(install_template, install_dir + test_file, codename)
   end
 end
-- 
2.17.1

