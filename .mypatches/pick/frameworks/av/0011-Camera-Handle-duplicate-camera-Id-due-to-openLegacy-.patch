From e7056c402472b0797c2c9b18b2b85c0213bda8ff Mon Sep 17 00:00:00 2001
From: Mounika Reddy Tangirala <mtangi@codeaurora.org>
Date: Thu, 28 Jun 2018 12:28:53 +0530
Subject: [PATCH 11/11] Camera: Handle duplicate camera Id due to openLegacy
 support

When HAL supports openLegacy, same camera id can be added more than
once.

Because we now use vector to store API1 compatible camera ids, make
sure no duplicate strings are added.

Test: Vendor camera app using openLegacy, Camera CTS

CRs-Fixed: 2267875

Bug: 110815837

Change-Id: I327744e102cc75929ebcdf51661f9f4ec7f3acf9
---
 .../libcameraservice/common/CameraProviderManager.cpp      | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/services/camera/libcameraservice/common/CameraProviderManager.cpp b/services/camera/libcameraservice/common/CameraProviderManager.cpp
index 21cfd44c8..196c2a6d1 100644
--- a/services/camera/libcameraservice/common/CameraProviderManager.cpp
+++ b/services/camera/libcameraservice/common/CameraProviderManager.cpp
@@ -635,7 +635,12 @@ status_t CameraProviderManager::ProviderInfo::addDevice(const std::string& name,
 
     mUniqueCameraIds.insert(id);
     if (isAPI1Compatible) {
-        mUniqueAPI1CompatibleCameraIds.push_back(id);
+        // addDevice can be called more than once for the same camera id if HAL
+        // supports openLegacy.
+        if (std::find(mUniqueAPI1CompatibleCameraIds.begin(), mUniqueAPI1CompatibleCameraIds.end(),
+                id) == mUniqueAPI1CompatibleCameraIds.end()) {
+            mUniqueAPI1CompatibleCameraIds.push_back(id);
+        }
     }
 
     if (parsedId != nullptr) {
-- 
2.17.1

