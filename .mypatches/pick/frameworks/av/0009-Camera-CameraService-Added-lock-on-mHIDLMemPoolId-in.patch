From d6f421b44f3d365f6b149c786d1098094b2fed2e Mon Sep 17 00:00:00 2001
From: Abhinav Sohane <asohan@codeaurora.org>
Date: Fri, 6 Oct 2017 16:40:46 +0530
Subject: [PATCH 09/14] Camera:CameraService: Added lock on mHIDLMemPoolId in
 QDataCallback..

securing mHIDLMemPoolId (unordered_map variable) from multithreading.

Change-Id: I3fbe4ad836c2abbd512e3728cf49f9424b726ba0
---
 .../camera/libcameraservice/device1/CameraHardwareInterface.cpp  | 1 +
 1 file changed, 1 insertion(+)

diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
index 8edcca345..53a9f2567 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
@@ -140,6 +140,7 @@ hardware::Return<void> CameraHardwareInterface::dataCallback(
 hardware::Return<void> CameraHardwareInterface::QDataCallback(
         DataCallbackMsg msgType, uint32_t data, uint32_t bufferIndex,
         const vendor::qti::hardware::camera::device::V1_0::QCameraFrameMetadata& metadata) {
+    std::lock_guard<std::mutex> lock(mHidlMemPoolMapLock);
     if (mHidlMemPoolMap.count(data) == 0) {
         ALOGE("%s: memory pool ID %d not found", __FUNCTION__, data);
         return hardware::Void();
-- 
2.17.1

