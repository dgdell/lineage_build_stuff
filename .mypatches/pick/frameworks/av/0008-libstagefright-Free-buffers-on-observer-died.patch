From c8b9c395592a26de0be6ca299d89aa717dfc780f Mon Sep 17 00:00:00 2001
From: Manikanta Kanamarlapudi <kmanikan@codeaurora.org>
Date: Wed, 30 Aug 2017 12:33:59 +0530
Subject: [PATCH 08/25] libstagefright: Free buffers on observer died

If observer died while allocating buffers, component remains
in loaded state. In cleanup, it checks for idle state to
free the allocated buffers which leads to memory leak.
Hence explicitly calling free buffers to avoid memory leak.

Change-Id: Ia8bd21f161473a18be30ec0fd7ad84b9e8fd83ee
---
 media/libstagefright/omx/OMXNodeInstance.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/media/libstagefright/omx/OMXNodeInstance.cpp b/media/libstagefright/omx/OMXNodeInstance.cpp
index 7d2c2dd9a..b8b9011f1 100644
--- a/media/libstagefright/omx/OMXNodeInstance.cpp
+++ b/media/libstagefright/omx/OMXNodeInstance.cpp
@@ -500,6 +500,9 @@ status_t OMXNodeInstance::freeNode() {
 
     Mutex::Autolock _l(mLock);
 
+    if (mActiveBuffers.size() > 0) {
+        freeActiveBuffers();
+    }
     status_t err = mOwner->freeNode(this);
 
     mDispatcher.clear();
-- 
2.17.1

