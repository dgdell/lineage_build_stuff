From 7b583d9c7518ded0529ef0dda5cc394c970c4daa Mon Sep 17 00:00:00 2001
From: Abhinav Sohane <asohan@codeaurora.org>
Date: Wed, 18 Oct 2017 11:17:18 +0530
Subject: [PATCH 10/13] Camera: CameraHardwareInterface: Releasing
 mHIDLMemoryMapLock in QdataCallback

Issue: Camera is getting stuck due to mHIDLMemoryMapLock when called for
       QDataCallback then  unregister  memory from HAL.
Solution: Releasing mHIDLMemoryMapLock after reading mHIDLMemoryMap variable

Change-Id: I7239f6eb6a9dec67393e11b83d0ef6c986215940
---
 .../device1/CameraHardwareInterface.cpp            | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
index 53a9f2567..498485430 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
@@ -140,15 +140,19 @@ hardware::Return<void> CameraHardwareInterface::dataCallback(
 hardware::Return<void> CameraHardwareInterface::QDataCallback(
         DataCallbackMsg msgType, uint32_t data, uint32_t bufferIndex,
         const vendor::qti::hardware::camera::device::V1_0::QCameraFrameMetadata& metadata) {
-    std::lock_guard<std::mutex> lock(mHidlMemPoolMapLock);
-    if (mHidlMemPoolMap.count(data) == 0) {
-        ALOGE("%s: memory pool ID %d not found", __FUNCTION__, data);
-        return hardware::Void();
+    camera_memory_t* mem = nullptr;
+    {
+        std::lock_guard<std::mutex> lock(mHidlMemPoolMapLock);
+        if (mHidlMemPoolMap.count(data) == 0) {
+            ALOGE("%s: memory pool ID %d not found", __FUNCTION__, data);
+            return hardware::Void();
+        }
+        mem = mHidlMemPoolMap.at(data);
     }
     camera_frame_metadata_t md;
     md.number_of_faces = metadata.faces.size();
     md.faces = (camera_face_t*) metadata.faces.data();
-    sDataCb((int32_t) msgType, mHidlMemPoolMap.at(data), bufferIndex, &md, this);
+    sDataCb((int32_t) msgType, mem, bufferIndex, &md, this);
     return hardware::Void();
 }
 #endif
-- 
2.17.1

