From 7fcbce275ddf29753de1eccc59c4513eee19fecd Mon Sep 17 00:00:00 2001
From: Demon Singur <demonsingur@gmail.com>
Date: Thu, 7 Jun 2018 17:18:05 +0000
Subject: [PATCH 14/20] Add support for black style

Change-Id: Iebd397f609102d5afa44f1c813cdd8253a6c499c
---
 .../systemui/statusbar/phone/StatusBar.java   | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index 8d201ce9257..ded9fa10f2c 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -410,11 +410,16 @@ public class StatusBar extends SystemUI implements DemoMode,
     private static final int DYNAMIC_STYLE = 1;
     private static final int LIGHT_STYLE = 2;
     private static final int DARK_STYLE = 3;
+    private static final int BLACK_STYLE = 4;
 
     private static final String[] DARK_OVERLAYS = {
             "org.lineageos.overlay.dark",
     };
 
+    private static final String[] BLACK_OVERLAYS = {
+            "org.lineageos.overlay.black",
+    };
+
     static {
         boolean onlyCoreApps;
         boolean freeformWindowManagement;
@@ -3047,6 +3052,10 @@ public class StatusBar extends SystemUI implements DemoMode,
         return isUsingTheme(DARK_OVERLAYS[0]);
     }
 
+    public boolean isUsingBlackTheme() {
+        return isUsingTheme(BLACK_OVERLAYS[0]);
+    }
+
     private boolean isLiveDisplayNightModeOn() {
         // SystemUI is initialized before LiveDisplay, so the service may not
         // be ready when this is called the first time
@@ -3855,6 +3864,7 @@ public class StatusBar extends SystemUI implements DemoMode,
             pw.println("    overlay manager not initialized!");
         } else {
             pw.println("    dark overlay on: " + isUsingDarkTheme());
+            pw.println("    black overlay on: " + isUsingBlackTheme());
         }
         final boolean lightWpTheme = mContext.getThemeResId() == R.style.Theme_SystemUI_Light;
         pw.println("    light wallpaper theme: " + lightWpTheme);
@@ -4959,6 +4969,8 @@ public class StatusBar extends SystemUI implements DemoMode,
         int activeStyle = LIGHT_STYLE;
         if (isUsingDarkTheme()) {
             activeStyle = DARK_STYLE;
+        } else if (isUsingBlackTheme()) {
+            activeStyle = BLACK_STYLE;
         }
         return activeStyle;
     }
@@ -4967,6 +4979,8 @@ public class StatusBar extends SystemUI implements DemoMode,
         switch (style) {
             case DARK_STYLE:
                 return DARK_OVERLAYS;
+            case BLACK_STYLE:
+                return BLACK_OVERLAYS;
             default:
                 return null;
         }
@@ -4988,7 +5002,7 @@ public class StatusBar extends SystemUI implements DemoMode,
     }
 
     private boolean isNightStyle(int style) {
-        return style == DARK_STYLE;
+        return style == DARK_STYLE || style == BLACK_STYLE;
     }
 
     private void updateStyle(int style) {
@@ -5012,7 +5026,7 @@ public class StatusBar extends SystemUI implements DemoMode,
     protected void updateTheme() {
         final boolean inflated = mStackScroller != null;
 
-        // 0 = auto, 1 = time-based, 2 = light, 3 = dark
+        // 0 = auto, 1 = time-based, 2 = light, 3 = dark, 4 = black
         final int globalStyleSetting = LineageSettings.System.getInt(mContext.getContentResolver(),
                 LineageSettings.System.BERRY_GLOBAL_STYLE, 0);
         WallpaperColors systemColors = mColorExtractor
@@ -5027,6 +5041,7 @@ public class StatusBar extends SystemUI implements DemoMode,
                 break;
             case LIGHT_STYLE:
             case DARK_STYLE:
+            case BLACK_STYLE:
                 actualStyle = globalStyleSetting;
                 break;
             default:
-- 
2.17.1

