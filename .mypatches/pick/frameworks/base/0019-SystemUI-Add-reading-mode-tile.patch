From ba5096c63621fd9a7bf4d39b299c7cd0db466cd3 Mon Sep 17 00:00:00 2001
From: Joey <joey@lineageos.org>
Date: Wed, 16 May 2018 17:16:06 +0200
Subject: [PATCH 19/59] SystemUI: Add reading mode tile

Author: Joey <joey@lineageos.org>
Date:   Wed May 16 17:16:06 2018 +0200

    base: add reading mode tile

    Change-Id: I1c515cbeff0dd5a1fa0c00bc9390a66eb104c7f0
    Signed-off-by: Joey <joey@lineageos.org>

Author: Michael Bestas <mkbestas@lineageos.org>
Date:   Sat May 26 00:58:57 2018 +0300

    SystemUI: Fix reading mode tile accessibility strings

    Change-Id: I4f0af56e4947b037e1e2dda79132523d13458818

Author: Paul Keith <javelinanddart@gmail.com>
Date:   Wed Aug 8 18:59:25 2018 +0200

    SystemUI: Update reading mode tile for new API

    Change-Id: I9fbf1b4de30079c987b75e37e52e234fa2f86c5d

Change-Id: I365ee54b2b2adc52d804a5fc1d35690ef5636071
---
 packages/SystemUI/LineageManifest.xml         |   1 +
 .../SystemUI/res/drawable/ic_qs_reader.xml    |  35 ++++++
 packages/SystemUI/res/values/cm_strings.xml   |   7 ++
 packages/SystemUI/res/values/config.xml       |   2 +-
 .../systemui/qs/tileimpl/QSFactoryImpl.java   |   5 +-
 .../systemui/qs/tiles/ReadingModeTile.java    | 112 ++++++++++++++++++
 6 files changed, 160 insertions(+), 2 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_reader.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/ReadingModeTile.java

diff --git a/packages/SystemUI/LineageManifest.xml b/packages/SystemUI/LineageManifest.xml
index 6016327828e..36d137103de 100644
--- a/packages/SystemUI/LineageManifest.xml
+++ b/packages/SystemUI/LineageManifest.xml
@@ -22,6 +22,7 @@
     <!-- QS Tiles -->
     <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
     <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
+    <uses-permission android:name="lineageos.permission.HARDWARE_ABSTRACTION_ACCESS" />
     <uses-permission android:name="lineageos.permission.MANAGE_LIVEDISPLAY" />
     <uses-permission android:name="lineageos.permission.WRITE_SETTINGS" />
     <uses-permission android:name="lineageos.permission.WRITE_SECURE_SETTINGS" />
diff --git a/packages/SystemUI/res/drawable/ic_qs_reader.xml b/packages/SystemUI/res/drawable/ic_qs_reader.xml
new file mode 100644
index 00000000000..3c17269f8c7
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_reader.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2018 The LineageOS Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M21,4H3C1.9,4 1,4.9 1,6v13c0,1.1 0.9,2 2,2h18c1.1,0 2,-0.9 2,-2V6C23,4.9 22.1,4 21,4zM3,19V6h8v13H3zM21,19h-8V6h8V19z"/>
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M14,9.5h6v1.5h-6z"/>
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M14,12h6v1.5h-6z"/>
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M14,14.5h6v1.5h-6z"/>
+</vector>
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index 1f9c967badf..8c3fa98c9d3 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -41,6 +41,13 @@
     <string name="accessibility_quick_settings_heads_up_changed_off">Heads up turned off.</string>
     <string name="accessibility_quick_settings_heads_up_changed_on">Heads up turned on.</string>
 
+    <!-- Reader mode QS tile -->
+    <string name="quick_settings_reading_mode">Reading mode</string>
+    <string name="accessibility_quick_settings_reading_mode_on">Reading mode on.</string>
+    <string name="accessibility_quick_settings_reading_mode_off">Reading mode off.</string>
+    <string name="accessibility_quick_settings_reading_mode_changed_on">Reading mode turned on.</string>
+    <string name="accessibility_quick_settings_reading_mode_changed_off">Reading mode turned off.</string>
+
     <!-- Sync QS tile -->
     <string name="quick_settings_sync_label">Sync</string>
     <string name="accessibility_quick_settings_sync_off">Sync off.</string>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index b99ee2e0a0c..ce7f929da6d 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -123,7 +123,7 @@
 
     <!-- Tiles native to System UI. Order should match "quick_settings_tiles_default" -->
     <string name="quick_settings_tiles_stock" translatable="false">
-        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,adb_network,ambient_display,caffeine,heads_up,livedisplay,sync,usb_tether,volume_panel
+        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,adb_network,ambient_display,caffeine,heads_up,livedisplay,reading_mode,sync,usb_tether,volume_panel
     </string>
 
     <!-- The tiles to display in QuickSettings -->
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
index d8d54591bfa..6ab32b8fbd5 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2017 The Android Open Source Project
- * Copyright (C) 2017 The LineageOS Project
+ * Copyright (C) 2017-2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use mHost file
  * except in compliance with the License. You may obtain a copy of the License at
@@ -43,6 +43,7 @@ import com.android.systemui.qs.tiles.LiveDisplayTile;
 import com.android.systemui.qs.tiles.LocationTile;
 import com.android.systemui.qs.tiles.NfcTile;
 import com.android.systemui.qs.tiles.NightDisplayTile;
+import com.android.systemui.qs.tiles.ReadingModeTile;
 import com.android.systemui.qs.tiles.RotationLockTile;
 import com.android.systemui.qs.tiles.SyncTile;
 import com.android.systemui.qs.tiles.UsbTetherTile;
@@ -118,6 +119,8 @@ public class QSFactoryImpl implements QSFactory {
                 return new HeadsUpTile(mHost);
             case "livedisplay":
                 return new LiveDisplayTile(mHost);
+            case "reading_mode":
+                return new ReadingModeTile(mHost);
             case "sync":
                 return new SyncTile(mHost);
             case "usb_tether":
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/ReadingModeTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/ReadingModeTile.java
new file mode 100644
index 00000000000..a11afcf8e69
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/ReadingModeTile.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.Intent;
+import android.service.quicksettings.Tile;
+
+import com.android.systemui.plugins.qs.QSTile.BooleanState;
+import com.android.systemui.qs.QSHost;
+import com.android.systemui.qs.tileimpl.QSTileImpl;
+import com.android.systemui.R;
+
+import org.lineageos.internal.logging.LineageMetricsLogger;
+
+import lineageos.hardware.LineageHardwareManager;
+import lineageos.providers.LineageSettings;
+
+public class ReadingModeTile extends QSTileImpl<BooleanState> {
+
+    private final Icon mIcon = ResourceIcon.get(R.drawable.ic_qs_reader);
+
+    private static final Intent LIVEDISPLAY_SETTINGS =
+            new Intent("org.lineageos.lineageparts.LIVEDISPLAY_SETTINGS");
+
+    private LineageHardwareManager mHardware;
+
+    public ReadingModeTile(QSHost host) {
+        super(host);
+        mHardware = LineageHardwareManager.getInstance(mContext);
+    }
+
+    @Override
+    public BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    protected void handleClick() {
+        boolean newStatus = !isReadingModeEnabled();
+        mHardware.set(LineageHardwareManager.FEATURE_READING_ENHANCEMENT, newStatus);
+        refreshState();
+    }
+
+    @Override
+    public Intent getLongClickIntent() {
+        return LIVEDISPLAY_SETTINGS;
+    }
+
+    @Override
+    public boolean isAvailable() {
+        return mHardware.isSupported(LineageHardwareManager.FEATURE_READING_ENHANCEMENT);
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        state.value = isReadingModeEnabled();
+        state.icon = mIcon;
+        if (state.value) {
+            state.contentDescription = mContext.getString(
+                    R.string.accessibility_quick_settings_reading_mode_on);
+            state.state = Tile.STATE_ACTIVE;
+        } else {
+            state.contentDescription = mContext.getString(
+                    R.string.accessibility_quick_settings_reading_mode_off);
+            state.state = Tile.STATE_INACTIVE;
+        }
+        state.label = getTileLabel();
+    }
+
+    @Override
+    public CharSequence getTileLabel() {
+        return mContext.getString(R.string.quick_settings_reading_mode);
+    }
+
+    @Override
+    protected String composeChangeAnnouncement() {
+        if (mState.value) {
+            return mContext.getString(
+                    R.string.accessibility_quick_settings_reading_mode_changed_on);
+        } else {
+            return mContext.getString(
+                    R.string.accessibility_quick_settings_reading_mode_changed_off);
+        }
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return LineageMetricsLogger.TILE_READING_MODE;
+    }
+
+    @Override
+    public void handleSetListening(boolean listening) {
+    }
+
+    private boolean isReadingModeEnabled() {
+        return mHardware.get(LineageHardwareManager.FEATURE_READING_ENHANCEMENT);
+    }
+}
-- 
2.17.1

