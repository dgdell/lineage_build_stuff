From 9abce5488199630a0e3df8d79e12748a0941b74c Mon Sep 17 00:00:00 2001
From: Thomas Shum <jabashque@gmail.com>
Date: Thu, 27 Sep 2018 22:36:40 -0700
Subject: [PATCH 38/40] SystemUI: Make scrims dark & text white by pretending
 wallpaper is black

The previous attempt at 759d6831f0207f8b59445b33fd57d770c16d3750 tries
to alter the GradientColor objects returned from
SysuiColorExtractor.getColors(), but it doesn't set SupportsDarkText to
false (resulting in the opaque notifications scrim).
Even if it did, though, it wouldn't be able to fix the lockscreem scrim
text from being black, as that doesn't use the GradientColor objects
that were modified. As a result, lockscreen text is made a lot less
readable.

Instead, modify SysuiColorExtractor.getColors() to always return a black
GradientColor object, so that everything that tries to extract wallpaper
colors will get the black GradientColor object. Not only does this fix
the opaque notifications scrim and the dark lockscreen text, but it also
stops the color tinting in the Recent Apps scrim.

This commit also reverts 759d6831f0207f8b59445b33fd57d770c16d3750
Change-Id: I6bbf5e17c8484fcdca07fd487ca753034fd28996
---
 .../colorextraction/SysuiColorExtractor.java  | 20 +++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/colorextraction/SysuiColorExtractor.java b/packages/SystemUI/src/com/android/systemui/colorextraction/SysuiColorExtractor.java
index 34c05a5a4a7..eda85c5e27a 100644
--- a/packages/SystemUI/src/com/android/systemui/colorextraction/SysuiColorExtractor.java
+++ b/packages/SystemUI/src/com/android/systemui/colorextraction/SysuiColorExtractor.java
@@ -19,6 +19,7 @@ package com.android.systemui.colorextraction;
 import android.app.WallpaperColors;
 import android.app.WallpaperManager;
 import android.content.Context;
+import android.graphics.Color;
 import android.os.Handler;
 import android.os.RemoteException;
 import android.os.Trace;
@@ -48,6 +49,8 @@ public class SysuiColorExtractor extends ColorExtractor implements Dumpable {
     private boolean mWallpaperVisible;
     // Colors to return when the wallpaper isn't visible
     private final GradientColors mWpHiddenColors;
+    private final GradientColors mWpAlwaysBlackColors;
+    private static final int SCRIM_DEFAULT_COLOR = Color.BLACK;
 
     public SysuiColorExtractor(Context context) {
         this(context, new Tonal(context), true);
@@ -57,6 +60,10 @@ public class SysuiColorExtractor extends ColorExtractor implements Dumpable {
     public SysuiColorExtractor(Context context, ExtractionType type, boolean registerVisibility) {
         super(context, type);
         mWpHiddenColors = new GradientColors();
+        mWpAlwaysBlackColors = new GradientColors();
+        mWpAlwaysBlackColors.setMainColor(SCRIM_DEFAULT_COLOR);
+        mWpAlwaysBlackColors.setSecondaryColor(SCRIM_DEFAULT_COLOR);
+        mWpAlwaysBlackColors.setSupportsDarkText(false);
 
         WallpaperColors systemColors = getWallpaperColors(WallpaperManager.FLAG_SYSTEM);
         updateDefaultGradients(systemColors);
@@ -147,6 +154,8 @@ public class SysuiColorExtractor extends ColorExtractor implements Dumpable {
     }
 
     /**
+     * Get Wallpaper colors where the wallpaper is always assumed to be a completely
+     * black image.
      *
      * @param which FLAG_LOCK or FLAG_SYSTEM
      * @param type TYPE_NORMAL, TYPE_DARK or TYPE_EXTRA_DARK
@@ -155,16 +164,7 @@ public class SysuiColorExtractor extends ColorExtractor implements Dumpable {
      * @return colors
      */
     public GradientColors getColors(int which, int type, boolean ignoreWallpaperVisibility) {
-        // mWallpaperVisible only handles the "system wallpaper" and will be always set to false
-        // if we have different lock and system wallpapers.
-        if (which == WallpaperManager.FLAG_LOCK) {
-            ignoreWallpaperVisibility = true;
-        }
-        if (mWallpaperVisible || ignoreWallpaperVisibility) {
-            return super.getColors(which, type);
-        } else {
-            return mWpHiddenColors;
-        }
+        return mWpAlwaysBlackColors;
     }
 
     @VisibleForTesting
-- 
2.17.1

