From 3ee1720874776df091e0150d8c6ffc4201fc6b5a Mon Sep 17 00:00:00 2001
From: Michael W <baddaemon87@gmail.com>
Date: Sat, 23 Jun 2018 16:00:37 +0200
Subject: [PATCH 20/39] SystemUI: Require unlock to toggle location

* Additionally use canSkipBouncer() instead of isShowing()

Change-Id: I8a978255c938184e586cd7a7bdc08e76583c6ce2

# Conflicts:
#	packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
---
 .../android/systemui/qs/tiles/LocationTile.java  | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
index 940f23f15ee..ccb3f19f38b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
@@ -59,6 +59,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
     private final LocationDetailAdapter mDetailAdapter;
     private final KeyguardMonitor mKeyguard;
     private final Callback mCallback = new Callback();
+    private final ActivityStarter mActivityStarter;
     private int mLastState;
     private MetricsLogger mMetricsLogger;
 
@@ -67,6 +68,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
         mController = Dependency.get(LocationController.class);
         mKeyguard = Dependency.get(KeyguardMonitor.class);
         mDetailAdapter = (LocationDetailAdapter) createDetailAdapter();
+        mActivityStarter = Dependency.get(ActivityStarter.class);
         mMetricsLogger = new MetricsLogger();
     }
 
@@ -105,21 +107,27 @@ public class LocationTile extends QSTileImpl<BooleanState> {
     @Override
     protected void handleClick() {
         final boolean wasEnabled = mState.value;
+        if (mKeyguard.isSecure() && !mKeyguard.canSkipBouncer()) {
+            mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
+                mMetricsLogger.action(getMetricsCategory(), !wasEnabled);
+                mController.setLocationEnabled(!wasEnabled);
+            });
+            return;
+        }
         mMetricsLogger.action(getMetricsCategory(), !wasEnabled);
         mController.setLocationEnabled(!wasEnabled);
     }
 
     @Override
     protected void handleSecondaryClick() {
-        if (mKeyguard.isSecure() && mKeyguard.isShowing()) {
-            Dependency.get(ActivityStarter.class).postQSRunnableDismissingKeyguard(() -> {
-                final boolean wasEnabled = mState.value;
+        final boolean wasEnabled = mState.value;
+        if (mKeyguard.isSecure() && !mKeyguard.canSkipBouncer()) {
+            mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
                 mHost.openPanels();
                 mController.setLocationEnabled(!wasEnabled);
             });
             return;
         }
-        final boolean wasEnabled = mState.value;
         if (!wasEnabled) {
             mController.setLocationEnabled(!wasEnabled);
         }
-- 
2.17.1

