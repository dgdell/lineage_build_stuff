From 80aaf7cc06b324e8dd350ce2520793779820c74a Mon Sep 17 00:00:00 2001
From: martincz <martincz@mokeedev.com>
Date: Thu, 2 Apr 2015 22:21:36 +0800
Subject: [PATCH 16/64] PhoneWindowManager: Tap volume buttons to answer call

Change-Id: I5ebe1ad88950ba56ce1445b77b7f8cdf030463da
---
 .../android/server/policy/PhoneWindowManager.java    | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 708510ef2b1..5bf50b74dbb 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -666,6 +666,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     boolean mVolumeUpWakeTriggered;
     boolean mVolumeMuteWakeTriggered;
 
+    boolean mVolumeAnswerCall;
+
     int mPointerLocationMode = 0; // guarded by mLock
 
     // The last window we were told about in focusChanged.
@@ -1142,6 +1144,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             resolver.registerContentObserver(LineageSettings.System.getUriFor(
                     LineageSettings.System.VOLUME_WAKE_SCREEN), false, this,
                     UserHandle.USER_ALL);
+            resolver.registerContentObserver(LineageSettings.System.getUriFor(
+                    LineageSettings.System.VOLUME_ANSWER_CALL), false, this,
+                    UserHandle.USER_ALL);
 
             updateSettings();
         }
@@ -2773,6 +2778,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             mVolumeWakeScreen = (LineageSettings.System.getIntForUser(resolver,
                     LineageSettings.System.VOLUME_WAKE_SCREEN, 0, UserHandle.USER_CURRENT) == 1)
                     && ((mDeviceHardwareWakeKeys & KEY_MASK_VOLUME) != 0);
+            mVolumeAnswerCall = (LineageSettings.System.getIntForUser(resolver,
+                    LineageSettings.System.VOLUME_ANSWER_CALL, 0, UserHandle.USER_CURRENT) == 1)
+                    && ((mDeviceHardwareWakeKeys & KEY_MASK_VOLUME) != 0);
 
             // Configure wake gesture.
             boolean wakeGestureEnabledSetting = Settings.Secure.getIntForUser(resolver,
@@ -6633,6 +6641,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                         // When {@link #mHandleVolumeKeysInWM} is set, volume key events
                         // should be dispatched to WM.
                         if (telecomManager.isRinging()) {
+                            if (mVolumeAnswerCall) {
+                                telecomManager.acceptRingingCall();
+                            }
+
                             // If an incoming call is ringing, either VOLUME key means
                             // "silence ringer".  We handle these keys here, rather than
                             // in the InCallScreen, to make sure we'll respond to them
-- 
2.17.1

