From 3d78e3a59e591e5689a880e33368fcf716f98245 Mon Sep 17 00:00:00 2001
From: Roman Birg <roman@cyngn.com>
Date: Thu, 4 Feb 2016 16:28:00 -0800
Subject: [PATCH 49/64] SystemUI: handle camera launch gesture from keyhandler

Author: Roman Birg <roman@cyngn.com>
Date:   Thu Feb 4 16:28:00 2016 -0800

    framework: move device key handler logic, fix gesture camera launch

    In order to make device camera gestures behave the same way as launching
    the camera by double tapping the power button, route DeviceKeyHandler
    logic through the GestureLauncherService.

    A callback is used in order to avoid publishing the
    GestureLauncherService into the System service registry, because the
    KeyHandler code cannot directly access services local to the system
    process.

    OPO-427

    Change-Id: I2a8860b278f65ccf31bfee151513d8a23ab746c5
    Signed-off-by: Roman Birg <roman@cyngn.com>

Author: Roman Birg <roman@cyngn.com>
Date:   Sat Feb 13 09:08:21 2016 -0800

    KeyHandler: don't break old interfaces

    Causing bootloops on devices, don't break old interfaces in the
    framework.

    OPO-427

    Change-Id: I49473b057bc4ed4710e9092c76e41c6a8134d2de
    Signed-off-by: Roman Birg <roman@cyngn.com>

Author: Roman Birg <roman@cyngn.com>
Date:   Tue Feb 16 17:22:01 2016 -0800

    SystemUI: handle camera launch gesture from keyhadler

    Includes partial reverts:

        Revert "KeyHandler: don't break old interfaces"
        This reverts commit 31ecbdc5fcc1263e9028107858565d951798fd93.

        Revert "framework: move device key handler logic, fix gesture camera launch"
        This reverts commit db1b4e6e4880be1828342be9bc468d36565a2ef0.

    Ref: OPO-427

    Change-Id: Ic15543a8f63ad4521ab0ab536d00224b0bd70f8c
    Signed-off-by: Roman Birg <roman@cyngn.com>

Author: Michael Bestas <mikeioannina@cyanogenmod.org>
Date:   Sat Feb 20 00:56:47 2016 +0200

    SystemUI: Don't vibrate on touchscreen camera gesture

    * This is usually handled in device-specific keyhandler,
      where vibration is optional and has the same duration
      in all gestures

    Change-Id: I879671c9d6f785137d63b8b70de35f5d5020748d

Change-Id: Iba9211b7d342f618c4082c34d11663d89861607a
---
 core/java/android/app/StatusBarManager.java     |  1 +
 .../systemui/statusbar/phone/StatusBar.java     | 17 ++++++++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/core/java/android/app/StatusBarManager.java b/core/java/android/app/StatusBarManager.java
index b83b44d295b..8af64b63681 100644
--- a/core/java/android/app/StatusBarManager.java
+++ b/core/java/android/app/StatusBarManager.java
@@ -106,6 +106,7 @@ public class StatusBarManager {
     public static final int CAMERA_LAUNCH_SOURCE_WIGGLE = 0;
     public static final int CAMERA_LAUNCH_SOURCE_POWER_DOUBLE_TAP = 1;
     public static final int CAMERA_LAUNCH_SOURCE_LIFT_TRIGGER = 2;
+    public static final int CAMERA_LAUNCH_SOURCE_SCREEN_GESTURE = 3;
 
     private Context mContext;
     private IStatusBarService mService;
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index bbbb7ef31bc..ff86c2a5ee8 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -1121,6 +1121,7 @@ public class StatusBar extends SystemUI implements DemoMode, TunerService.Tunabl
         filter.addAction(Intent.ACTION_SCREEN_OFF);
         filter.addAction(Intent.ACTION_SCREEN_ON);
         filter.addAction(DevicePolicyManager.ACTION_SHOW_DEVICE_MONITORING_DIALOG);
+        filter.addAction(lineageos.content.Intent.ACTION_SCREEN_CAMERA_GESTURE);
         context.registerReceiverAsUser(mBroadcastReceiver, UserHandle.ALL, filter, null, null);
 
         IntentFilter demoFilter = new IntentFilter();
@@ -3255,6 +3256,18 @@ public class StatusBar extends SystemUI implements DemoMode, TunerService.Tunabl
             else if (DevicePolicyManager.ACTION_SHOW_DEVICE_MONITORING_DIALOG.equals(action)) {
                 mQSPanel.showDeviceMonitoringDialog();
             }
+            else if (lineageos.content.Intent.ACTION_SCREEN_CAMERA_GESTURE.equals(action)) {
+                boolean userSetupComplete = Settings.Secure.getInt(mContext.getContentResolver(),
+                        Settings.Secure.USER_SETUP_COMPLETE, 0) != 0;
+                if (!userSetupComplete) {
+                    if (DEBUG) Log.d(TAG, String.format(
+                            "userSetupComplete = %s, ignoring camera launch gesture.",
+                            userSetupComplete));
+                    return;
+                }
+
+                onCameraLaunchGestureDetected(StatusBarManager.CAMERA_LAUNCH_SOURCE_SCREEN_GESTURE);
+            }
         }
     };
 
@@ -4865,7 +4878,9 @@ public class StatusBar extends SystemUI implements DemoMode, TunerService.Tunabl
             pm.wakeUp(SystemClock.uptimeMillis(), "com.android.systemui:CAMERA_GESTURE");
             mStatusBarKeyguardViewManager.notifyDeviceWakeUpRequested();
         }
-        vibrateForCameraGesture();
+        if (source != StatusBarManager.CAMERA_LAUNCH_SOURCE_SCREEN_GESTURE) {
+            vibrateForCameraGesture();
+        }
         if (!mStatusBarKeyguardViewManager.isShowing()) {
             startActivityDismissingKeyguard(KeyguardBottomAreaView.INSECURE_CAMERA_INTENT,
                     false /* onlyProvisioned */, true /* dismissShade */,
-- 
2.17.1

