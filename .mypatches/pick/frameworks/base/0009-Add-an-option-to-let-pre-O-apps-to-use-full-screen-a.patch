From d7c1b3cbfaade205dd62381cc9a1959ee3550eef Mon Sep 17 00:00:00 2001
From: Jesse Chan <jc@lineageos.org>
Date: Sat, 21 Apr 2018 23:45:57 -0700
Subject: [PATCH 09/11] Add an option to let pre-O apps to use full screen
 aspect ratio

When an app target pre-O releases, the default max aspect ratio
is 1.86:1 which leads to ugly black areas on devices that have
screens with higher aspect ratio (for example Galaxy S8/S9).

This change adds an option to allow users to change default
aspect ratio for pre-O apps to 2.1 which would fit recent devices.

Change-Id: I88035fb079bad9a66b36fe5e861017af568b8f4c
---
 core/java/android/provider/Settings.java              |  7 +++++++
 core/proto/android/providers/settings.proto           |  1 +
 core/res/res/values/config.xml                        |  3 +++
 core/res/res/values/symbols.xml                       |  2 ++
 packages/SettingsProvider/res/values/defaults.xml     |  3 +++
 .../providers/settings/SettingsProtoDumpUtil.java     |  3 +++
 .../android/providers/settings/SettingsProvider.java  | 11 +++++++++++
 .../java/com/android/server/am/ActivityRecord.java    |  4 +++-
 8 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index ad010a89ccd..fcc2f00306c 100755
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -7164,6 +7164,12 @@ public final class Settings {
          */
         public static final String VOLUME_LINK_NOTIFICATION = "volume_link_notification";
 
+        /**
+         * Controls whether full screen aspect ratio is enabled.
+         * @hide
+         */
+        public static final String FULL_SCREEN_ASPECT_RATIO = "full_screen_aspect_ratio";
+
         /**
          * This are the settings to be backed up.
          *
@@ -7266,6 +7272,7 @@ public final class Settings {
             SCREENSAVER_COMPONENTS,
             SCREENSAVER_ACTIVATE_ON_DOCK,
             SCREENSAVER_ACTIVATE_ON_SLEEP,
+            FULL_SCREEN_ASPECT_RATIO,
         };
 
         /** @hide */
diff --git a/core/proto/android/providers/settings.proto b/core/proto/android/providers/settings.proto
index fa645f4d4c6..390066d4fe7 100644
--- a/core/proto/android/providers/settings.proto
+++ b/core/proto/android/providers/settings.proto
@@ -507,6 +507,7 @@ message SecureSettingsProto {
     SettingProto instant_apps_enabled = 166;
     SettingProto device_paired = 167;
     SettingProto notification_badging = 168;
+    SettingProto full_screen_aspect_ratio = 169;
 }
 
 message SystemSettingsProto {
diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 3ce8959a983..c068c50ae1e 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -3089,4 +3089,7 @@
          booted.  -->
     <integer name="config_stableDeviceDisplayWidth">-1</integer>
     <integer name="config_stableDeviceDisplayHeight">-1</integer>
+
+    <!-- Whether device has screen with higher aspect ratio -->
+    <bool name="config_haveHigherAspectRatioScreen">false</bool>
 </resources>
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index 15a353ba2b0..eac9c135564 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -3078,4 +3078,6 @@
 
   <java-symbol type="integer" name="config_stableDeviceDisplayWidth" />
   <java-symbol type="integer" name="config_stableDeviceDisplayHeight" />
+
+  <java-symbol type="bool" name="config_haveHigherAspectRatioScreen" />
 </resources>
diff --git a/packages/SettingsProvider/res/values/defaults.xml b/packages/SettingsProvider/res/values/defaults.xml
index 4007cc909e2..ab29acefc38 100644
--- a/packages/SettingsProvider/res/values/defaults.xml
+++ b/packages/SettingsProvider/res/values/defaults.xml
@@ -190,4 +190,7 @@
 
     <!-- default setting for Settings.Global.DEFAULT_RESTRICT_BACKGROUND_DATA -->
     <bool name="def_restrict_background_data">false</bool>
+
+    <!-- Default setting for full screen aspect ratio -->
+    <bool name="def_full_screen_aspect_ratio">false</bool>
 </resources>
diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsProtoDumpUtil.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsProtoDumpUtil.java
index 819ee3ee57f..7b67a673ff1 100644
--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsProtoDumpUtil.java
+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsProtoDumpUtil.java
@@ -1446,6 +1446,9 @@ class SettingsProtoDumpUtil {
         dumpSetting(s, p,
                 Settings.Secure.NOTIFICATION_BADGING,
                 SecureSettingsProto.NOTIFICATION_BADGING);
+        dumpSetting(s, p,
+                Settings.Secure.FULL_SCREEN_ASPECT_RATIO,
+                SecureSettingsProto.FULL_SCREEN_ASPECT_RATIO);
     }
 
     private static void dumpProtoSystemSettingsLocked(
diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java
index a9b957bf037..977a358ca12 100644
--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java
+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java
@@ -3471,6 +3471,17 @@ public class SettingsProvider extends ContentProvider {
                     currentVersion = 148;
                 }
 
+                if (currentVersion == 148) {
+                    // Version 149: Set the default value for FULL_SCREEN_ASPECT_RATIO.
+                    SettingsState secureSettings = getSecureSettingsLocked(userId);
+                    secureSettings.insertSettingLocked(Settings.Secure.FULL_SCREEN_ASPECT_RATIO,
+                            getContext().getResources().getBoolean(
+                                    R.bool.def_full_screen_aspect_ratio) ? "1" : "0", null, true,
+                            SettingsState.SYSTEM_PACKAGE_NAME);
+
+		    currentVersion = 149;
+                }
+
                 // vXXX: Add new settings above this point.
 
                 if (currentVersion != newVersion) {
diff --git a/services/core/java/com/android/server/am/ActivityRecord.java b/services/core/java/com/android/server/am/ActivityRecord.java
index 9723dc8442d..d75406d621f 100644
--- a/services/core/java/com/android/server/am/ActivityRecord.java
+++ b/services/core/java/com/android/server/am/ActivityRecord.java
@@ -146,6 +146,7 @@ import android.os.SystemClock;
 import android.os.Trace;
 import android.os.UserHandle;
 import android.os.storage.StorageManager;
+import android.provider.Settings;
 import android.service.voice.IVoiceInteractionSession;
 import android.util.EventLog;
 import android.util.Log;
@@ -2314,7 +2315,8 @@ final class ActivityRecord extends ConfigurationContainer implements AppWindowCo
     // TODO(b/36505427): Consider moving this method and similar ones to ConfigurationContainer.
     private void computeBounds(Rect outBounds) {
         outBounds.setEmpty();
-        final float maxAspectRatio = info.maxAspectRatio;
+        final float maxAspectRatio = (Settings.Secure.getInt(service.mContext.getContentResolver(),
+            Settings.Secure.FULL_SCREEN_ASPECT_RATIO, 0) != 0) ? Float.parseFloat("2.1") : info.maxAspectRatio;
         final ActivityStack stack = getStack();
         if (task == null || stack == null || !task.mFullscreen || maxAspectRatio == 0
                 || isInVrUiMode(getConfiguration())) {
-- 
2.17.0

