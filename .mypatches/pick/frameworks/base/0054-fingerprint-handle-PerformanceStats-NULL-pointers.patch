From 363983c996bb6da1244b4c391ae13b376abb6d36 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=8Dcaro=20Hoff?= <icarohoff@gmail.com>
Date: Sun, 4 Jun 2017 12:17:51 -0300
Subject: [PATCH 54/67] fingerprint: handle PerformanceStats NULL pointers
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

bcc100a has added support for this feature, but the NULL checks
weren't complete, only "handleAcquired" was checking if PerformanceStats
was supported before calling the API.
Extend the NULL checks to "handleAuthenticated" and "handleFailedAttempt"
calls as well.

Change-Id: I3cc9b35ea6b81dc0c503b9feab940873b344323e
Signed-off-by: √çcaro Hoff <icarohoff@gmail.com>
---
 .../fingerprint/FingerprintService.java       | 20 +++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/services/core/java/com/android/server/fingerprint/FingerprintService.java b/services/core/java/com/android/server/fingerprint/FingerprintService.java
index e10acbf491c..9f9ed33f753 100644
--- a/services/core/java/com/android/server/fingerprint/FingerprintService.java
+++ b/services/core/java/com/android/server/fingerprint/FingerprintService.java
@@ -460,10 +460,12 @@ public class FingerprintService extends SystemService implements IHwBinder.Death
         if (client != null && client.onAuthenticated(fingerId, groupId)) {
             removeClient(client);
         }
-        if (fingerId != 0) {
-            mPerformanceStats.accept++;
-        } else {
-            mPerformanceStats.reject++;
+        if (mPerformanceStats != null) {
+            if (fingerId != 0) {
+                mPerformanceStats.accept++;
+            } else {
+                mPerformanceStats.reject++;
+            }
         }
     }
 
@@ -895,10 +897,12 @@ public class FingerprintService extends SystemService implements IHwBinder.Death
                 mFailedAttempts.put(currentUser, mFailedAttempts.get(currentUser, 0) + 1);
                 mTimedLockoutCleared.put(ActivityManager.getCurrentUser(), false);
                 final int lockoutMode = getLockoutMode();
-                if (lockoutMode == AuthenticationClient.LOCKOUT_PERMANENT) {
-                    mPerformanceStats.permanentLockout++;
-                } else if (lockoutMode == AuthenticationClient.LOCKOUT_TIMED) {
-                    mPerformanceStats.lockout++;
+                if (mPerformanceStats != null) {
+                    if (lockoutMode == AuthenticationClient.LOCKOUT_PERMANENT) {
+                        mPerformanceStats.permanentLockout++;
+                    } else if (lockoutMode == AuthenticationClient.LOCKOUT_TIMED) {
+                        mPerformanceStats.lockout++;
+                    }
                 }
 
                 // Failing multiple times will continue to push out the lockout time
-- 
2.17.1

