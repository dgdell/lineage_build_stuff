From 66ed9ef6c872455705967f64459d77330328530a Mon Sep 17 00:00:00 2001
From: Steve Kondik <steve@cyngn.com>
Date: Fri, 5 Dec 2014 08:31:29 -0800
Subject: [PATCH 20/23] SystemUI: Forward-port notification counters

 * Port from CM11

commit 3f871ec4dc7bd0f7a18f562159240b2cb0293610
Author: Roman Birg <roman@cyngn.com>
Date:   Thu Mar 19 14:32:33 2015 -0700

    SystemUI: small optimization for notification icon numbers

    Don't create the paint object used to draw notification icon count
    badges in the status bar unless the user actually wants to see those
    counts.

    Change-Id: Iabba316102583a798acdc124d9fb51c0d7826a0d
    Signed-off-by: Roman Birg <roman@cyngn.com>

commit 31b328164c9d6b6c6c3ee25f69099b0c4af3d4a8
Author: Zhao Wei Liew <zhaoweiliew@gmail.com>
Date:   Fri Dec 23 20:44:33 2016 +0800

    StatusBarIconView: Enable notification icon count by default

    This used to be enabled by default in previous releases.

    Change-Id: I24766bed58d081a0dd4763b9602379ff6435e092
    (cherry picked from commit 4b4e8b379c8f57895fda5ee14528b72910dfb414)

commit 2e13eedb73f182ac2aeb7e980fead2f8342bf680
Author: d34d <clark@cyngn.com>
Date:   Mon Feb 13 01:12:57 2017 -0500

    Show infinity for large notification counts

    This patch adds a new string to SystemUI for displaying the infinity
    symbol when a notification has a count larger than 999.  This only
    affects the notification icon in the status bar and does not change
    the text displayed in the actual notification.

    These changes were manually cherry-picked from cm-13.0.

    Change-Id: I3481aac13cd90ee20ed48194df3ec789c16c8b4b

[zwliew]
SystemUI: Use Tuner API for CM settings

Get rid of all the excess code by implementing TunerService.Tunable
and observing any changes made to the settings through it.

Remove UserContentObserver as the Tuner API handles user switches.

Also remove some unused imports that were introduced in earlier
CM commits, but were never removed since.

Change-Id: Id9d0954acffd00bdb470b9eccbdb3b45fbd995c1
---
 .../drawable-hdpi/ic_notification_overlay.9.png    | Bin 749 -> 385 bytes
 .../drawable-mdpi/ic_notification_overlay.9.png    | Bin 507 -> 267 bytes
 .../drawable-xhdpi/ic_notification_overlay.9.png   | Bin 1006 -> 519 bytes
 .../drawable-xxhdpi/ic_notification_overlay.9.png  | Bin 1823 -> 775 bytes
 packages/SystemUI/res/values/cm_strings.xml        |   5 +
 packages/SystemUI/res/values/colors.xml            |   2 +-
 .../systemui/statusbar/StatusBarIconView.java      | 132 +++++++++++++++++++--
 7 files changed, 125 insertions(+), 14 deletions(-)

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_notification_overlay.9.png b/packages/SystemUI/res/drawable-hdpi/ic_notification_overlay.9.png
index a93916f9935748a579dc77bab0fcea71e0212135..5bde6efc3cd9790bcd57bde80854813cd6b7a20a 100644
GIT binary patch
literal 385
zcmV-{0e=38P)<h;3K|Lk000e1NJLTq000{R000{Z1^@s6jnwp20003<Nkl<Zc-rNb
zzixvt5XRa20DYgVeFirE?1X_S3lh9Qw!Dc~w#b!QsaasI)QvI*sdD_2Zm3FIutJ@o
zpJZ9!yYJ(CcQ!%b4io$Z!Z5sxqG*#O$=1$?IF6MaM`oVo{RX?Mge=j69eYcx=LUAz
zJB!#ay|)Az5u|DQSl9JQDfQa6?R($%=W!fAn0e+s>)1)e8U8LpJHECkisz<j-iBc~
zn_s{>cGyd#yG4Q$kuJ;frR%!EH~@S6L@=Ap5nGYx`ID>AXF>eo`7wu76G>+8*%EUF
z@P`M!Z>yB@CH$(YPIEb$1OD*92k)dm=@%BMF0%sQk(Ss_#H3+0<-CR%JQCSqA|@w;
zrhnEDgGZ`TeHAm(keY^FLku1fJKi)hzd7?=jsE(~>j~oZZ1jHWd%w@T-qhazL2mMQ
f^)Fx+j77Kr*OadiP9=s<00000NkvXXu0mjftH`&8

literal 749
zcmV<J0uud+P)<h;3K|Lk000e1NJLTq0012T0012b1^@s6R+DEB00004b3#c}2nYxW
zd<bNS00009a7bBm000Y#000Y#0XNCZtpET5k4Z#9R7i=nmc46KK@h-y`|gY%ASeb@
z0wQ+C1Z^yB0)l^mrb#7;*ocj`YGH3;VIdYO2$DtuX)HyXfH93#2wM075}T+fx%bv$
zXWpCJ?A>wqo&(3;?%SQ;&g|~Y;Js%A8EFxK_a0{lKA+vMe=}(dX%7KsfJxvmup8I}
zJ_7H64WJ`)Te8jrOss6}0GH4RsFutCSAlZ^OUYkg4Ojvm17D1eB-kZ@1#l2}2waQ+
zr3Gfb_0|vIHn7kSoS6j*JOR8GU`}wGH*;F%=j5BtI{?fBPk=G`78^#}SX>a!?j>+a
zl(ZQvPBwr*I=~#^+%J*1bXnAY089-5Ol_bIY!f_nC&kf@2hIbt1Xqm$w4&>80;dUH
zEWvgMS89T+ID)tK5N<z!lXLY79Va}Ccq4U0^;`h<5j^PZhiR&J*cC8pi0U~`xR~Xb
zLZ_rHXioG+0GyOIv(Tf`jvP~ah(eD@a40SHz~27^RefVNIA|FAZu(7%>f01cy&c?;
zwy8@LLqF+rv4g9GY@xBV3DLOw8+b2cg@vvQxZF(xqL=6`A>EY*DKrO`8;0spy^vOu
zLf6H41bm~){B<N3-K)S;9n)u{&=&9&xF`KOP*3#~ZvlTqf9b)v7FqzFQKhG0U7d?A
z2iyQ&2_sKc4rPW1E)&jS7gbV@%aqu%Tz)Olc^$ZqIjT4~*u_pPoCWSu<yH+Mg=}J5
zzUdk*Up^4B%DnV*Rc<X!RfEm|rh#js=osmU^$U0dECSDgpH%hM4qz9w4;Vsho+PBG
zxb9seyhB}=^|CMtjlfX3HMfHkD_ikA2*=Q|b9%|ZSS!laa$DzWP20DcPeQ%-IM<gw
f%(EG2g!i6*AIisFy33Mx00000NkvXXu0mjf8^=6g

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_notification_overlay.9.png b/packages/SystemUI/res/drawable-mdpi/ic_notification_overlay.9.png
index 7ae60792c199c1043902a22588b3f08b4a1d8e54..c8c81025a30ea53bf9d00fef227367009f4a16c6 100644
GIT binary patch
literal 267
zcmV+m0rdWfP)<h;3K|Lk000e1NJLTq000sI000sQ1^@s6R?d!B0002eNkl<Zc-pm7
zK?=hl5X=|)nSP^>NIduvlS>{EUyxTA0-kg0J>-&GQ3zNEHjuWWp_qY1+#QE;SBoMI
zSNsFc`K_v|2V+e5=zWZ|3gl5wij-w}_Xk=ZIub2-DUlB3rfDXn)H2WW%UZi(#U6PQ
z>w;piyE~CmKG$`%E&$|F-<|zjlX{}-x}H4QxCl@O4}6^a7zj0155usy69A7~iEklH
zMWYvIguo-A{wU;V#M&6Moe=_$gvLu8<?B(lsbzad*<N<mzn1m)UjY}1Al|jaNTv6O
RsdoSX002ovPDHLkV1n%lZ}k8G

literal 507
zcmV<X0R;YuP)<h;3K|Lk000e1NJLTq000yK000yS1^@s6jfou%00004b3#c}2nYxW
zd<bNS00009a7bBm000Y#000Y#0XNCZtpET4ok>JNR5*>D)Uj$+K@i6A-`;2<imev6
zu~1tLLEk{cQjw6yu&}XIuv1Xqzz48VK`g9O+|ELL0may;T##sTvleIeWbbkehYTEc
znRDhp-^`g^IcFnm+($V}@a5Xs;+sTp##P+H6`aO*Y~w9<nr}^Kb65gSaDWSVj5|0r
zAY=zm@dAH>(L)Qcz^>yB&PDK|fu%?c?<47Nr0Hy)RWFOO*8$s$tSik^%KVF)cv&))
zwiO^e!uf!mEbSPugjMY0E;g&=J#YhCu|M%2P-`Xjeyj`R;=B>67Dp%>QVQ$1+-6xH
z32A`~T}2mbV8)qa0Bc*TfeGJ^2`Ux-XdT<Jj_n^^WeLCVxdpzne4NJEL98Ei6;5j4
zS3HUR-bmO4yLednQ$5(vbjN8mpo;;ux$-AGz(<GoK(8?ACjT~G>1J}p;b`nfKng$H
z3lTl629}Jwx}&s(S%6k_vo^sz5^msm3oFX%`!K~*)LhaH?HYdKlkVpgF+FVQK5U>u
xQQyPqY~EhNr4>ssNI7RI4UXSY<1-wPvwxE2cU??c=A8fl002ovPDHLkV1nS>-0c7W

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_notification_overlay.9.png b/packages/SystemUI/res/drawable-xhdpi/ic_notification_overlay.9.png
index aae807b72ff892027346dedb7e0cad66e3bd8eae..77eeda1f3dc2c927e48209b1144890548cb66e54 100644
GIT binary patch
literal 519
zcmV+i0{H!jP)<h;3K|Lk000e1NJLTq001Na001Ni1^@s6;Q*MJ0005bNkl<Zc-rll
zJ8D8f6ozfHoiwf@jdh9(J`pWkfR%!s+py6rK}4<0Xc63iSR~g77GA^$W-?zGJKy(_
z6UYz4#p|5^{2u1~Gh-~~A3FA1$Ye5)>2%sjrBXHXY?#qDV_=^R``%$*Xd+6b(nB(t
zd@_mZCgH1js!PMps}o0jkQIsBU#)Vv+^}3Ozcri9iBjrwI-PpU<#M~*?e;wR%zM6P
z9`miZ8a%$m7@~wBd@*FITCI+Iz23)Su~_RXz&z#?M?5_6`4RJMNV@rae$;BUCbQXW
zrSAZ7#KQw0y!Te7TPzkwolfU{v)Sym4-gLzd{$KArZq!(3x&dum@fkz0N{ZSUb_t9
zS9KE$Fq_Q|S(q$V9U$O?7k=_w>^|Gts#2+pUDsXd5CAXy<RRZ#LHGt8(eL+N9U|bj
zomW5Wz?d2SF`v)ZVG4quJmfp#==x9{hceQlIs%Z#y1H{z(7}yy+9(8(=iuU}D#S*q
zu>U9ok;hi3aY_)owemb~8-*b9SV8S$g0wwCsGz;)oF`d9gFjIrd22{wm&x)WaZW96
zFB7@ji#rdAJ28qpQ;WQHh`g7Hyt#_J+l&17;~#$=`i5~Az5(L8q*L$XAEN*O002ov
JPDHLkV1f?v^ZEb)

literal 1006
zcmV<K0}=d*P)<h;3K|Lk000e1NJLTq001Tc001Tk1^@s6s6FYf00004b3#c}2nYxW
zd<bNS00009a7bBm000Y#000Y#0XNCZtpET6kV!;AR9J=0m`iIEK@fnynOR@afT)PN
ziiiq6z>7pA2Nk?|2nZ^^4xR)NMFnr-MezrS2M>BujEWZzLC~Wj$_hR%3ZfE7#3!f$
zpUJj|u9~gs>?V_BXSHCN*`DsMuWPz%stV^EO%Nx)rigQnC{M@!j`jqo2FjNJWnd;S
z6&M7*0Uv;uz%SD`0jlN7fa~vQr(78rRcBqW{*HG0Hvxv^ei^V6*dX@{fGMW06R=mn
zGoTx|CyR<qAAk`7hk+R=JJBlOAg~W;3x-sU;-rp_`@k8XNB*Y^%?)OtVo?Tg2sjDM
z2|!{QZ|87i_nQU13>*jE1@qShjO#!}GH3>H2{<cIL!vMSN(L-kXe>Yqr3={$+yT~@
zg*B8YfQm(V8*l~a5+GGLUU4!{32(73pn|bnXtjFEBH+9X{)1onM4)uelEBTwABx3{
zU^&~UF5xiV?1R9h2?B+Z$h=E|i_~6s6nKIZEXJ>9HE@C)dtd@mlKD3S2O8<p20cYb
zfZ5bGc~PP#_ZZ$uTR%4pY&ozeXfI0Cmn{Ldihlb#odwtdOrs8cL87{M6ZkdzFab8n
zeWpW!qKjXLKMb}l1zUvw_Sv?gCBnbL1Xv&HwqWzkfL4hfx)tJJhgobEK1yiS{!-Cx
zvrw)XFh?zPY1RG;WqR147SnjEmDaNIL#}D8rV+vyJX}l@L*yKyhWHddP>a0>K2tj>
ztrFG$TAZsJ_5gSz_y59Tk3!uF_8oZKLLdv#3p|ng^zd0{dR4CV;`Sm$58QS9=Fd3x
z7}DtRF7QCwi*_68@xKZf1RkLTY2G*loC0o|jzzhTs(^Ll_g7M`3=Em)QEWQKz-{0f
zwJ^8{QER;gPMfxj*m%t0!``F7bAcOdGL&Xazk&TgKXpPL3#M=h@DbQ0gPLhMjfxX|
ze%aFqDg`sClY0NB_{g%CT9Pu}1EFsslItOSuG$bP1q<MGV^)BTz%A*g2}@o;%_TK;
z>jSm{=LkN1BWB`(sO5TrE%+qm1=$?a3FM&pX|@ivTE-9H0?>&+@tMj|qx!{Y)gEi^
zxxjXO!m<{a++b0<us*!gzCrDiGiuEu7g)J6p!c>E72~s;PGBWIvz~!JX&>?5-G}%x
z)K4=eQ`{S^MwYj5r;|sF?Ubft@)YaF45kuPglx6P*3vS+u>$?~5;^CHqTGfXZ>%<^
cH{+b+F9p64aBu2S2mk;807*qoM6N<$g5_zwH~;_u

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_notification_overlay.9.png b/packages/SystemUI/res/drawable-xxhdpi/ic_notification_overlay.9.png
index fa7de0ed0d87fe33eeee43b57b72fbace37f16ef..ea0977455e664bddc8ce1afa982e04eaa5c344e0 100644
GIT binary patch
literal 775
zcmV+i1Ni)jP)<h;3K|Lk000e1NJLTq001@s001@!1^@s6j74hQ0008cNkl<Zc-rln
z&uSV`6vp!ueSw0jK0zKLi|o^le{dmK)Qv9@#3v9}x-f>UgJvaJjBO|iT^MK<8Y-nl
zC5X}S_WsJDbdw?4ahy5zgM)+4J?HzzJLjBxXO50`4<i;$B$LUQwG(SOYb9&-L?Ur*
zKW{NPuFG#ZIX4zcF{xDQttEG6t!#;R?5DGd$(S-e@U?eA@p$~5CH29Qxw7VDGMSIX
zV)1jOQn_!nT95sH|L15ldYVqB&lWDmG2ihU=Ws4#7>f^l;S=A13reTcZ*1_my~3A}
zDHIBK)oS&=+wFdzOePDnAsEA0eBcY8_$CIig1U!}t(`N4^7;H-tycRw7z`$B3-gb_
z2fpx$Z<(sZI^L-$dj(HzkPCYiyQNa;ORv}av0N@)<1_GyZ(<OOn8e<dsP{I&4fjH`
z*?bs}$8)n|5QA96BsLs;7e(gEX0xB#?e^n*K3|!DKrCVs8xFpSlj(PZ<4&jZ&2`<i
z2^hpAHXP)iJM|+`Trd?#&HE7bw>UV+w7l3lp^#?DNZh=QM&n_zSh!}-fCF44p`343
z3ZzasWTqez#U=>_PSUZ&H|{7Xkkk^=t_d07Bz5j`qYg#dB!@z|i#p{;or4=3;ri-^
zmVS-ahAzN_6mXOF>*`gFvvk-FecNiaT8C8_+~6pE<(bDC@Q<)ES%;?7gdA{`3|aOR
z#)6OP&N5<~E<I?#5w5bHi+KrSHT!!Snuq|dvI;oy62?;9p~6Q+7+ghI&Py2k5Kb6t
zmsd>_VI?nNY_d4R;qWOc!r&^x>MshD9VBNqn>|NG7+j^jx_(KRku5TZO_!($gRA^w
zxBs0mwNp`V^3a^_)fQ;AEtSqDSnaY!^+Hqa)_~g09M#)zYBx+(Z*i-AD53f>lIjP4
zsvp&=ez>msbqLiju&93JNc~G<>R;<S;D7@Hf$_<F#V@A!aHrQ&!XN+u002ovPDHLk
FV1ig*ahw1E

literal 1823
zcmbVNc~BE~6i!71K@^euC~J@kElGBBkpv<pY>+6SfFLNKEXhJbNH!*m1WHFu1?tfe
z3suAe<d{-KO97R^i_oE7Em|)|Jc>g>S_LzrfKX{S9JYTr{?VP?{T=(h?|tw6-kaSS
z6}igJ#@&WQBH4+<;TU4%m>=tT#Jjd2=tE*~!$k@BS}YCEMzknNAj48oK&(R2(HInw
z<!ru!29rn@az$(co*;?fNih`_G22k}Dh+`qk%B|?8bqo@aUc~<SE%{q=VvdH0fmfD
zj%P_gi6#`4E5dWN=-S-KSZS_O%9W8rRsg|z9zmc&aRkt-GSxbso==|Q<q>o9HjNBS
znczx3d0JG0Bnk+{v?#!$GAL3If&ey~3Ncx1HWUERL5NNRiJMJ<m^>DnM-K#ME;8Xw
zD@)_Wz+p4Kh!vkK$8imhM$695re-s!m^PgTak*SG2c1qKEGW7hHIC>hYMsw41B~jV
zT7?EzU~0h3h@@g!IG;=?oen{zkx1SWt93JpB2q@vBN`e+1!*dkIj$*d9Ug=JE90Hk
zy4V~IN{c~tSe8~woJX3^ESSjM`yH7L2{pV=wF=@;kW3hpW~op$E{6GJ;tN%#knun^
zhsa_e6AYviQwZWhAXf;oSu8drWOEtJS&nyMMX*2sF-0&4GuaR%VhC7)95{?2<g$r@
z9>$u*iq$$CQA^QTzY4<d3^w$=SYD_WMQ}_Ti(#3w6%ZxIa7-u1G(hNDHsB{gqzbip
z!{2;B)A7QnR<Q+@g=sMrFqL7R;vEWLt^g8nA($?jj+_H>7%)f|az$_`Q^+OMPh(~O
zCu=l949#2~|0$Q*Eusd^)3?P>EZ(*cswR3yOEd?UQ*)Z=If)n+#Ok}Bm0e%sEO5P)
z-empsbAE~MJ@Msc>KpLH@guyr!b(5e7e&_d-LkGkiY$|DmQ^mCzdzT1*W|WG$_?(x
zt0|`H8?-r_D4=X&#rf;)BQJ(7G@WHkbgtYqHdfX*G^|KVPfx$JIXQk{PcP@?<B*+I
z6Ne}3t7$qFtMz*C*xwaT^Il1ZYb>48eB@RWD;e@q)i3I{CmSXwL?)-7w~0+Qzqh%Z
zpp=47jS9`2X2&z@qSt+qRWaYQr#yPAm(`Cc_IdH$Sp&IW-b2~jcUN5N5{ieH1kVlp
zZu#+n%1=^HkNbjlRKJp{`VXG8IhIS~Zd!ynWzLoMIA4}~meBJS^14Qv=PueFm~tST
z7G(6})F+w(^fnpr__4cr?JW7?XY)n{-_$16wG^oD7_0;r!R2p~iXDuql-hPme4TG$
z%W2ra4BjjM(7!mT*r)MK5nvonDFg#!6R`&eBly3`8ST#kOeGlg&xrm;OYO$^LEFzF
ze0EtX1>ZI-PjBh3Xz4I`Rdkb$87J507X4vA(pOy%@au<8M>XVI{nTifxE5Sr=3W@T
z_^Qp2(@5IhJt<8c1_|Ae7~q__z_I$!<NmIk@e7@)#?}Vsm+O!wXWO*6fc2$^ecg=b
zIt;Ht!ShF>_fn1C+YK*UnD@ue*lul1FjYmk9BEF_tPa!MPBm_JGaeor<sYRSE8BF{
z`X<0Yj`i%Y&WT=|=be{%tVdH~wb9`(bf4!Po~y{@;o1<c*{0m@T%F{S@5{Z_)OM<1
z#exG4)wUybmWHnOc`jvb_JZQUpq>*(ZR~y3!L6>##ymVNh6^I=_v*g-!Sej;hyD$j
zMV@zrYYyFNycji<W3n88!W#;e4s~<=M`7gnWo>@q$=%Aub(a2%+V<Hb7vn*kt1Rne
zL&=lMhRM?Yf$>PkyUOwo{>s}dH+Q|<dqa7@zn9m9jojjSv8P{W<r0eNfqnj|@KzVf
z$BtDelCq8Kj@AVD@>9M(pRqCH^%fzPGteiwJ?cRXd2yrPu&S?rKjQzYAU?k$q?vTT
zv&(L9hn&=Wgx>1`o*OLj);ld-?nu$sEKT^ewp%5Si+LFGX44I(;8FDVzIBtman`LL
djn;?ESwNbQT_UY&?`<*vvc#fD_@pq!@DCFd!(ada

diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index b76d634..93a6ef3 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -27,6 +27,11 @@
     <!-- Content description for Accessibility on locked tasks in recents -->
     <string name="accessibility_unlock_task">Allow <xliff:g id="task">%1$s</xliff:g> to be dismissed</string>
 
+    <!-- Text to use when the number in a notification info is too large
+         (greater than status_bar_notification_info_maxnum, defined in
+         values/config.xml) and must be truncated. [CHAR LIMIT=4] -->
+    <string name="status_bar_notification_info_overflow" translatable="false">\u221E</string>
+
     <!-- ADB over network QS tile -->
     <string name="quick_settings_network_adb_label">ADB over network</string>
 
diff --git a/packages/SystemUI/res/values/colors.xml b/packages/SystemUI/res/values/colors.xml
index f244d88..346396a 100644
--- a/packages/SystemUI/res/values/colors.xml
+++ b/packages/SystemUI/res/values/colors.xml
@@ -17,7 +17,7 @@
  */
 -->
 <resources>
-    <drawable name="notification_number_text_color">#ffffffff</drawable>
+    <drawable name="notification_number_text_color">#ff000000</drawable>
     <drawable name="ticker_background_color">#ff1d1d1d</drawable>
     <drawable name="system_bar_background">@color/system_bar_background_opaque</drawable>
     <color name="system_bar_background_opaque">#ff000000</color>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
index 907dec1..13fde10 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
@@ -25,6 +25,7 @@ import android.content.Context;
 import android.content.pm.ApplicationInfo;
 import android.content.res.Configuration;
 import android.content.res.Resources;
+import android.database.ContentObserver;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.ColorMatrix;
@@ -33,6 +34,8 @@ import android.graphics.Paint;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.Icon;
+import android.graphics.Typeface;
+import android.os.Handler;
 import android.os.Parcelable;
 import android.os.UserHandle;
 import android.service.notification.StatusBarNotification;
@@ -52,11 +55,15 @@ import com.android.internal.statusbar.StatusBarIcon;
 import com.android.internal.util.NotificationColorUtil;
 import com.android.systemui.Interpolators;
 import com.android.systemui.R;
+import com.android.systemui.settings.CurrentUserTracker;
 import com.android.systemui.statusbar.notification.NotificationIconDozeHelper;
 import com.android.systemui.statusbar.notification.NotificationUtils;
 
 import java.text.NumberFormat;
 import java.util.Arrays;
+import java.util.ArrayList;
+
+import lineageos.providers.LineageSettings;
 
 public class StatusBarIconView extends AnimatedImageView {
     public static final int NO_COLOR = 0;
@@ -107,7 +114,7 @@ public class StatusBarIconView extends AnimatedImageView {
     private StatusBarIcon mIcon;
     @ViewDebug.ExportedProperty private String mSlot;
     private Drawable mNumberBackground;
-    private Paint mNumberPain;
+    private Paint mNumberPaint;
     private int mNumberX;
     private int mNumberY;
     private String mNumberText;
@@ -144,6 +151,8 @@ public class StatusBarIconView extends AnimatedImageView {
     private ColorMatrixColorFilter mMatrixColorFilter;
     private boolean mIsInShelf;
     private Runnable mLayoutRunnable;
+    private boolean mShowNotificationCount;
+    private GlobalSettingsObserver mObserver;
 
     public StatusBarIconView(Context context, String slot, StatusBarNotification sbn) {
         this(context, slot, sbn, false);
@@ -155,14 +164,11 @@ public class StatusBarIconView extends AnimatedImageView {
         mDozer = new NotificationIconDozeHelper(context);
         mBlocked = blocked;
         mSlot = slot;
-        mNumberPain = new Paint();
-        mNumberPain.setTextAlign(Paint.Align.CENTER);
-        mNumberPain.setColor(context.getColor(R.drawable.notification_number_text_color));
-        mNumberPain.setAntiAlias(true);
         setNotification(sbn);
         maybeUpdateIconScaleDimens();
         setScaleType(ScaleType.CENTER);
         mDensity = context.getResources().getDisplayMetrics().densityDpi;
+        mObserver = GlobalSettingsObserver.getInstance(context);
         if (mNotification != null) {
             setDecorColor(getContext().getColor(
                     com.android.internal.R.color.notification_icon_default_color));
@@ -227,6 +233,8 @@ public class StatusBarIconView extends AnimatedImageView {
 
     public void setNotification(StatusBarNotification notification) {
         mNotification = notification;
+        mShowNotificationCount = LineageSettings.System.getIntForUser(mContext.getContentResolver(),
+                LineageSettings.System.STATUS_BAR_NOTIF_COUNT, 1, UserHandle.USER_CURRENT) == 1;
         if (notification != null) {
             setContentDescription(notification.getNotification());
         }
@@ -270,6 +278,10 @@ public class StatusBarIconView extends AnimatedImageView {
      * Returns whether the set succeeded.
      */
     public boolean set(StatusBarIcon icon) {
+        return set(icon, false);
+    }
+
+    private boolean set(StatusBarIcon icon, boolean force) {
         final boolean iconEquals = mIcon != null && equalIcons(mIcon.icon, icon.icon);
         final boolean levelEquals = iconEquals
                 && mIcon.iconLevel == icon.iconLevel;
@@ -279,19 +291,27 @@ public class StatusBarIconView extends AnimatedImageView {
                 && mIcon.number == icon.number;
         mIcon = icon.clone();
         setContentDescription(icon.contentDescription);
-        if (!iconEquals) {
+        if (!iconEquals || force) {
             if (!updateDrawable(false /* no clear */)) return false;
             // we have to clear the grayscale tag since it may have changed
             setTag(R.id.icon_is_grayscale, null);
         }
-        if (!levelEquals) {
+        if (!levelEquals || force) {
             setImageLevel(icon.iconLevel);
         }
 
-        if (!numberEquals) {
-            if (icon.number > 0 && getContext().getResources().getBoolean(
-                        R.bool.config_statusBarShowNumber)) {
+        if (!numberEquals || force) {
+            if (icon.number > 1 && mShowNotificationCount) {
                 if (mNumberBackground == null) {
+                    final Resources res = mContext.getResources();
+                    final float densityMultiplier = res.getDisplayMetrics().density;
+                    final float scaledPx = 8 * densityMultiplier;
+                    mNumberPaint = new Paint();
+                    mNumberPaint.setTextAlign(Paint.Align.CENTER);
+                    mNumberPaint.setColor(res.getColor(R.drawable.notification_number_text_color));
+                    mNumberPaint.setAntiAlias(true);
+                    mNumberPaint.setTypeface(Typeface.DEFAULT_BOLD);
+                    mNumberPaint.setTextSize(scaledPx);
                     mNumberBackground = getContext().getResources().getDrawable(
                             R.drawable.ic_notification_overlay);
                 }
@@ -299,10 +319,11 @@ public class StatusBarIconView extends AnimatedImageView {
             } else {
                 mNumberBackground = null;
                 mNumberText = null;
+                mNumberPaint = null;
             }
             invalidate();
         }
-        if (!visibilityEquals) {
+        if (!visibilityEquals || force) {
             setVisibility(icon.visible && !mBlocked ? VISIBLE : GONE);
         }
         return true;
@@ -408,7 +429,7 @@ public class StatusBarIconView extends AnimatedImageView {
 
         if (mNumberBackground != null) {
             mNumberBackground.draw(canvas);
-            canvas.drawText(mNumberText, mNumberX, mNumberY, mNumberPain);
+            canvas.drawText(mNumberText, mNumberX, mNumberY, mNumberPaint);
         }
         if (mDotAppearAmount != 0.0f) {
             float radius;
@@ -427,6 +448,24 @@ public class StatusBarIconView extends AnimatedImageView {
     }
 
     @Override
+    public void onAttachedToWindow() {
+        super.onAttachedToWindow();
+
+        if (mObserver != null) {
+            mObserver.attach(this);
+        }
+    }
+
+    @Override
+    public void onDetachedFromWindow() {
+        super.onDetachedFromWindow();
+
+        if (mObserver != null) {
+            mObserver.detach(this);
+        }
+    }
+
+    @Override
     protected void debug(int depth) {
         super.debug(depth);
         Log.d("View", debugIndent(depth) + "slot=" + mSlot);
@@ -449,7 +488,7 @@ public class StatusBarIconView extends AnimatedImageView {
         final int w = getWidth();
         final int h = getHeight();
         final Rect r = new Rect();
-        mNumberPain.getTextBounds(str, 0, str.length(), r);
+        mNumberPaint.getTextBounds(str, 0, str.length(), r);
         final int tw = r.right - r.left;
         final int th = r.bottom - r.top;
         mNumberBackground.getPadding(r);
@@ -840,4 +879,71 @@ public class StatusBarIconView extends AnimatedImageView {
     public interface OnVisibilityChangedListener {
         void onVisibilityChanged(int newVisibility);
     }
+
+    static class GlobalSettingsObserver extends ContentObserver {
+        private static GlobalSettingsObserver sInstance;
+        private ArrayList<StatusBarIconView> mIconViews = new ArrayList<StatusBarIconView>();
+        private Context mContext;
+        private CurrentUserTracker mUserTracker;
+
+        GlobalSettingsObserver(Handler handler, Context context) {
+            super(handler);
+            mContext = context.getApplicationContext();
+        }
+
+        static GlobalSettingsObserver getInstance(Context context) {
+            if (sInstance == null) {
+                sInstance = new GlobalSettingsObserver(new Handler(), context);
+            }
+            return sInstance;
+        }
+
+        void attach(StatusBarIconView sbiv) {
+            if (mIconViews.isEmpty()) {
+                observe();
+            }
+            mIconViews.add(sbiv);
+        }
+
+        void detach(StatusBarIconView sbiv) {
+            mIconViews.remove(sbiv);
+            if (mIconViews.isEmpty()) {
+                unobserve();
+            }
+        }
+
+        void observe() {
+            mContext.getContentResolver().registerContentObserver(
+                    LineageSettings.System.getUriFor(LineageSettings.System.STATUS_BAR_NOTIF_COUNT),
+                    false, this);
+
+            mUserTracker = new CurrentUserTracker(mContext) {
+                @Override
+                public void onUserSwitched(int newUserId) {
+                    update();
+                }
+            };
+            mUserTracker.startTracking();
+        }
+
+        void unobserve() {
+            mUserTracker.stopTracking();
+            mContext.getContentResolver().unregisterContentObserver(this);
+        }
+
+        @Override
+        public void onChange(boolean selfChange) {
+            super.onChange(selfChange);
+            update();
+        }
+
+        private void update() {
+            boolean showIconCount = LineageSettings.System.getIntForUser(mContext.getContentResolver(),
+                    LineageSettings.System.STATUS_BAR_NOTIF_COUNT, 1, UserHandle.USER_CURRENT) == 1;
+            for (StatusBarIconView sbiv : mIconViews) {
+                sbiv.mShowNotificationCount = showIconCount;
+                sbiv.set(sbiv.mIcon, true);
+            }
+        }
+    }
 }
-- 
2.7.4

