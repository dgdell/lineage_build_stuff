From 11added84ab49f82833f167fd95b91eb560e5d89 Mon Sep 17 00:00:00 2001
From: T H <socialentry@gmail.com>
Date: Tue, 24 Jul 2018 12:40:59 -0400
Subject: [PATCH 29/35] SystemSensorManager: Fix accel/rotation issue

Add config to cap the accelerometer report latency.

On certain devices (kltedv tested) calling registerListener with
maxReportLatencyUs greater than samplingPeriodUs causes the
accelerometer to stop reporting until the listener is unregistered.

Opengapps has a background service that causes this problem,
breaking rotation intermittently.

Change-Id: I0d8e5f906e39f11f98695de79d71ded2177de561
---
 core/java/android/hardware/SystemSensorManager.java | 12 ++++++++++++
 core/res/res/values/lineage_config.xml              |  4 ++++
 core/res/res/values/lineage_symbols.xml             |  1 +
 3 files changed, 17 insertions(+)

diff --git a/core/java/android/hardware/SystemSensorManager.java b/core/java/android/hardware/SystemSensorManager.java
index 607788d3eff..6a2cc091505 100644
--- a/core/java/android/hardware/SystemSensorManager.java
+++ b/core/java/android/hardware/SystemSensorManager.java
@@ -99,6 +99,9 @@ public class SystemSensorManager extends SensorManager {
     private final Context mContext;
     private final long mNativeInstance;
 
+    // Config
+    private final boolean mCapAccelBatch;
+
     /** {@hide} */
     public SystemSensorManager(Context context, Looper mainLooper) {
         synchronized(sLock) {
@@ -113,6 +116,9 @@ public class SystemSensorManager extends SensorManager {
         mContext = context;
         mNativeInstance = nativeCreate(context.getOpPackageName());
 
+        mCapAccelBatch = context.getResources().getBoolean(
+            com.android.internal.R.bool.config_capAccelBatch);
+
         // initialize the sensor list
         for (int index = 0;;++index) {
             Sensor sensor = new Sensor();
@@ -162,6 +168,12 @@ public class SystemSensorManager extends SensorManager {
                 MAX_LISTENER_COUNT);
         }
 
+        if (mCapAccelBatch && (sensor.getType() == Sensor.TYPE_ACCELEROMETER) &&
+            (maxBatchReportLatencyUs > delayUs)) {
+            Log.i(TAG, "capping batch value for accelerometer");
+            maxBatchReportLatencyUs = delayUs;
+        }
+
         // Invariants to preserve:
         // - one Looper per SensorEventListener
         // - one Looper per SensorEventQueue
diff --git a/core/res/res/values/lineage_config.xml b/core/res/res/values/lineage_config.xml
index 9ad5fce5eb0..5bc4c0efb3d 100644
--- a/core/res/res/values/lineage_config.xml
+++ b/core/res/res/values/lineage_config.xml
@@ -34,6 +34,10 @@
          out of setting a batch size, which fixes rotation. -->
     <bool name="config_useDefaultBatchingForAccel">true</bool>
 
+    <!-- Cap accelerometer batch value, fixes rotation on
+         devices where accel stops reporting -->
+    <bool name="config_capAccelBatch">false</bool>
+
     <!-- Button backlight -->
     <integer name="config_buttonBrightnessSettingDefault">255</integer>
     <bool name="config_deviceHasVariableButtonBrightness">false</bool>
diff --git a/core/res/res/values/lineage_symbols.xml b/core/res/res/values/lineage_symbols.xml
index d01d7e14e5d..c522b0772ab 100644
--- a/core/res/res/values/lineage_symbols.xml
+++ b/core/res/res/values/lineage_symbols.xml
@@ -29,6 +29,7 @@
     <java-symbol type="bool" name="config_persistUsbDriveNotification" />
 
     <java-symbol type="bool" name="config_useDefaultBatchingForAccel" />
+    <java-symbol type="bool" name="config_capAccelBatch" />
 
     <!-- ADB notification -->
     <java-symbol type="string" name="adb_net_active_notification_title" />
-- 
2.17.1

