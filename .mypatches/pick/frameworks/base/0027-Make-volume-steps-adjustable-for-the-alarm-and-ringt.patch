From 491020d1c71428afb04a25e7ce308345b0566dce Mon Sep 17 00:00:00 2001
From: Vladimir Oltean <olteanv@gmail.com>
Date: Mon, 28 May 2018 16:34:10 +0300
Subject: [PATCH 27/38] Make volume steps adjustable for the alarm and ringtone
 streams

* This patch introduces the following new properties:
    - ro.config.alarm_vol_steps
    - ro.config.ring_vol_steps
  in addition to the already existing ones:
    - ro.config.vc_call_vol_steps
    - ro.config.media_vol_steps
* This allows a device that used one of 2 the existing properties to
  have a uniform level of control over all streams in the volume widget.

Change-Id: I087809bd49f36a32d59d4a90b11586eeb00e493b
Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
---
 .../android/server/audio/AudioService.java    | 41 ++++++++-----------
 1 file changed, 18 insertions(+), 23 deletions(-)

diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index f7b139ec0a0..70e83debfbe 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -687,29 +687,24 @@ public class AudioService extends IAudioService.Stub
         mHasVibrator = vibrator == null ? false : vibrator.hasVibrator();
 
         // Initialize volume
-        int maxCallVolume = SystemProperties.getInt("ro.config.vc_call_vol_steps", -1);
-        if (maxCallVolume != -1) {
-            MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL] = maxCallVolume;
-            AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL] =
-                    (maxCallVolume * 3) / 4;
-        }
-
-        int maxMusicVolume = SystemProperties.getInt("ro.config.media_vol_steps", -1);
-        if (maxMusicVolume != -1) {
-            MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] = maxMusicVolume;
-        }
-
-        int defaultMusicVolume = SystemProperties.getInt("ro.config.media_vol_default", -1);
-        if (defaultMusicVolume != -1 &&
-                defaultMusicVolume <= MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC]) {
-            AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] = defaultMusicVolume;
-        } else {
-            if (isPlatformTelevision()) {
-                AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] =
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] / 4;
-            } else {
-                AudioSystem.DEFAULT_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] =
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] / 3;
+        String volumeStepsProperties[] = {
+            "ro.config.vc_call_vol_steps",
+            "ro.config.media_vol_steps",
+            "ro.config.alarm_vol_steps",
+            "ro.config.ring_vol_steps",
+        };
+        int streams[] = {
+            AudioSystem.STREAM_VOICE_CALL,
+            AudioSystem.STREAM_MUSIC,
+            AudioSystem.STREAM_ALARM,
+            AudioSystem.STREAM_RING,
+        };
+        for (int i = 0; i < volumeStepsProperties.length; i++) {
+            int maxVolume = SystemProperties.getInt(volumeStepsProperties[i],
+                                                    MAX_STREAM_VOLUME[streams[i]]);
+            if (maxVolume != MAX_STREAM_VOLUME[streams[i]]) {
+                MAX_STREAM_VOLUME[streams[i]] = maxVolume;
+                AudioSystem.DEFAULT_STREAM_VOLUME[streams[i]] = (maxVolume * 3) / 4;
             }
         }
 
-- 
2.17.1

