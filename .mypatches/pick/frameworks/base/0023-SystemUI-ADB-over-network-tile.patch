From 028e1e99a7582e73d8e34fb01e4ec45dce574932 Mon Sep 17 00:00:00 2001
From: Danesh M <daneshm90@gmail.com>
Date: Fri, 23 Jan 2015 11:57:52 -0800
Subject: [PATCH 23/67] SystemUI: ADB over network tile

Author: Danesh M <daneshm90@gmail.com>
Date:   Fri Jan 23 11:57:52 2015 -0800

    SystemUI: Add adb over network tile

    Change-Id: Ib1fa0c87562ff3a077bf9c7283ce81fc4a8271db

Author: Joey <joey@lineageos.org>
Date:   Mon Jun 25 23:47:39 2018 +0200

    SystemUI: require auth for adb wireless

    Change-Id: I246a0310f0015862b750aa73ed2b546ef6658c8b
    Signed-off-by: Joey <joey@lineageos.org>

Change-Id: I30256bdec4379b870129070e1a9adc93ee7d4043
---
 .../res/drawable/ic_qs_network_adb_off.xml    |  31 ++++
 .../res/drawable/ic_qs_network_adb_on.xml     |  34 ++++
 packages/SystemUI/res/values/cm_strings.xml   |   3 +
 packages/SystemUI/res/values/config.xml       |   2 +-
 .../systemui/qs/tileimpl/QSFactoryImpl.java   |   3 +
 .../systemui/qs/tiles/AdbOverNetworkTile.java | 162 ++++++++++++++++++
 6 files changed, 234 insertions(+), 1 deletion(-)
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java

diff --git a/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml b/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
new file mode 100644
index 00000000000..37f9aab55ee
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (C) 2015 The CyanogenMod Open Source Project
+    Copyright (C) 2017 The LineageOS Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="64dp"
+        android:height="64dp"
+        android:viewportWidth="48"
+        android:viewportHeight="48">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M41,37.9L34.1,31l0,0l-6.5-6.5l0,0l-9.8-9.8l0,0L13.1,10L6.5,3.4L4,6l4.1,4.1
+c-4.3,2-6.9,4.1-7.4,4.4l23.3,29l0,0l0,0l7.8-9.7l6.6,6.6L41,37.9Z
+M14,24.5v-2c0-1.9,0.5-3.6,1.5-5.1l7.1,7.1H14z M21.2,13
+l-5.5-5.5c2.5-0.6,5.3-1,8.3-1c13.4,0,22.4,7.3,23.3,8L36.3,28.1l-3.6-3.6H34v-2c0-2.4-0.9-4.6-2.3-6.3l2.3-2.3l-1.4-1.4l-2.3,2.3
+c-1.7-1.4-3.9-2.3-6.3-2.3C23,12.5,22.1,12.7,21.2,13z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml b/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
new file mode 100644
index 00000000000..a8240a06a67
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (C) 2015 The CyanogenMod Open Source Project
+    Copyright (C) 2017 The LineageOS Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="64dp"
+        android:height="64dp"
+        android:viewportWidth="48"
+        android:viewportHeight="48">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M24,43.5l23.3-29c-0.9-0.7-9.9-8-23.3-8c-13.4,0-22.4,7.3-23.3,8L24,43.5L24,43.5
+C24,43.5,24,43.5,24,43.5Z
+M31.7,16.2c1.4,1.7,2.3,3.9,2.3,6.3v2H14v-2c0-2.4,0.9-4.6,2.3-6.3L14,13.9l1.4-1.4l2.3,2.3
+c1.7-1.4,3.9-2.3,6.3-2.3c2.4,0,4.6,0.9,6.3,2.3l2.3-2.3l1.4,1.4L31.7,16.2z
+M22,20.5c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2
+c0-1.1,0.9-2,2-2C21.1,18.5,22,19.4,22,20.5z
+M30,20.5c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2c0-1.1,0.9-2,2-2C29.1,18.5,30,19.4,30,20.5
+z" />
+</vector>
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index b08ce9a0fc8..1cdec3e85b4 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -40,6 +40,9 @@
     <!-- Label for current user in power menu options dialog -->
     <string name="global_action_current_user">Current</string>
 
+    <!-- ADB over network QS tile -->
+    <string name="quick_settings_network_adb_label">ADB over network</string>
+
     <!-- Caffeine QS tile -->
     <string name="quick_settings_caffeine_label">Caffeine</string>
     <string name="accessibility_quick_settings_caffeine_off">Caffeine off.</string>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index 564f775bad9..b7ffa6564f5 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -123,7 +123,7 @@
 
     <!-- Tiles native to System UI. Order should match "quick_settings_tiles_default" -->
     <string name="quick_settings_tiles_stock" translatable="false">
-        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,caffeine,heads_up,sync,volume_panel
+        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,adb_network,caffeine,heads_up,sync,volume_panel
     </string>
 
     <!-- The tiles to display in QuickSettings -->
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
index 22e011ac9f2..b45f9eef594 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
@@ -24,6 +24,7 @@ import com.android.systemui.R;
 import com.android.systemui.plugins.qs.*;
 import com.android.systemui.plugins.qs.QSTileView;
 import com.android.systemui.qs.external.CustomTile;
+import com.android.systemui.qs.tiles.AdbOverNetworkTile;
 import com.android.systemui.qs.tiles.AirplaneModeTile;
 import com.android.systemui.qs.tiles.BatterySaverTile;
 import com.android.systemui.qs.tiles.BluetoothTile;
@@ -104,6 +105,8 @@ public class QSFactoryImpl implements QSFactory {
             case "nfc":
                 return new NfcTile(mHost);
             // Custom tiles.
+            case "adb_network":
+                return new AdbOverNetworkTile(mHost);
             case "caffeine":
                 return new CaffeineTile(mHost);
             case "heads_up":
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java
new file mode 100644
index 00000000000..af39a30cf47
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java
@@ -0,0 +1,162 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2017 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.Context;
+import android.content.Intent;
+import android.database.ContentObserver;
+import android.net.NetworkUtils;
+import android.net.Uri;
+import android.net.wifi.WifiInfo;
+import android.net.wifi.WifiManager;
+import android.os.UserHandle;
+import android.provider.Settings;
+import android.service.quicksettings.Tile;
+
+import com.android.systemui.Dependency;
+import com.android.systemui.plugins.ActivityStarter;
+import com.android.systemui.plugins.qs.QSTile.BooleanState;
+import com.android.systemui.qs.QSHost;
+import com.android.systemui.qs.tileimpl.QSTileImpl;
+import com.android.systemui.R;
+import com.android.systemui.statusbar.policy.KeyguardMonitor;
+
+import java.net.InetAddress;
+
+import lineageos.providers.LineageSettings;
+import org.lineageos.internal.logging.LineageMetricsLogger;
+
+/** Quick settings tile: AdbOverNetwork **/
+public class AdbOverNetworkTile extends QSTileImpl<BooleanState> {
+
+    private boolean mListening;
+    private final KeyguardMonitor mKeyguardMonitor;
+    private final KeyguardMonitorCallback mCallback = new KeyguardMonitorCallback();
+
+    private static final Intent SETTINGS_DEVELOPMENT =
+            new Intent(Settings.ACTION_APPLICATION_DEVELOPMENT_SETTINGS);
+
+    public AdbOverNetworkTile(QSHost host) {
+        super(host);
+        mKeyguardMonitor = Dependency.get(KeyguardMonitor.class);
+    }
+
+    @Override
+    public BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    protected void handleClick() {
+        if (mKeyguardMonitor.isSecure() && !mKeyguardMonitor.canSkipBouncer()) {
+            Dependency.get(ActivityStarter.class)
+                    .postQSRunnableDismissingKeyguard(this::toggleAction);
+        } else {
+            toggleAction();
+        }
+    }
+
+    @Override
+    public Intent getLongClickIntent() {
+        return SETTINGS_DEVELOPMENT;
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        state.value = isAdbNetworkEnabled();
+        if (state.value) {
+            WifiManager wifiManager = (WifiManager) mContext.getSystemService(Context.WIFI_SERVICE);
+            WifiInfo wifiInfo = wifiManager.getConnectionInfo();
+
+            if (wifiInfo != null) {
+                // if wifiInfo is not null, set the label to "hostAddress"
+                InetAddress address = NetworkUtils.intToInetAddress(wifiInfo.getIpAddress());
+                state.label = address.getHostAddress();
+            } else {
+                //if wifiInfo is null, set the label without host address
+                state.label = mContext.getString(R.string.quick_settings_network_adb_label);
+            }
+            state.icon = ResourceIcon.get(R.drawable.ic_qs_network_adb_on);
+            state.state = Tile.STATE_ACTIVE;
+        } else {
+            // Otherwise set the disabled label and icon
+            state.label = mContext.getString(R.string.quick_settings_network_adb_label);
+            state.icon = ResourceIcon.get(R.drawable.ic_qs_network_adb_off);
+            state.state = Tile.STATE_INACTIVE;
+        }
+    }
+
+    @Override
+    public CharSequence getTileLabel() {
+        return mContext.getString(R.string.quick_settings_network_adb_label);
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return LineageMetricsLogger.TILE_ADB_OVER_NETWORK;
+    }
+
+    private void toggleAction() {
+        LineageSettings.Secure.putIntForUser(mContext.getContentResolver(),
+                LineageSettings.Secure.ADB_PORT, getState().value ? -1 : 5555,
+                UserHandle.USER_CURRENT);
+    }
+
+    private boolean isAdbEnabled() {
+        return Settings.Global.getInt(mContext.getContentResolver(),
+                Settings.Global.ADB_ENABLED, 0) > 0;
+    }
+
+    private boolean isAdbNetworkEnabled() {
+        return LineageSettings.Secure.getInt(mContext.getContentResolver(),
+                LineageSettings.Secure.ADB_PORT, 0) > 0;
+    }
+
+    private ContentObserver mObserver = new ContentObserver(mHandler) {
+        @Override
+        public void onChange(boolean selfChange, Uri uri) {
+            refreshState();
+        }
+    };
+
+    @Override
+    public void handleSetListening(boolean listening) {
+        if (mListening != listening) {
+            mListening = listening;
+            if (listening) {
+                mContext.getContentResolver().registerContentObserver(
+                        LineageSettings.Secure.getUriFor(LineageSettings.Secure.ADB_PORT),
+                        false, mObserver);
+                mContext.getContentResolver().registerContentObserver(
+                        Settings.Global.getUriFor(Settings.Global.ADB_ENABLED),
+                        false, mObserver);
+                mKeyguardMonitor.addCallback(mCallback);
+            } else {
+                mContext.getContentResolver().unregisterContentObserver(mObserver);
+                mKeyguardMonitor.removeCallback(mCallback);
+            }
+        }
+    }
+
+    private class KeyguardMonitorCallback implements KeyguardMonitor.Callback {
+        @Override
+        public void onKeyguardShowingChanged() {
+            refreshState();
+        }
+    }
+}
-- 
2.17.1

