From 22680feaff8415ebf83e32953e4486930944edef Mon Sep 17 00:00:00 2001
From: Michael W <baddaemon87@gmail.com>
Date: Sat, 4 Aug 2018 18:48:10 +0200
Subject: [PATCH 35/38] LocationTile: Replace deprecated MetricsLogger calls

* The action(Context, int, boolean) call is deprecated and
  links to the non-static method action(int, boolean)
* To use that, we need an instance variable of MetricsLogger
* There are other tiles using the deprecated calls as well but
  those are maintained by aosp so hopfully updated by them at
  next source drop

Change-Id: I25358a9cf70c7a721c66ffe90d315a2ffcd2abcc
---
 .../com/android/systemui/qs/tiles/LocationTile.java    | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
index 5d9562ca7b2..ccb3f19f38b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
@@ -61,6 +61,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
     private final Callback mCallback = new Callback();
     private final ActivityStarter mActivityStarter;
     private int mLastState;
+    private MetricsLogger mMetricsLogger;
 
     public LocationTile(QSHost host) {
         super(host);
@@ -68,6 +69,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
         mKeyguard = Dependency.get(KeyguardMonitor.class);
         mDetailAdapter = (LocationDetailAdapter) createDetailAdapter();
         mActivityStarter = Dependency.get(ActivityStarter.class);
+        mMetricsLogger = new MetricsLogger();
     }
 
     @Override
@@ -107,12 +109,12 @@ public class LocationTile extends QSTileImpl<BooleanState> {
         final boolean wasEnabled = mState.value;
         if (mKeyguard.isSecure() && !mKeyguard.canSkipBouncer()) {
             mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
-                MetricsLogger.action(mContext, getMetricsCategory(), !wasEnabled);
+                mMetricsLogger.action(getMetricsCategory(), !wasEnabled);
                 mController.setLocationEnabled(!wasEnabled);
             });
             return;
         }
-        MetricsLogger.action(mContext, getMetricsCategory(), !wasEnabled);
+        mMetricsLogger.action(getMetricsCategory(), !wasEnabled);
         mController.setLocationEnabled(!wasEnabled);
     }
 
@@ -258,7 +260,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
 
         @Override
         public void setToggleState(boolean state) {
-            MetricsLogger.action(mContext, MetricsEvent.QS_DND_TOGGLE, state);
+            mMetricsLogger.action(MetricsEvent.QS_DND_TOGGLE, state);
             if (!state) {
                 mController.setLocationEnabled(state);
                 showDetail(false);
@@ -324,7 +326,7 @@ public class LocationTile extends QSTileImpl<BooleanState> {
                 if (value != null && mButtons.isShown()) {
                     mLastState = (Integer) value;
                     if (fromClick) {
-                        MetricsLogger.action(mContext, MetricsEvent.QS_LOCATION, mLastState);
+                        mMetricsLogger.action(MetricsEvent.QS_LOCATION, mLastState);
                         mController.setLocationMode(mLastState);
                         refresh(mLastState);
                     }
-- 
2.17.1

