From 611bfc2e3958ab52af03fd4106285a6955dc9979 Mon Sep 17 00:00:00 2001
From: Sam Mortimer <sam@mortimer.me.uk>
Date: Thu, 25 Jan 2018 18:53:39 -0800
Subject: [PATCH 26/66] fw/b: Allow customisation of navbar app switch long
 press action

Change-Id: Idfb12a7bae6d921d207b5becd69b1005ce3d2b92
---
 packages/SystemUI/res/layout/recent_apps.xml         |  1 +
 .../statusbar/phone/NavigationBarFragment.java       | 12 ++++++++----
 .../android/server/policy/PhoneWindowManager.java    |  6 +++---
 3 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/packages/SystemUI/res/layout/recent_apps.xml b/packages/SystemUI/res/layout/recent_apps.xml
index 870bcf7547a..89c209d078f 100644
--- a/packages/SystemUI/res/layout/recent_apps.xml
+++ b/packages/SystemUI/res/layout/recent_apps.xml
@@ -25,5 +25,6 @@
     android:contentDescription="@string/accessibility_recent"
     android:paddingStart="@dimen/navigation_key_padding"
     android:paddingEnd="@dimen/navigation_key_padding"
+    systemui:keyCode="187"
     />
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
index 0201c95fafd..fa101e52126 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
@@ -907,10 +907,14 @@ public class NavigationBarFragment extends Fragment implements Callbacks {
                     // When exiting refresh disabled flags.
                     mNavigationBarView.updateNavButtonIcons();
                     return true;
-                } else if (v.getId() == btnId2) {
-                    return btnId2 == R.id.recent_apps
-                            ? onLongPressRecents()
-                            : onHomeLongClick(mNavigationBarView.getHomeButton().getCurrentView());
+                } else if (v.getId() == R.id.recent_apps) {
+                    // Send long press key event so that Lineage button handling can intercept
+                    KeyButtonView keyButtonView = (KeyButtonView) v;
+                    keyButtonView.sendEvent(KeyEvent.ACTION_DOWN, KeyEvent.FLAG_LONG_PRESS);
+                    keyButtonView.sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_LONG_CLICKED);
+                    return true;
+                } else {
+                    onHomeLongClick(mNavigationBarView.getHomeButton().getCurrentView());
                 }
             }
             if (sendBackLongPress) {
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index b113240b37f..37328526f76 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -2646,10 +2646,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             mAppSwitchPressAction = Action.fromSettings(resolver,
                     LineageSettings.System.KEY_APP_SWITCH_ACTION,
                     mAppSwitchPressAction);
-            mAppSwitchLongPressAction = Action.fromSettings(resolver,
-                    LineageSettings.System.KEY_APP_SWITCH_LONG_PRESS_ACTION,
-                    mAppSwitchLongPressAction);
         }
+        mAppSwitchLongPressAction = Action.fromSettings(resolver,
+                LineageSettings.System.KEY_APP_SWITCH_LONG_PRESS_ACTION,
+                mAppSwitchLongPressAction);
 
         mShortPressOnWindowBehavior = SHORT_PRESS_WINDOW_NOTHING;
         if (mContext.getPackageManager().hasSystemFeature(FEATURE_PICTURE_IN_PICTURE)) {
-- 
2.17.1

