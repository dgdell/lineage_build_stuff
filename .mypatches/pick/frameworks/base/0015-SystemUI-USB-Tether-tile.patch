From 9f8adbd6cbb364f3a94736645cae59fcd669f153 Mon Sep 17 00:00:00 2001
From: BestPig <bestpig82@gmail.com>
Date: Sun, 1 Feb 2015 03:04:41 +0100
Subject: [PATCH 15/57] SystemUI: USB Tether tile

Author: BestPig <bestpig82@gmail.com>
Date:   Sun Feb 1 03:04:41 2015 +0100

    SystemUI: add USB Tether tile

     * Added vector drawables (blunden)

     * Long click action changed to open Tethering options, in the same way
       as Google does for Hotspot tile (bgcngm)

     * USB Tethering enablement check refactored (bgcngm and luca020400)

    Change-Id: Ic44f2b596fe32152f3f722347a855325c52113c6

Author: Gabriele M <moto.falcon.git@gmail.com>
Date:   Fri Apr 27 20:51:42 2018 +0200

    SystemUI: Toggle USB tethering only when USB is connected

    Pressing the tile when unplugged causes USB tethering to turn on
    as soon as the cable is connected. This can happen long after the
    tile has been pressed, so don't do anything if unplugged.

    Change-Id: Ib8bbdc758097ca7af5d4e7c3483c28ba42fb9ce1

Change-Id: Ibbc0ba9de2cc3eee2a7f6a9c9f005730244f0b3a
---
 .../res/drawable/ic_qs_usb_tether_off.xml     |  26 ++++
 .../res/drawable/ic_qs_usb_tether_on.xml      |  26 ++++
 packages/SystemUI/res/values/cm_strings.xml   |   3 +
 packages/SystemUI/res/values/config.xml       |   2 +-
 .../systemui/qs/tileimpl/QSFactoryImpl.java   |   3 +
 .../systemui/qs/tiles/UsbTetherTile.java      | 118 ++++++++++++++++++
 6 files changed, 177 insertions(+), 1 deletion(-)
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_usb_tether_off.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_usb_tether_on.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/UsbTetherTile.java

diff --git a/packages/SystemUI/res/drawable/ic_qs_usb_tether_off.xml b/packages/SystemUI/res/drawable/ic_qs_usb_tether_off.xml
new file mode 100644
index 00000000000..4fdd84b2a36
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_usb_tether_off.xml
@@ -0,0 +1,26 @@
+<!--
+    Copyright (C) 2015 The CyanogenMod Open Source Project
+    Copyright (C) 2017 The LineageOS Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="64dp"
+        android:height="64dp"
+        android:viewportWidth="64"
+        android:viewportHeight="64">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M48.677,29.715h5.255v-7.254h4.401l-7.047-9.612l-7.052,9.612h4.443V29.715z M54.688,46.753l3.645-4.971h-4.401v-7.255 h-5.255v6.215L54.688,46.753z M36.741,28.805v-3.923h2.109v-8.445h-8.444v6.034L36.741,28.805z M23.942,16.007v-1.679h4.562 l-6.547-8.976l-3.656,5.014L23.942,16.007z M28.916,34.699l22.692,22.692l3.324-3.324L7.6,6.734l-3.324,3.323l15.693,15.694 l0.004,10.381l-8.571-3.715v-3.896c1.257-0.734,2.111-2.079,2.111-3.639c0-2.33-1.887-4.222-4.224-4.222 c-2.332,0-4.222,1.892-4.222,4.222c0,1.56,0.854,2.905,2.113,3.639v6.668l12.794,5.547v5.609c-2.518,0.837-4.348,3.185-4.348,5.987 c0,3.495,2.835,6.333,6.332,6.333c3.501,0,6.337-2.838,6.337-6.333c0-2.802-1.83-5.15-4.352-5.987v-9.113L28.916,34.699z M23.938,29.72l1.843,1.843l-1.839,0.93L23.938,29.72z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_usb_tether_on.xml b/packages/SystemUI/res/drawable/ic_qs_usb_tether_on.xml
new file mode 100644
index 00000000000..729dbf8565a
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_usb_tether_on.xml
@@ -0,0 +1,26 @@
+<!--
+    Copyright (C) 2015 The CyanogenMod Open Source Project
+    Copyright (C) 2017 The LineageOS Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="64dp"
+        android:height="64dp"
+        android:viewportWidth="64"
+        android:viewportHeight="64">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M48.677,29.724h5.255V22.47h4.401l-7.047-9.611l-7.052,9.611h4.443V29.724z M48.677,34.537h5.255v7.254h4.401l-7.047,9.611 l-7.052-9.611h4.443V34.537z M38.85,16.447h-8.444v8.445h2.11v3.251l-8.574,4.36V14.337h4.562l-6.547-8.975l-6.545,8.975h4.561 v21.805l-8.571-3.715v-3.896c1.257-0.734,2.111-2.079,2.111-3.639c0-2.33-1.887-4.222-4.224-4.222c-2.332,0-4.222,1.892-4.222,4.222c0,1.56,0.854,2.905,2.113,3.639v6.668l12.794,5.547v5.609c-2.518,0.837-4.348,3.184-4.348,5.987c0,3.495,2.835,6.333,6.332,6.333c3.501,0,6.337-2.838,6.337-6.333c0-2.802-1.83-5.15-4.352-5.987v-9.113l12.798-6.512v-5.839h2.11L38.85,16.447L38.85,16.447z" />
+</vector>
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index 97b3cc56c29..1f9c967badf 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -48,6 +48,9 @@
     <string name="accessibility_quick_settings_sync_changed_off">Sync turned off.</string>
     <string name="accessibility_quick_settings_sync_changed_on">Sync turned on.</string>
 
+    <!-- USB tethering QS tile -->
+    <string name="quick_settings_usb_tether_label">USB tethering</string>
+
     <!-- Volume panel QS tile -->
     <string name="quick_settings_volume_panel_label">Volume panel</string>
 </resources>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index 058de4f041a..aea085c45c5 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -123,7 +123,7 @@
 
     <!-- Tiles native to System UI. Order should match "quick_settings_tiles_default" -->
     <string name="quick_settings_tiles_stock" translatable="false">
-        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,adb_network,ambient_display,caffeine,heads_up,sync,volume_panel
+        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,adb_network,ambient_display,caffeine,heads_up,sync,usb_tether,volume_panel
     </string>
 
     <!-- The tiles to display in QuickSettings -->
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
index 415cbea19e6..6bcd993046f 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
@@ -44,6 +44,7 @@ import com.android.systemui.qs.tiles.NfcTile;
 import com.android.systemui.qs.tiles.NightDisplayTile;
 import com.android.systemui.qs.tiles.RotationLockTile;
 import com.android.systemui.qs.tiles.SyncTile;
+import com.android.systemui.qs.tiles.UsbTetherTile;
 import com.android.systemui.qs.tiles.UserTile;
 import com.android.systemui.qs.tiles.VolumeTile;
 import com.android.systemui.qs.tiles.WifiTile;
@@ -116,6 +117,8 @@ public class QSFactoryImpl implements QSFactory {
                 return new HeadsUpTile(mHost);
             case "sync":
                 return new SyncTile(mHost);
+            case "usb_tether":
+                return new UsbTetherTile(mHost);
             case "volume_panel":
                 return new VolumeTile(mHost);
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/UsbTetherTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/UsbTetherTile.java
new file mode 100644
index 00000000000..b157eb33504
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/UsbTetherTile.java
@@ -0,0 +1,118 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ * Copyright (C) 2017-2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.hardware.usb.UsbManager;
+import android.provider.Settings;
+import android.net.ConnectivityManager;
+import android.service.quicksettings.Tile;
+
+import com.android.systemui.plugins.qs.QSTile.BooleanState;
+import com.android.systemui.qs.QSHost;
+import com.android.systemui.qs.tileimpl.QSTileImpl;
+import com.android.systemui.R;
+
+import org.lineageos.internal.logging.LineageMetricsLogger;
+
+/**
+ * USB Tether quick settings tile
+ */
+public class UsbTetherTile extends QSTileImpl<BooleanState> {
+    static final Intent TETHER_SETTINGS = new Intent().setComponent(new ComponentName(
+             "com.android.settings", "com.android.settings.TetherSettings"));
+
+    private final ConnectivityManager mConnectivityManager;
+
+    private boolean mListening;
+
+    private boolean mUsbConnected = false;
+    private boolean mUsbTetherEnabled = false;
+
+    public UsbTetherTile(QSHost host) {
+        super(host);
+        mConnectivityManager = mContext.getSystemService(ConnectivityManager.class);
+    }
+
+    public BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    public void handleSetListening(boolean listening) {
+        if (mListening == listening) {
+            return;
+        }
+        mListening = listening;
+        if (listening) {
+            final IntentFilter filter = new IntentFilter();
+            filter.addAction(UsbManager.ACTION_USB_STATE);
+            mContext.registerReceiver(mReceiver, filter);
+        } else {
+            mContext.unregisterReceiver(mReceiver);
+        }
+    }
+
+    @Override
+    protected void handleClick() {
+        if (mUsbConnected) {
+            mConnectivityManager.setUsbTethering(!mUsbTetherEnabled);
+        }
+    }
+
+    @Override
+    public Intent getLongClickIntent() {
+        return new Intent(TETHER_SETTINGS);
+    }
+
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            mUsbConnected = intent.getBooleanExtra(UsbManager.USB_CONNECTED, false);
+            if (mUsbConnected && mConnectivityManager.isTetheringSupported()) {
+                mUsbTetherEnabled = intent.getBooleanExtra(UsbManager.USB_FUNCTION_RNDIS, false);
+            } else {
+                mUsbTetherEnabled = false;
+            }
+            refreshState();
+        }
+    };
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        state.value = mUsbTetherEnabled;
+        state.label = mContext.getString(R.string.quick_settings_usb_tether_label);
+        state.icon = mUsbTetherEnabled ? ResourceIcon.get(R.drawable.ic_qs_usb_tether_on)
+                : ResourceIcon.get(R.drawable.ic_qs_usb_tether_off);
+        state.state = mUsbTetherEnabled ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE;
+    }
+
+    @Override
+    public CharSequence getTileLabel() {
+        return mContext.getString(R.string.quick_settings_usb_tether_label);
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return LineageMetricsLogger.TILE_USB_TETHER;
+    }
+}
-- 
2.17.1

