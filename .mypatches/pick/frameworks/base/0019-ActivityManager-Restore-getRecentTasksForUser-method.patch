From 3ccf2a7690909fde08d55d037d446b67c7387563 Mon Sep 17 00:00:00 2001
From: Bruno Martins <bgcngm@gmail.com>
Date: Sun, 19 Aug 2018 09:59:51 +0100
Subject: [PATCH 19/81] ActivityManager: Restore getRecentTasksForUser method

 * This method got removed with the following commit:
https://github.com/LineageOS/android_frameworks_base/commit/5fa397533fa29254e8a45a05675b2c03756a0ada

 * Lineage SDK relies on it so restore it.

Change-Id: Ie6f0a36a48af6050dc1ec30b13772c861bde3cfe
---
 core/java/android/app/ActivityManager.java | 27 ++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/core/java/android/app/ActivityManager.java b/core/java/android/app/ActivityManager.java
index 83630f4c369..24dd7267588 100644
--- a/core/java/android/app/ActivityManager.java
+++ b/core/java/android/app/ActivityManager.java
@@ -1711,6 +1711,33 @@ public class ActivityManager {
         }
     }
 
+    /**
+     * Same as {@link #getRecentTasks(int, int)} but returns the recent tasks for a
+     * specific user. It requires holding
+     * the {@link android.Manifest.permission#INTERACT_ACROSS_USERS_FULL} permission.
+     * @param maxNum The maximum number of entries to return in the list.  The
+     * actual number returned may be smaller, depending on how many tasks the
+     * user has started and the maximum number the system can remember.
+     * @param flags Information about what to return.  May be any combination
+     * of {@link #RECENT_WITH_EXCLUDED} and {@link #RECENT_IGNORE_UNAVAILABLE}.
+     *
+     * @return Returns a list of RecentTaskInfo records describing each of
+     * the recent tasks. Most recently activated tasks go first.
+     *
+     * @hide
+     */
+    public List<RecentTaskInfo> getRecentTasksForUser(int maxNum, int flags, int userId)
+            throws SecurityException {
+        try {
+            if (maxNum < 0) {
+                throw new IllegalArgumentException("The requested number of tasks should be >= 0");
+            }
+            return getService().getRecentTasks(maxNum, flags, userId).getList();
+        } catch (RemoteException e) {
+            throw e.rethrowFromSystemServer();
+        }
+    }
+
     /**
      * Information you can retrieve about a particular task that is currently
      * "running" in the system.  Note that a running task does not mean the
-- 
2.17.1

