From 824d2f8011b92fa47c42ccec35d5c671587a1e23 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Thu, 30 Aug 2018 21:35:01 +0200
Subject: [PATCH 65/71] Revert "ActivityManager: Restore getRecentTasksForUser
 method"

This reverts commit b6752656353dacbed49c28534b80c36d17cf7f5a.

Reason for revert: Apparently IActivityManager has the function we're looking for...

Change-Id: Id196fc6ec75d4048d0fc68b5b88b239e0d1a0cc3
---
 core/java/android/app/ActivityManager.java | 27 ----------------------
 1 file changed, 27 deletions(-)

diff --git a/core/java/android/app/ActivityManager.java b/core/java/android/app/ActivityManager.java
index 24dd7267588..83630f4c369 100644
--- a/core/java/android/app/ActivityManager.java
+++ b/core/java/android/app/ActivityManager.java
@@ -1711,33 +1711,6 @@ public class ActivityManager {
         }
     }
 
-    /**
-     * Same as {@link #getRecentTasks(int, int)} but returns the recent tasks for a
-     * specific user. It requires holding
-     * the {@link android.Manifest.permission#INTERACT_ACROSS_USERS_FULL} permission.
-     * @param maxNum The maximum number of entries to return in the list.  The
-     * actual number returned may be smaller, depending on how many tasks the
-     * user has started and the maximum number the system can remember.
-     * @param flags Information about what to return.  May be any combination
-     * of {@link #RECENT_WITH_EXCLUDED} and {@link #RECENT_IGNORE_UNAVAILABLE}.
-     *
-     * @return Returns a list of RecentTaskInfo records describing each of
-     * the recent tasks. Most recently activated tasks go first.
-     *
-     * @hide
-     */
-    public List<RecentTaskInfo> getRecentTasksForUser(int maxNum, int flags, int userId)
-            throws SecurityException {
-        try {
-            if (maxNum < 0) {
-                throw new IllegalArgumentException("The requested number of tasks should be >= 0");
-            }
-            return getService().getRecentTasks(maxNum, flags, userId).getList();
-        } catch (RemoteException e) {
-            throw e.rethrowFromSystemServer();
-        }
-    }
-
     /**
      * Information you can retrieve about a particular task that is currently
      * "running" in the system.  Note that a running task does not mean the
-- 
2.17.1

