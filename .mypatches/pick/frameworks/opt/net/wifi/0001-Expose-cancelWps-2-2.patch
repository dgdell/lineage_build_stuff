From 494583adcc18e63a3ff9894cb5d1ef45bdefa521 Mon Sep 17 00:00:00 2001
From: Aaron Kling <webgeek1234@gmail.com>
Date: Fri, 7 Apr 2017 13:14:41 -0500
Subject: [PATCH 01/11] Expose cancelWps [2/2]

Change-Id: I6fb72c9bf513be8e46569201fe9b9f6f64bbdd99
---
 .../android/server/wifi/p2p/WifiP2pNative.java   |  4 ++++
 .../server/wifi/p2p/WifiP2pServiceImpl.java      | 16 ++++++++++++++++
 2 files changed, 20 insertions(+)

diff --git a/service/java/com/android/server/wifi/p2p/WifiP2pNative.java b/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
index bae3faa62..37e9dea7e 100644
--- a/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
+++ b/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
@@ -128,6 +128,10 @@ public class WifiP2pNative {
         return mSupplicantP2pIfaceHal.startWpsPinDisplay(iface, bssid);
     }
 
+    public boolean cancelWps(String iface) {
+        return mSupplicantP2pIfaceHal.cancelWps(iface);
+    }
+
     /**
      * Remove network with provided id.
      *
diff --git a/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java b/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
index d70ce416d..4cf40cfba 100644
--- a/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
+++ b/service/java/com/android/server/wifi/p2p/WifiP2pServiceImpl.java
@@ -342,6 +342,7 @@ public class WifiP2pServiceImpl extends IWifiP2pManager.Stub {
                 case WifiP2pManager.STOP_LISTEN:
                 case WifiP2pManager.SET_CHANNEL:
                 case WifiP2pManager.START_WPS:
+                case WifiP2pManager.CANCEL_WPS:
                 case WifiP2pManager.ADD_LOCAL_SERVICE:
                 case WifiP2pManager.REMOVE_LOCAL_SERVICE:
                 case WifiP2pManager.CLEAR_LOCAL_SERVICES:
@@ -921,6 +922,10 @@ public class WifiP2pServiceImpl extends IWifiP2pManager.Stub {
                         replyToMessage(message, WifiP2pManager.START_WPS_FAILED,
                                 WifiP2pManager.BUSY);
                         break;
+                    case WifiP2pManager.CANCEL_WPS:
+                        replyToMessage(message, WifiP2pManager.CANCEL_WPS_FAILED,
+                                WifiP2pManager.BUSY);
+                        break;
                     case WifiP2pManager.GET_HANDOVER_REQUEST:
                     case WifiP2pManager.GET_HANDOVER_SELECT:
                         replyToMessage(message, WifiP2pManager.RESPONSE_GET_HANDOVER_MESSAGE, null);
@@ -1068,6 +1073,10 @@ public class WifiP2pServiceImpl extends IWifiP2pManager.Stub {
                         replyToMessage(message, WifiP2pManager.START_WPS_FAILED,
                                 WifiP2pManager.P2P_UNSUPPORTED);
                         break;
+                    case WifiP2pManager.CANCEL_WPS:
+                        replyToMessage(message, WifiP2pManager.CANCEL_WPS_FAILED,
+                                WifiP2pManager.P2P_UNSUPPORTED);
+                        break;
                     case WifiP2pManager.START_LISTEN:
                         replyToMessage(message, WifiP2pManager.START_LISTEN_FAILED,
                                 WifiP2pManager.P2P_UNSUPPORTED);
@@ -2323,6 +2332,13 @@ public class WifiP2pServiceImpl extends IWifiP2pManager.Stub {
                         replyToMessage(message, ret ? WifiP2pManager.START_WPS_SUCCEEDED :
                                 WifiP2pManager.START_WPS_FAILED);
                         break;
+                    case WifiP2pManager.CANCEL_WPS:
+                        if (mWifiNative.cancelWps(mGroup.getInterface())) {
+                            replyToMessage(message, WifiP2pManager.CANCEL_WPS_SUCCEEDED);
+                        } else {
+                            replyToMessage(message, WifiP2pManager.CANCEL_WPS_FAILED);
+                        }
+                        break;
                     case WifiP2pManager.CONNECT:
                         WifiP2pConfig config = (WifiP2pConfig) message.obj;
                         if (isConfigInvalid(config)) {
-- 
2.17.1

