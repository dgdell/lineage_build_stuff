From 8148099fe88ee236689c8f2352b21c6ec88f76c2 Mon Sep 17 00:00:00 2001
From: Rashed Abdel-Tawab <rashed@linux.com>
Date: Sun, 28 Jan 2018 11:34:01 -0800
Subject: [PATCH 3/3] camera: Only link and use
 vendor.qti.hardware.camera.device if specified

Only use if TARGET_USES_QTI_CAMERA_DEVICE is set

Change-Id: I74b178c2f685a2ffda3e91eb7ff6d05664eebaf6
---
 camera/device/1.0/default/Android.bp         |  9 ++++++++-
 camera/device/1.0/default/CameraDevice.cpp   |  7 ++++++-
 camera/device/1.0/default/CameraDevice_1_0.h |  6 ++++++
 camera/provider/2.4/default/Android.bp       | 18 ++++++++++++++++--
 4 files changed, 36 insertions(+), 4 deletions(-)

diff --git a/camera/device/1.0/default/Android.bp b/camera/device/1.0/default/Android.bp
index 6028731a..30c6c5f5 100644
--- a/camera/device/1.0/default/Android.bp
+++ b/camera/device/1.0/default/Android.bp
@@ -12,7 +12,6 @@ cc_library_shared {
         "libhwbinder",
         "libutils",
         "android.hardware.camera.device@1.0",
-        "vendor.qti.hardware.camera.device@1.0_vendor",
         "android.hardware.camera.common@1.0",
         "android.hardware.graphics.allocator@2.0",
         "android.hardware.graphics.mapper@2.0",
@@ -30,6 +29,14 @@ cc_library_shared {
     header_libs: [
         "media_plugin_headers",
     ],
+    product_variables: {
+        lineage: {
+            uses_qti_camera_device: {
+                cppflags: ["-DQTI_CAMERA_DEVICE"],
+                shared_libs: ["vendor.qti.hardware.camera.device@1.0_vendor"],
+            },
+        },
+    },
     export_include_dirs: ["."]
 }
 
diff --git a/camera/device/1.0/default/CameraDevice.cpp b/camera/device/1.0/default/CameraDevice.cpp
index 15fcd7cd..116963b9 100644
--- a/camera/device/1.0/default/CameraDevice.cpp
+++ b/camera/device/1.0/default/CameraDevice.cpp
@@ -428,6 +428,7 @@ void CameraDevice::sDataCb(int32_t msg_type, const camera_memory_t *data, unsign
              index, mem->mNumBufs);
         return;
     }
+#ifdef QTI_CAMERA_DEVICE
     if(object->mQDeviceCallback != nullptr) {
          vendor::qti::hardware::camera::device::V1_0::QCameraFrameMetadata hidlMetadata;
          if (metadata) {
@@ -464,8 +465,8 @@ void CameraDevice::sDataCb(int32_t msg_type, const camera_memory_t *data, unsign
          CameraHeapMemory* mem = static_cast<CameraHeapMemory *>(data->handle);
          object->mQDeviceCallback->QDataCallback(
                  (DataCallbackMsg) msg_type, mem->handle.mId, index, hidlMetadata);
- 
     } else {
+#endif
        if (object->mDeviceCallback != nullptr) {
            CameraFrameMetadata hidlMetadata;
            if (metadata) {
@@ -490,7 +491,9 @@ void CameraDevice::sDataCb(int32_t msg_type, const camera_memory_t *data, unsign
            CameraHeapMemory* mem = static_cast<CameraHeapMemory *>(data->handle);
            object->mDeviceCallback->dataCallback(
                    (DataCallbackMsg) msg_type, mem->handle.mId, index, hidlMetadata);
+#ifdef QTI_CAMERA_DEVICE
        }
+#endif
     }
 }
 
@@ -706,10 +709,12 @@ Return<Status> CameraDevice::open(const sp<ICameraDeviceCallback>& callback) {
 
     initHalPreviewWindow();
     mDeviceCallback = callback;
+#ifdef QTI_CAMERA_DEVICE
     mQDeviceCallback = vendor::qti::hardware::camera::device::V1_0::IQCameraDeviceCallback::castFrom(callback);
     if(mQDeviceCallback == nullptr) {
         ALOGI("could not cast ICameraDeviceCallback to IQCameraDeviceCallback");
     }
+#endif
 
     if (mDevice->ops->set_callbacks) {
         mDevice->ops->set_callbacks(mDevice,
diff --git a/camera/device/1.0/default/CameraDevice_1_0.h b/camera/device/1.0/default/CameraDevice_1_0.h
index e5a194ed..2b35a730 100644
--- a/camera/device/1.0/default/CameraDevice_1_0.h
+++ b/camera/device/1.0/default/CameraDevice_1_0.h
@@ -24,7 +24,9 @@
 #include "HandleImporter.h"
 
 #include <android/hardware/camera/device/1.0/ICameraDevice.h>
+#ifdef QTI_CAMERA_DEVICE
 #include <vendor/qti/hardware/camera/device/1.0/IQCameraDeviceCallback.h>
+#endif
 #include <android/hidl/allocator/1.0/IAllocator.h>
 #include <android/hidl/memory/1.0/IMemory.h>
 #include <hidl/MQDescriptor.h>
@@ -45,7 +47,9 @@ using ::android::hardware::camera::common::V1_0::helper::HandleImporter;
 using ::android::hardware::camera::device::V1_0::CameraInfo;
 using ::android::hardware::camera::device::V1_0::CommandType;
 using ::android::hardware::camera::device::V1_0::ICameraDevice;
+#ifdef QTI_CAMERA_DEVICE
 using ::vendor::qti::hardware::camera::device::V1_0::IQCameraDeviceCallback;
+#endif
 using ::android::hardware::camera::device::V1_0::ICameraDeviceCallback;
 using ::android::hardware::camera::device::V1_0::ICameraDevicePreviewCallback;
 using ::android::hardware::camera::device::V1_0::MemoryId;
@@ -166,7 +170,9 @@ private:
     const SortedVector<std::pair<std::string, std::string>>& mCameraDeviceNames;
 
     sp<ICameraDeviceCallback> mDeviceCallback = nullptr;
+#ifdef QTI_CAMERA_DEVICE
     sp<IQCameraDeviceCallback> mQDeviceCallback = nullptr;
+#endif
 
     mutable Mutex mMemoryMapLock; // gating access to mMemoryMap
                                   // must not hold mLock after this lock is acquired
diff --git a/camera/provider/2.4/default/Android.bp b/camera/provider/2.4/default/Android.bp
index db4a302d..3e5db99d 100644
--- a/camera/provider/2.4/default/Android.bp
+++ b/camera/provider/2.4/default/Android.bp
@@ -11,7 +11,6 @@ cc_library_shared {
         "libutils",
         "libcutils",
         "android.hardware.camera.device@1.0",
-        "vendor.qti.hardware.camera.device@1.0_vendor",
         "android.hardware.camera.device@3.2",
         "android.hardware.camera.device@3.3",
         "android.hardware.camera.device@3.4",
@@ -34,6 +33,14 @@ cc_library_shared {
         "camera.device@3.4-impl_headers",
         "camera.device@3.4-external-impl_headers"
     ],
+    product_variables: {
+        lineage: {
+            uses_qti_camera_device: {
+                cppflags: ["-DQTI_CAMERA_DEVICE"],
+                shared_libs: ["vendor.qti.hardware.camera.device@1.0_vendor"],
+            },
+        },
+    },
     static_libs: [
         "android.hardware.camera.common@1.0-helper",
     ],
@@ -54,7 +61,6 @@ cc_binary {
         "liblog",
         "libutils",
         "android.hardware.camera.device@1.0",
-        "vendor.qti.hardware.camera.device@1.0_vendor",
         "android.hardware.camera.device@3.2",
         "android.hardware.camera.device@3.3",
         "android.hardware.camera.device@3.4",
@@ -107,4 +113,12 @@ cc_binary {
         "android.hardware.camera.provider@2.4",
         "android.hardware.camera.common@1.0",
     ],
+    product_variables: {
+        lineage: {
+            uses_qti_camera_device: {
+                cppflags: ["-DQTI_CAMERA_DEVICE"],
+                shared_libs: ["vendor.qti.hardware.camera.device@1.0_vendor"],
+            },
+        },
+    },
 }
-- 
2.17.1

