From 294425b42c34d140df4931c0b849fa4a3af8dfe2 Mon Sep 17 00:00:00 2001
From: Stricted <info@stricted.net>
Date: Sun, 12 Aug 2018 02:42:06 +0200
Subject: [PATCH 01/12] resolve compiling warnings/errors

* remove all unused variables
* remove all unused functions

Change-Id: I220f8cbcf192bc54174d2c0d2ec47c541e8ba7fa
---
 liblights/lights.c                            |  1 -
 power/power.c                                 |  6 +----
 ril/libril/RilSapSocket.h                     | 16 -------------
 ril/libril/ril.cpp                            | 24 +------------------
 ril/libril/ril_service.cpp                    |  4 ----
 ril/libril/sap_service.cpp                    |  1 -
 .../secril-client-sap.cpp                     |  2 --
 ril/libsecril-client/secril-client.cpp        |  9 -------
 wifiloader/wifiloader.c                       |  1 -
 9 files changed, 2 insertions(+), 62 deletions(-)

diff --git a/liblights/lights.c b/liblights/lights.c
index 875cf65..92034ea 100644
--- a/liblights/lights.c
+++ b/liblights/lights.c
@@ -178,7 +178,6 @@ static int write_leds(const struct led_config *led)
 
     char blink[32];
     int count, err;
-    int color;
 
     if (led == NULL)
         led = &led_off;
diff --git a/power/power.c b/power/power.c
index a34a5b5..887faf6 100644
--- a/power/power.c
+++ b/power/power.c
@@ -213,8 +213,6 @@ static void send_boostpulse(int boostpulse_fd)
 static void set_power_profile(struct samsung_power_module *samsung_pwr,
                               int profile)
 {
-    int rc;
-
     if (profile < 0 || profile >= PROFILE_MAX) {
         return;
     }
@@ -531,10 +529,8 @@ static int samsung_get_feature(struct power_module *module __unused,
     return -1;
 }
 
-static void samsung_set_feature(struct power_module *module, feature_t feature, int state __unused)
+static void samsung_set_feature(struct power_module *module __unused, feature_t feature, int state __unused)
 {
-    struct samsung_power_module *samsung_pwr = (struct samsung_power_module *) module;
-
     switch (feature) {
 #ifdef TARGET_TAP_TO_WAKE_NODE
         case POWER_FEATURE_DOUBLE_TAP_TO_WAKE:
diff --git a/ril/libril/RilSapSocket.h b/ril/libril/RilSapSocket.h
index 1f6163e..8c8c4bc 100644
--- a/ril/libril/RilSapSocket.h
+++ b/ril/libril/RilSapSocket.h
@@ -35,22 +35,6 @@
  * </ul>
  */
 class RilSapSocket : public RilSocket {
-    /**
-     * Function pointer to the ril initialization funtion.
-     *
-     * @param Ril environment variable with place request and
-     *        response handlers and timeout handler.
-     *
-     * @param Number of arguements for the initialization function.
-     *
-     * @param Arguements to the initialization function used to
-     *        generate instance id of the ril daemon.
-     *
-     * @return Radio functions with handlers for onRequest, onStateRequest,
-     *         supports, onCancel and getVersion.
-     */
-    RIL_RadioFunctions *(*UimInit)(const struct RIL_Env *, int argc, char **argv);
-
     /**
      * Place holder for the radio functions returned by the initialization
      * function. Currenty only onRequest handler is being used.
diff --git a/ril/libril/ril.cpp b/ril/libril/ril.cpp
index a7384f1..4bb59fb 100644
--- a/ril/libril/ril.cpp
+++ b/ril/libril/ril.cpp
@@ -114,12 +114,8 @@ RIL_RadioFunctions s_callbacks = {0, NULL, NULL, NULL, NULL, NULL};
 static int s_registerCalled = 0;
 
 static pthread_t s_tid_dispatch;
-static pthread_t s_tid_reader;
 static int s_started = 0;
 
-static int s_fdDebug = -1;
-static int s_fdDebug_socket2 = -1;
-
 static int s_fdWakeupRead;
 static int s_fdWakeupWrite;
 
@@ -128,7 +124,6 @@ int s_wakelock_count = 0;
 static struct ril_event s_wakeupfd_event;
 
 static pthread_mutex_t s_pendingRequestsMutex = PTHREAD_MUTEX_INITIALIZER;
-static pthread_mutex_t s_writeMutex = PTHREAD_MUTEX_INITIALIZER;
 static pthread_mutex_t s_wakeLockCountMutex = PTHREAD_MUTEX_INITIALIZER;
 static RequestInfo *s_pendingRequests = NULL;
 
@@ -150,22 +145,11 @@ static pthread_mutex_t s_writeMutex_socket4            = PTHREAD_MUTEX_INITIALIZ
 static RequestInfo *s_pendingRequests_socket4          = NULL;
 #endif
 
-static struct ril_event s_wake_timeout_event;
-static struct ril_event s_debug_event;
-
-
 static const struct timeval TIMEVAL_WAKE_TIMEOUT = {ANDROID_WAKE_LOCK_SECS,ANDROID_WAKE_LOCK_USECS};
 
-
 static pthread_mutex_t s_startupMutex = PTHREAD_MUTEX_INITIALIZER;
 static pthread_cond_t s_startupCond = PTHREAD_COND_INITIALIZER;
 
-static pthread_mutex_t s_dispatchMutex = PTHREAD_MUTEX_INITIALIZER;
-static pthread_cond_t s_dispatchCond = PTHREAD_COND_INITIALIZER;
-
-static RequestInfo *s_toDispatchHead = NULL;
-static RequestInfo *s_toDispatchTail = NULL;
-
 static UserCallbackInfo *s_last_wake_timeout_info = NULL;
 
 static void *s_lastNITZTimeData = NULL;
@@ -455,9 +439,6 @@ extern "C" void RIL_setcallbacks (const RIL_RadioFunctions *callbacks) {
 
 extern "C" void
 RIL_register (const RIL_RadioFunctions *callbacks) {
-    int ret;
-    int flags;
-
     RLOGI("SIM_COUNT: %d", SIM_COUNT);
 
     if (callbacks == NULL) {
@@ -602,9 +583,7 @@ checkAndDequeueRequestInfoIfAck(struct RequestInfo *pRI, bool isAck) {
 extern "C" void
 RIL_onRequestAck(RIL_Token t) {
     RequestInfo *pRI;
-    int ret;
 
-    size_t errorOffset;
     RIL_SOCKET_ID socket_id = RIL_SOCKET_1;
 
     pRI = (RequestInfo *)t;
@@ -638,7 +617,6 @@ extern "C" void
 RIL_onRequestComplete(RIL_Token t, RIL_Errno e, void *response, size_t responselen) {
     RequestInfo *pRI;
     int ret;
-    size_t errorOffset;
     RIL_SOCKET_ID socket_id = RIL_SOCKET_1;
 
     pRI = (RequestInfo *)t;
@@ -1016,7 +994,7 @@ failCauseToString(RIL_Errno e) {
         case RIL_E_SIM_FULL: return "E_SIM_FULL";
         case RIL_E_NETWORK_REJECT: return "E_NETWORK_REJECT";
         case RIL_E_OPERATION_NOT_ALLOWED: return "E_OPERATION_NOT_ALLOWED";
-        case RIL_E_EMPTY_RECORD: "E_EMPTY_RECORD";
+        case RIL_E_EMPTY_RECORD: return "E_EMPTY_RECORD";
         case RIL_E_INVALID_SMS_FORMAT: return "E_INVALID_SMS_FORMAT";
         case RIL_E_ENCODING_ERR: return "E_ENCODING_ERR";
         case RIL_E_INVALID_SMSC_ADDRESS: return "E_INVALID_SMSC_ADDRESS";
diff --git a/ril/libril/ril_service.cpp b/ril/libril/ril_service.cpp
index acad18d..76670df 100644
--- a/ril/libril/ril_service.cpp
+++ b/ril/libril/ril_service.cpp
@@ -1408,7 +1408,6 @@ Return<void> RadioImpl::writeSmsToSim(int32_t serial, const SmsWriteArgs& smsWri
     RIL_SMS_WriteArgs args;
     args.status = (int) smsWriteArgs.status;
 
-    int len;
     if (!copyHidlStringToRil(&args.pdu, smsWriteArgs.pdu, pRI)) {
         return Void();
     }
@@ -2308,7 +2307,6 @@ Return<void> RadioImpl::requestIccSimAuthentication(int32_t serial, int32_t auth
 
     pf.authContext = authContext;
 
-    int len;
     if (!copyHidlStringToRil(&pf.authData, authData, pRI)) {
         return Void();
     }
@@ -4276,7 +4274,6 @@ int radio::getNetworkSelectionModeResponse(int slotId,
         RadioResponseInfo responseInfo = {};
         populateResponseInfo(responseInfo, serial, responseType, e);
         bool manual = false;
-        int serviceClass;
         if (response == NULL || responseLen % sizeof(int) != 0) {
             RLOGE("getNetworkSelectionModeResponse Invalid response: NULL");
             if (e == RIL_E_SUCCESS) responseInfo.error = RadioError::INVALID_RESPONSE;
@@ -4515,7 +4512,6 @@ int radio::getMuteResponse(int slotId,
         RadioResponseInfo responseInfo = {};
         populateResponseInfo(responseInfo, serial, responseType, e);
         bool enable = false;
-        int serviceClass;
         if (response == NULL || responseLen % sizeof(int) != 0) {
             RLOGE("getMuteResponse Invalid response: NULL");
             if (e == RIL_E_SUCCESS) responseInfo.error = RadioError::INVALID_RESPONSE;
diff --git a/ril/libril/sap_service.cpp b/ril/libril/sap_service.cpp
index 7bed05a..254d000 100644
--- a/ril/libril/sap_service.cpp
+++ b/ril/libril/sap_service.cpp
@@ -532,7 +532,6 @@ Return<void> SapImpl::setTransferProtocolReq(int32_t token, SapTransferProtocol
 
 void *sapDecodeMessage(MsgId msgId, MsgType msgType, uint8_t *payloadPtr, size_t payloadLen) {
     void *responsePtr = NULL;
-    bool decodeStatus = false;
     pb_istream_t stream;
 
     /* Create the stream */
diff --git a/ril/libsecril-client-sap/secril-client-sap.cpp b/ril/libsecril-client-sap/secril-client-sap.cpp
index 1182b90..3cd4547 100755
--- a/ril/libsecril-client-sap/secril-client-sap.cpp
+++ b/ril/libsecril-client-sap/secril-client-sap.cpp
@@ -436,7 +436,6 @@ static int SendOemRequestHookRaw(HRilClient client, int req_id, char *data, size
     uint32_t header = 0;
     android::Parcel p;
     RilClientPrv *client_prv;
-    int maxfd = -1;
 
     client_prv = (RilClientPrv *)(client->prv);
 
@@ -488,7 +487,6 @@ error:
 static void * RxReaderFunc(void *param) {
     RilClientPrv *client_prv = (RilClientPrv *)param;
     int maxfd = 0;
-    int token = 0;
     void *p_record = NULL;
     size_t recordlen = 0;
     int ret = 0;
diff --git a/ril/libsecril-client/secril-client.cpp b/ril/libsecril-client/secril-client.cpp
index 4701884..e2cd878 100755
--- a/ril/libsecril-client/secril-client.cpp
+++ b/ril/libsecril-client/secril-client.cpp
@@ -155,7 +155,6 @@ static int processRxBuffer(RilClientPrv *prv, void *buffer, size_t buflen);
 static uint32_t AllocateToken(uint32_t *token_pool);
 static void FreeToken(uint32_t *token_pool, uint32_t token);
 static uint8_t IsValidToken(uint32_t *token_pool, uint32_t token);
-static void DeallocateToken(uint32_t *token_pool, uint32_t token);
 static int blockingWrite(int fd, const void *buffer, size_t len);
 static int RecordReqHistory(RilClientPrv *prv, int token, uint32_t id);
 static void ClearReqHistory(RilClientPrv *prv, int token);
@@ -1087,7 +1086,6 @@ static int SendOemRequestHookRaw(HRilClient client, int req_id, char *data, size
     uint32_t header = 0;
     android::Parcel p;
     RilClientPrv *client_prv;
-    int maxfd = -1;
 
     unsigned int check_req_id = req_id;
 
@@ -1229,7 +1227,6 @@ static char ConvertAudioPath(AudioPath path) {
 static void * RxReaderFunc(void *param) {
     RilClientPrv *client_prv = (RilClientPrv *)param;
     int maxfd = 0;
-    int token = 0;
     void *p_record = NULL;
     size_t recordlen = 0;
     int ret = 0;
@@ -1578,12 +1575,6 @@ static RilOnComplete FindReqHandler(RilClientPrv *prv, int token, uint32_t *id)
     return NULL;
 }
 
-
-static void DeallocateToken(uint32_t *token_pool, uint32_t token) {
-    *token_pool &= !token;
-}
-
-
 static int blockingWrite(int fd, const void *buffer, size_t len) {
     size_t writeOffset = 0;
     const uint8_t *toWrite;
diff --git a/wifiloader/wifiloader.c b/wifiloader/wifiloader.c
index 0aeec3e..ce01b02 100644
--- a/wifiloader/wifiloader.c
+++ b/wifiloader/wifiloader.c
@@ -111,7 +111,6 @@ int main(void)
     char buf[8] = { '\0' };
     FILE *fp;
     size_t r;
-    int fd;
     struct stat st;
 
     if (stat(WIFI_DRIVER_MODULE_PATH, &st) == 0) {
-- 
2.17.1

