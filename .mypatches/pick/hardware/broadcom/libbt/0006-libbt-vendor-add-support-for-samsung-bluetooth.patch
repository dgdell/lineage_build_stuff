From 8c1e55694fe187ae8ed3758a48ccf5679a4f708f Mon Sep 17 00:00:00 2001
From: Dheeraj CVR <cvr.dheeraj@gmail.com>
Date: Sun, 7 Jun 2015 03:50:41 +0400
Subject: [PATCH 6/7] libbt-vendor: add support for samsung bluetooth

This is a squash of the following changes:

Author: Dheeraj CVR <cvr.dheeraj@gmail.com>
Date:   2015-06-07 03:50:41 +0400

    libbt-vendor: add support for samsung bluetooth

    Based on codeworkx's patches for brcm_patchram.

    Change-Id: Ifefa4f2b98b9186695677dc6f02fcbb63b32e3b7

Author: Andreas Schneider <asn@cryptomilk.org>
Date:   2015-09-14 13:49:49 +0200

    libbt-vendor: Add support for Samsung wisol flavor

    Change-Id: I92864265dde328d749fa4745d4955e6864c1438d

Author: Andreas Schneider <asn@cryptomilk.org>
Date:   2015-09-22 16:52:04 +0200

    libbt-vendor: Fix Samsung patchfile detection.

    This is totally broken. If the chipset is bcm4530 then it added e.g.
    _wisol to it and looked for bcm4530_wisol.hcd. The firmware files are
    named e.g. bcm4350_V0301.0636_wisol.hcd. What we need to do if a special
    flavor is needed to search for the string in the name of the file we are
    currently inspecting.

    Change-Id: If804de56064cf8993a32af98c7ec39126ebd349a

Author: Dheeraj CVR <cvr.dheeraj@gmail.com>
Date:   2015-12-01 19:37:25 +0400

    libbt-vendor: add support for Samsung semco

    Change-Id: Ifca9393c8e7499c547c6080366f8a92901625f3f

Author: Paul Keith <javelinanddart@aidenswann.com>
Date:   2017-02-09 14:40:53 -0600

    libbt: Import CID_PATH from samsung_macloader.h

    * This allows devices to override the CID_PATH

    Change-Id: I0da99f909d25cc6861cfb118a014476c82f3a76f
    Signed-off-by: Paul Keith <javelinanddart@aidenswann.com>

Change-Id: I995295e2b1d8cd932f6216b639ae12d8be6bd60c
---
 Android.mk     |  5 ++++
 src/hardware.c | 74 ++++++++++++++++++++++++++++++++++++++++++++++++--
 2 files changed, 77 insertions(+), 2 deletions(-)

diff --git a/Android.mk b/Android.mk
index 69e60e3..6a8c31b 100644
--- a/Android.mk
+++ b/Android.mk
@@ -63,6 +63,11 @@ LOCAL_MODULE_CLASS := SHARED_LIBRARIES
 LOCAL_MODULE_OWNER := broadcom
 LOCAL_PROPRIETARY_MODULE := true
 
+ifeq ($(BOARD_HAVE_SAMSUNG_BLUETOOTH),true)
+    LOCAL_CFLAGS += -DSAMSUNG_BLUETOOTH
+    LOCAL_C_INCLUDES += hardware/samsung/macloader/include
+endif
+
 include $(LOCAL_PATH)/vnd_buildcfg.mk
 
 include $(BUILD_SHARED_LIBRARY)
diff --git a/src/hardware.c b/src/hardware.c
index 28847ad..1e748be 100644
--- a/src/hardware.c
+++ b/src/hardware.c
@@ -49,6 +49,9 @@
 #include "userial.h"
 #include "userial_vendor.h"
 #include "upio.h"
+#ifdef SAMSUNG_BLUETOOTH
+#include <samsung_macloader.h>
+#endif
 
 /******************************************************************************
 **  Constants & Macros
@@ -431,6 +434,54 @@ static int hw_strncmp (const char *p_str1, const char *p_str2, const int len)
     return 0;
 }
 
+#ifdef SAMSUNG_BLUETOOTH
+/*******************************************************************************
+**
+** Function         hw_samsung_bluetooth_type
+**
+** Description      Returns the type of bluetooth chip present in samsung
+**                  device.
+**
+** Returns          Returns char* (bluetooth type)
+**
+*******************************************************************************/
+static const char *hw_samsung_bluetooth_type()
+{
+    char buf[10];
+    int fd;
+    ssize_t nread;
+
+    fd = open(CID_PATH, O_RDONLY);
+    if (fd < 0) {
+        ALOGE("Couldn't open file %s for reading", CID_PATH);
+        return NULL;
+    }
+
+    nread = read(fd, buf, sizeof(buf));
+    close(fd);
+    if (nread <= 0) {
+        return NULL;
+    }
+
+    if (strncmp(buf, "murata", 6) == 0)
+        return "murata";
+
+    if (strncmp(buf, "semcove", 7) == 0)
+        return "semcove";
+
+    if (strncmp(buf, "semcosh", 7) == 0)
+        return "semcosh";
+
+    if (strncmp(buf, "semco", 5) == 0)
+        return "semco";
+
+    if (strncmp(buf, "wisol", 5) == 0)
+        return "wisol";
+
+    return NULL;
+}
+#endif
+
 /*******************************************************************************
 **
 ** Function         hw_config_findpatch
@@ -476,9 +527,28 @@ static uint8_t hw_config_findpatch(char *p_chip_id_str)
         while ((dp = readdir(dirp)) != NULL)
         {
             /* Check if filename starts with chip-id name */
-            if ((hw_strncmp(dp->d_name, p_chip_id_str, strlen(p_chip_id_str)) \
-                ) == 0)
+            int cmp;
+
+            cmp = hw_strncmp(dp->d_name, p_chip_id_str, strlen(p_chip_id_str));
+            if (cmp == 0)
             {
+#ifdef SAMSUNG_BLUETOOTH
+                const char *type = hw_samsung_bluetooth_type();
+
+                if (type != NULL) {
+                    const char *needle;
+
+                    BTHWDBG("Looking for Samsung %s patchfile flavour in %s",
+                            type,
+                            dp->d_name);
+
+                    needle = strstr(dp->d_name, type);
+                    if (needle == NULL) {
+                        continue;
+                    }
+                }
+#endif
+
                 /* Check if it has .hcd extenstion */
                 filenamelen = strlen(dp->d_name);
                 if ((filenamelen >= FW_PATCHFILE_EXTENSION_LEN) &&
-- 
2.17.1

