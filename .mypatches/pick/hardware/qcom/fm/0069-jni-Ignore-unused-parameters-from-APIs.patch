From acd7a1604d0d8ec3efea0d7a1cf6ef3bc5f52f71 Mon Sep 17 00:00:00 2001
From: Adrian DC <radian.dc@gmail.com>
Date: Sat, 11 Aug 2018 12:55:07 +0200
Subject: [PATCH 69/74] jni: Ignore unused parameters from APIs

Change-Id: I5d50caf12d65490cc89389ef6fcfeb0425377eba
---
 jni/android_hardware_fm.cpp | 92 ++++++++++++++++++++-----------------
 1 file changed, 51 insertions(+), 41 deletions(-)

diff --git a/jni/android_hardware_fm.cpp b/jni/android_hardware_fm.cpp
index 39110ab..4102cca 100644
--- a/jni/android_hardware_fm.cpp
+++ b/jni/android_hardware_fm.cpp
@@ -388,12 +388,12 @@ void fm_ext_country_code_cb(char *ecc)
 }
 
 
-void rds_grp_cntrs_rsp_cb(char * evt_buffer)
+void rds_grp_cntrs_rsp_cb(char * evt_buffer __unused)
 {
    ALOGD("rds_grp_cntrs_rsp_cb");
 }
 
-void rds_grp_cntrs_ext_rsp_cb(char * evt_buffer)
+void rds_grp_cntrs_ext_rsp_cb(char * evt_buffer __unused)
 {
    ALOGE("rds_grp_cntrs_ext_rsp_cb");
 }
@@ -408,19 +408,19 @@ void fm_disabled_cb()
     mCallbacksObjCreated = false;
 }
 
-void fm_peek_rsp_cb(char *peek_rsp) {
+void fm_peek_rsp_cb(char *peek_rsp __unused) {
     ALOGD("fm_peek_rsp_cb");
 }
 
-void fm_ssbi_peek_rsp_cb(char *ssbi_peek_rsp){
+void fm_ssbi_peek_rsp_cb(char *ssbi_peek_rsp __unused){
     ALOGD("fm_ssbi_peek_rsp_cb");
 }
 
-void fm_agc_gain_rsp_cb(char *agc_gain_rsp){
+void fm_agc_gain_rsp_cb(char *agc_gain_rsp __unused){
     ALOGE("fm_agc_gain_rsp_cb");
 }
 
-void fm_ch_det_th_rsp_cb(char *ch_det_rsp){
+void fm_ch_det_th_rsp_cb(char *ch_det_rsp __unused){
     ALOGD("fm_ch_det_th_rsp_cb");
 }
 
@@ -646,7 +646,7 @@ static   fm_vendor_callbacks_t fm_callbacks = {
 };
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_acquireFdNative
-        (JNIEnv* env, jobject thiz, jstring path)
+        (JNIEnv* env, jobject thiz __unused, jstring path)
 {
     int fd;
     int i, err;
@@ -721,7 +721,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_acquireFdNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_closeFdNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
     char value[PROPERTY_VALUE_MAX] = {'\0'};
 
@@ -754,7 +754,7 @@ static bool is_soc_cherokee() {
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getFreqNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused)
 {
     int err;
     long freq;
@@ -789,7 +789,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_getFreqNative
 
 /*native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_setFreqNative
-    (JNIEnv * env, jobject thiz, jint fd, jint freq)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint freq)
 {
     int err;
     if (is_soc_cherokee())
@@ -817,7 +817,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_setFreqNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_setControlNative
-    (JNIEnv * env, jobject thiz, jint fd, jint id, jint value)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint id,
+    jint value)
 {
     int err;
     ALOGE("id(%x) value: %x\n", id, value);
@@ -845,7 +846,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_setControlNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_SetCalibrationNative
-     (JNIEnv * env, jobject thiz, jint fd, jbyteArray buff)
+     (JNIEnv * env __unused, jobject thiz __unused, jint fd,
+     jbyteArray buff __unused)
 {
 
    int err;
@@ -867,7 +869,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_SetCalibrationNative
 }
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getControlNative
-    (JNIEnv * env, jobject thiz, jint fd, jint id)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint id)
 {
     int err;
     long val;
@@ -905,7 +907,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_getControlNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_startSearchNative
-    (JNIEnv * env, jobject thiz, jint fd, jint dir)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint dir)
 {
     int err;
     if (is_soc_cherokee())
@@ -940,7 +942,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_startSearchNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_cancelSearchNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused)
 {
     int err;
 
@@ -975,7 +977,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_cancelSearchNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getRSSINative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused)
 {
     int err;
     long rmssi;
@@ -1011,7 +1013,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_getRSSINative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_setBandNative
-    (JNIEnv * env, jobject thiz, jint fd, jint low, jint high)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint low,
+    jint high)
 {
     int err;
     if (is_soc_cherokee())
@@ -1052,7 +1055,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setBandNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getLowerBandNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
     int err;
     ULINT freq;
@@ -1088,7 +1091,7 @@ else
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getUpperBandNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
     int err;
     ULINT freq;
@@ -1123,7 +1126,7 @@ else
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_setMonoStereoNative
-    (JNIEnv * env, jobject thiz, jint fd, jint val)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint val)
 {
 
     int err;
@@ -1157,7 +1160,7 @@ else
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getBufferNative
- (JNIEnv * env, jobject thiz, jint fd, jbyteArray buff, jint index)
+    (JNIEnv * env, jobject thiz __unused, jint fd, jbyteArray buff, jint index)
 {
     int err;
     jboolean isCopy;
@@ -1187,7 +1190,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_getBufferNative
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_getRawRdsNative
- (JNIEnv * env, jobject thiz, jint fd, jbooleanArray buff, jint count)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jbooleanArray buff,
+    jint count)
 {
 
     return (read (fd, buff, count));
@@ -1195,7 +1199,9 @@ static jint android_hardware_fmradio_FmReceiverJNI_getRawRdsNative
 }
 
 /* native interface */
-static jint android_hardware_fmradio_FmReceiverJNI_setNotchFilterNative(JNIEnv * env, jobject thiz,jint fd, jint id, jboolean aValue)
+static jint android_hardware_fmradio_FmReceiverJNI_setNotchFilterNative
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint id,
+    jboolean aValue)
 {
     char value[PROPERTY_VALUE_MAX] = {'\0'};
     int init_success = 0,i;
@@ -1261,7 +1267,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_setNotchFilterNative(JNIEnv *
 
 
 /* native interface */
-static jint android_hardware_fmradio_FmReceiverJNI_setAnalogModeNative(JNIEnv * env, jobject thiz, jboolean aValue)
+static jint android_hardware_fmradio_FmReceiverJNI_setAnalogModeNative
+    (JNIEnv * env __unused, jobject thiz __unused, jboolean aValue __unused)
 {
     int i=0;
     char value[PROPERTY_VALUE_MAX] = {'\0'};
@@ -1299,7 +1306,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setAnalogModeNative(JNIEnv *
 
 /*native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_setPTYNative
-    (JNIEnv * env, jobject thiz, jint fd, jint pty)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint pty)
 {
     int masked_pty;
     int err;
@@ -1324,7 +1331,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setPTYNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_setPINative
-    (JNIEnv * env, jobject thiz, jint fd, jint pi)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint pi)
 {
     int err;
     int masked_pi;
@@ -1349,7 +1356,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_setPINative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_startRTNative
-    (JNIEnv * env, jobject thiz, jint fd, jstring radio_text, jint count )
+    (JNIEnv * env, jobject thiz __unused, jint fd, jstring radio_text,
+    jint count __unused)
 {
     ALOGE("->android_hardware_fmradio_FmReceiverJNI_startRTNative\n");
 
@@ -1407,7 +1415,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_startRTNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_stopRTNative
-    (JNIEnv * env, jobject thiz, jint fd )
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
     int err;
 
@@ -1429,7 +1437,8 @@ static jint android_hardware_fmradio_FmReceiverJNI_stopRTNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_startPSNative
-    (JNIEnv * env, jobject thiz, jint fd, jstring buff, jint count )
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd,
+    jstring buff, jint count __unused)
 {
     ALOGD("->android_hardware_fmradio_FmReceiverJNI_startPSNative\n");
 
@@ -1486,7 +1495,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_startPSNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_stopPSNative
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
 
     int err;
@@ -1510,7 +1519,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_stopPSNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_configureSpurTable
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
     int err;
 
@@ -1533,7 +1542,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_configureSpurTable
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_setPSRepeatCountNative
-    (JNIEnv * env, jobject thiz, jint fd, jint repCount)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint repCount)
 {
     int masked_ps_repeat_cnt;
     int err;
@@ -1558,7 +1567,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setPSRepeatCountNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_setTxPowerLevelNative
-    (JNIEnv * env, jobject thiz, jint fd, jint powLevel)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd, jint powLevel)
 {
     int err;
 
@@ -1581,7 +1590,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setTxPowerLevelNative
 }
 
 static void android_hardware_fmradio_FmReceiverJNI_configurePerformanceParams
-    (JNIEnv * env, jobject thiz, jint fd)
+    (JNIEnv * env __unused, jobject thiz __unused, jint fd)
 {
 
      ConfigFmThs thsObj;
@@ -1591,7 +1600,8 @@ static void android_hardware_fmradio_FmReceiverJNI_configurePerformanceParams
 
 /* native interface */
 static jint android_hardware_fmradio_FmReceiverJNI_setSpurDataNative
- (JNIEnv * env, jobject thiz, jint fd, jshortArray buff, jint count)
+    (JNIEnv * env, jobject thiz __unused, jint fd, jshortArray buff,
+    jint count)
 {
     ALOGE("entered JNI's setSpurDataNative\n");
     int err, i = 0;
@@ -1629,7 +1639,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_setSpurDataNative
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_enableSlimbusNative
- (JNIEnv * env, jobject thiz, jint fd, jint val)
+ (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint val)
 {
     ALOGD("%s: val = %d\n", __func__, val);
     int err = JNI_ERR;
@@ -1640,7 +1650,7 @@ if (is_soc_cherokee()) {
 }
 
 static jint android_hardware_fmradio_FmReceiverJNI_enableSoftMuteNative
- (JNIEnv * env, jobject thiz, jint fd, jint val)
+ (JNIEnv * env __unused, jobject thiz __unused, jint fd __unused, jint val)
 {
     ALOGD("%s: val = %d\n", __func__, val);
     int err = JNI_ERR;
@@ -1650,7 +1660,7 @@ if (is_soc_cherokee()) {
     return err;
 }
 
-static void classInitNative(JNIEnv* env, jclass clazz) {
+static void classInitNative(JNIEnv* env __unused, jclass clazz __unused) {
 
     ALOGI("ClassInit native called \n");
     jclass dataClass = env->FindClass("qcom/fmradio/FmReceiverJNI");
@@ -1703,7 +1713,7 @@ error:
     lib_handle = NULL;
 }
 
-static void initNative(JNIEnv *env, jobject object) {
+static void initNative(JNIEnv *env __unused, jobject object __unused) {
 
 if (is_soc_cherokee()) {
     int status;
@@ -1722,7 +1732,7 @@ if (is_soc_cherokee()) {
 }
 }
 
-static void cleanupNative(JNIEnv *env, jobject object) {
+static void cleanupNative(JNIEnv *env __unused, jobject object __unused) {
 
     if (is_soc_cherokee()) {
         if (mCallbacksObj != NULL) {
@@ -1809,7 +1819,7 @@ int register_android_hardware_fm_fmradio(JNIEnv* env)
 }
 } // end namespace
 
-jint JNI_OnLoad(JavaVM *jvm, void *reserved)
+jint JNI_OnLoad(JavaVM *jvm, void *reserved __unused)
 {
     JNIEnv *e;
     int status;
-- 
2.17.1

