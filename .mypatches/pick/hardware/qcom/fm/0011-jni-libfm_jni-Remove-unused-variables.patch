From 9483df8c97b0a616bb86eca95e0528dd33646170 Mon Sep 17 00:00:00 2001
From: Adrian DC <radian.dc@gmail.com>
Date: Fri, 9 Mar 2018 06:56:34 +0100
Subject: [PATCH 11/51] jni/libfm_jni: Remove unused variables

 * libfm_jni/FmPerformanceParams.cpp:
    443:16: error: unused variable 'sinr'

 * libfm_jni/ConfigFmThs.cpp:
    425:17: error: unused variable 'ret'
    433:9: error: unused variable 'value'
    566:9: error: unused variable 'index'

 * libfm_jni/ConfFileParser.cpp:
    328:16: error: unused variable 'num_of_keys'
    536:9: error: unused variable 'grp_name'
    537:16: error: unused variable 'len'
    732:13: error: unused function 'key_exist'

 * libfm_jni/FmRadioController.cpp:
    651:9: error: unused variable 'stationList

 * libfm_jni/FmPerformanceParams.cpp:
    442:16: error: unused variable 'sinr'

Change-Id: I9c4839d1bc8b64c536b8a7db7c2094001f2562ba
---
 jni/ConfFileParser.cpp            | 50 -------------------------------
 jni/ConfigFmThs.cpp               |  3 --
 jni/FmPerformanceParams.cpp       |  1 -
 jni/android_hardware_fm.cpp       | 18 ++++-------
 libfm_jni/ConfFileParser.cpp      | 50 -------------------------------
 libfm_jni/ConfigFmThs.cpp         |  3 --
 libfm_jni/FmPerformanceParams.cpp |  1 -
 libfm_jni/FmRadioController.cpp   |  1 -
 8 files changed, 5 insertions(+), 122 deletions(-)

diff --git a/jni/ConfFileParser.cpp b/jni/ConfFileParser.cpp
index d270690..0a0883a 100644
--- a/jni/ConfFileParser.cpp
+++ b/jni/ConfFileParser.cpp
@@ -322,7 +322,6 @@ char **get_keys
 {
   unsigned int grp_hash_code;
   unsigned int grp_index;
-  unsigned int num_of_keys;
   unsigned int i;
   unsigned int j = 0;
   unsigned int key_len;
@@ -530,8 +529,6 @@ static char parse_line
 )
 {
   const char *line_begin;
-  char *grp_name;
-  unsigned int len;
 
   if((line == NULL) || (key_file == NULL)) {
       ALOGE("key file or line is null\n");
@@ -729,53 +726,6 @@ static char line_is_grp
   }
 }
 
-static char key_exist
-(
-  const group_table *key_file,
-  const char *cur_grp,
-  const char *key
-)
-{
-  unsigned int grp_hash_code;
-  unsigned int key_hash_code;
-  unsigned int grp_index;
-  unsigned int key_index;
-  group *grp = NULL;
-  key_value_pair_list *list = NULL;
-
-  if((key_file != NULL) && (cur_grp != NULL)
-      && (key != NULL) && ((key_file->grps_hash != NULL))
-      && (strcmp(key, ""))) {
-     grp_hash_code = get_hash_code(cur_grp);
-     grp_index = (grp_hash_code % key_file->grps_hash_size);
-     grp = key_file->grps_hash[grp_index];
-     key_hash_code = get_hash_code(key);
-     while((grp != NULL)) {
-           if(!strcmp(cur_grp, grp->grp_name)) {
-              key_index = (key_hash_code % grp->keys_hash_size);
-              if(grp->list)
-                 list = grp->list[key_index];
-              while((list != NULL) && strcmp(key, list->key)) {
-                    list = list->next;
-              }
-              if(list != NULL){
-                  return TRUE;
-              }else{
-                  return FALSE;
-              }
-           }
-           grp = grp->grp_next;
-     }
-     if(!grp) {
-        return TRUE;
-     }else {
-        return FALSE;
-     }
-  }else {
-     return FALSE;
-  }
-}
-
 //checks validity of key
 //a valid key must start in
 //a seperate line and key must
diff --git a/jni/ConfigFmThs.cpp b/jni/ConfigFmThs.cpp
index 3845dfd..10bb921 100644
--- a/jni/ConfigFmThs.cpp
+++ b/jni/ConfigFmThs.cpp
@@ -344,7 +344,6 @@ void ConfigFmThs :: set_hybrd_list
     UINT fd
 )
 {
-    signed char ret = FM_SUCCESS;
     char **keys = NULL;
     char **keys_cpy = NULL;
     char *key_value = NULL;
@@ -352,7 +351,6 @@ void ConfigFmThs :: set_hybrd_list
     unsigned int *freqs_array = NULL;
     signed char *sinrs_array = NULL;
     char *sinrs = NULL;
-    int value;
     unsigned int freq_cnt = 0;
     unsigned int sinr_cnt = 0;
     FmPerformanceParams perf_params;
@@ -485,7 +483,6 @@ void  ConfigFmThs :: SetRxSearchAfThs
     const char *file, UINT fd
 )
 {
-    int index;
     struct NAME_MAP *found;
     char **grps = NULL;
     char **grps_cpy = NULL;
diff --git a/jni/FmPerformanceParams.cpp b/jni/FmPerformanceParams.cpp
index bdd0a43..9d1542f 100644
--- a/jni/FmPerformanceParams.cpp
+++ b/jni/FmPerformanceParams.cpp
@@ -377,7 +377,6 @@ signed char FmPerformanceParams :: SetHybridSrchList
    struct v4l2_ext_control ext_ctl;
    struct v4l2_ext_controls v4l2_ctls;
    unsigned int freq;
-   signed char sinr;
    unsigned int size = 0;
    char *data = NULL;
    signed char ret = FM_FAILURE;
diff --git a/jni/android_hardware_fm.cpp b/jni/android_hardware_fm.cpp
index 182f9ec..d63d416 100644
--- a/jni/android_hardware_fm.cpp
+++ b/jni/android_hardware_fm.cpp
@@ -78,7 +78,6 @@ enum search_dir_t {
     SCAN_DN
 };
 
-static JNIEnv *g_jEnv = NULL;
 static JavaVM *g_jVM = NULL;
 
 namespace android {
@@ -126,7 +125,6 @@ typedef void (*fm_enable_sm_cb) (int status);
 static JNIEnv *mCallbackEnv = NULL;
 static jobject mCallbacksObj = NULL;
 static bool mCallbacksObjCreated = false;
-static jfieldID sCallbacksField;
 
 static jclass javaClassRef;
 static jmethodID method_psInfoCallback;
@@ -271,7 +269,7 @@ void fm_rt_update_cb(char *rt)
 {
     ALOGD("RT_EVT: " );
     jbyteArray rt_buff = NULL;
-    int i,len;
+    int len;
 
     if (!checkCallbackThread())
         return;
@@ -288,7 +286,6 @@ void fm_rt_update_cb(char *rt)
     }
 
     mCallbackEnv->SetByteArrayRegion(rt_buff, 0, len,(jbyte *)rt);
-    jbyte* bytes= mCallbackEnv->GetByteArrayElements(rt_buff,0);
 
     mCallbackEnv->CallVoidMethod(mCallbacksObj, method_rtCallback,rt_buff);
     mCallbackEnv->DeleteLocalRef(rt_buff);
@@ -297,7 +294,7 @@ void fm_rt_update_cb(char *rt)
 void fm_ps_update_cb(char *ps)
 {
     jbyteArray ps_data = NULL;
-    int i,len;
+    int len;
     int numPs;
     if (!checkCallbackThread())
         return;
@@ -313,7 +310,6 @@ void fm_ps_update_cb(char *ps)
     }
 
     mCallbackEnv->SetByteArrayRegion(ps_data, 0, len,(jbyte *)ps);
-    jbyte* bytes= mCallbackEnv->GetByteArrayElements(ps_data,0);
     mCallbackEnv->CallVoidMethod(mCallbacksObj, method_psInfoCallback,ps_data);
     mCallbackEnv->DeleteLocalRef(ps_data);
 }
@@ -348,7 +344,7 @@ void fm_ert_update_cb(char *ert)
 {
     ALOGD("ERT_EVT");
     jbyteArray ert_buff = NULL;
-    int i,len;
+    int len;
 
     if (!checkCallbackThread())
         return;
@@ -373,7 +369,7 @@ void fm_ext_country_code_cb(char *ecc)
 {
     ALOGI("Extended Contry code ");
     jbyteArray ecc_buff = NULL;
-    int i,len;
+    int len;
 
     if (!checkCallbackThread())
         return;
@@ -653,7 +649,7 @@ static jint android_hardware_fmradio_FmReceiverJNI_acquireFdNative
         (JNIEnv* env, jobject thiz, jstring path)
 {
     int fd;
-    int i = 0, retval=0, err;
+    int i = 0, err;
     char value[PROPERTY_VALUE_MAX] = {'\0'};
     char versionStr[40] = {'\0'};
     int init_success = 0;
@@ -727,9 +723,6 @@ static jint android_hardware_fmradio_FmReceiverJNI_acquireFdNative
 static jint android_hardware_fmradio_FmReceiverJNI_closeFdNative
     (JNIEnv * env, jobject thiz, jint fd)
 {
-    int i = 0;
-    int cleanup_success = 0;
-    char retval =0;
     char value[PROPERTY_VALUE_MAX] = {'\0'};
 
     property_get("vendor.bluetooth.soc", value, NULL);
@@ -1274,7 +1267,6 @@ static jint android_hardware_fmradio_FmReceiverJNI_setAnalogModeNative(JNIEnv *
 {
     int i=0;
     char value[PROPERTY_VALUE_MAX] = {'\0'};
-    char firmwareVersion[80];
 
     property_get("vendor.bluetooth.soc", value, NULL);
 
diff --git a/libfm_jni/ConfFileParser.cpp b/libfm_jni/ConfFileParser.cpp
index 00146f6..5897992 100644
--- a/libfm_jni/ConfFileParser.cpp
+++ b/libfm_jni/ConfFileParser.cpp
@@ -325,7 +325,6 @@ char **get_keys
 {
   unsigned int grp_hash_code;
   unsigned int grp_index;
-  unsigned int num_of_keys;
   unsigned int i;
   unsigned int j = 0;
   unsigned int key_len;
@@ -533,8 +532,6 @@ static char parse_line
 )
 {
   const char *line_begin;
-  char *grp_name;
-  unsigned int len;
 
   if((line == NULL) || (key_file == NULL)) {
       ALOGE("key file or line is null\n");
@@ -732,53 +729,6 @@ static char line_is_grp
   }
 }
 
-static char key_exist
-(
-  const group_table *key_file,
-  const char *cur_grp,
-  const char *key
-)
-{
-  unsigned int grp_hash_code;
-  unsigned int key_hash_code;
-  unsigned int grp_index;
-  unsigned int key_index;
-  group *grp = NULL;
-  key_value_pair_list *list = NULL;
-
-  if((key_file != NULL) && (cur_grp != NULL)
-      && (key != NULL) && ((key_file->grps_hash != NULL))
-      && (strcmp(key, ""))) {
-     grp_hash_code = get_hash_code(cur_grp);
-     grp_index = (grp_hash_code % key_file->grps_hash_size);
-     grp = key_file->grps_hash[grp_index];
-     key_hash_code = get_hash_code(key);
-     while((grp != NULL)) {
-           if(!strcmp(cur_grp, grp->grp_name)) {
-              key_index = (key_hash_code % grp->keys_hash_size);
-              if(grp->list)
-                 list = grp->list[key_index];
-              while((list != NULL) && strcmp(key, list->key)) {
-                    list = list->next;
-              }
-              if(list != NULL){
-                  return TRUE;
-              }else{
-                  return FALSE;
-              }
-           }
-           grp = grp->grp_next;
-     }
-     if(!grp) {
-        return TRUE;
-     }else {
-        return FALSE;
-     }
-  }else {
-     return FALSE;
-  }
-}
-
 //checks validity of key
 //a valid key must start in
 //a seperate line and key must
diff --git a/libfm_jni/ConfigFmThs.cpp b/libfm_jni/ConfigFmThs.cpp
index c04ef8a..369a8b4 100644
--- a/libfm_jni/ConfigFmThs.cpp
+++ b/libfm_jni/ConfigFmThs.cpp
@@ -422,7 +422,6 @@ void ConfigFmThs :: set_hybrd_list
     UINT fd
 )
 {
-    signed char ret = FM_SUCCESS;
     char **keys = NULL;
     char **keys_cpy = NULL;
     char *key_value = NULL;
@@ -430,7 +429,6 @@ void ConfigFmThs :: set_hybrd_list
     unsigned int *freqs_array = NULL;
     signed char *sinrs_array = NULL;
     char *sinrs = NULL;
-    int value;
     unsigned int freq_cnt = 0;
     unsigned int sinr_cnt = 0;
     FmPerformanceParams perf_params;
@@ -563,7 +561,6 @@ void  ConfigFmThs :: SetRxSearchAfThs
     const char *file, UINT fd
 )
 {
-    int index;
     struct NAME_MAP *found;
     char **grps = NULL;
     char **grps_cpy = NULL;
diff --git a/libfm_jni/FmPerformanceParams.cpp b/libfm_jni/FmPerformanceParams.cpp
index c5cfe68..828f63c 100644
--- a/libfm_jni/FmPerformanceParams.cpp
+++ b/libfm_jni/FmPerformanceParams.cpp
@@ -440,7 +440,6 @@ signed char FmPerformanceParams :: SetHybridSrchList
    struct v4l2_ext_control ext_ctl;
    struct v4l2_ext_controls v4l2_ctls;
    unsigned int freq;
-   signed char sinr;
    unsigned int size = 0;
    char *data = NULL;
    signed char ret = FM_FAILURE;
diff --git a/libfm_jni/FmRadioController.cpp b/libfm_jni/FmRadioController.cpp
index ca524e7..a002121 100644
--- a/libfm_jni/FmRadioController.cpp
+++ b/libfm_jni/FmRadioController.cpp
@@ -648,7 +648,6 @@ int FmRadioController :: GetStationList
     int ret;
     ULINT lowBand, highBand;
     int station_num = 0;
-    int stationList[FM_RX_SRCHLIST_MAX_STATIONS];
     int tmpFreqByte1=0;
     int tmpFreqByte2=0;
     int freq = 0;
-- 
2.17.1

