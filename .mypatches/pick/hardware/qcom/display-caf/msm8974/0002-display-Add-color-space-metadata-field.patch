From 256db065691b2a8d0d75494c3d4696ba7709260d Mon Sep 17 00:00:00 2001
From: Praveen Chavan <pchavan@codeaurora.org>
Date: Mon, 4 May 2015 07:35:34 -0700
Subject: [PATCH 2/3] display: Add color space metadata field
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Add color space field in gralloc buffer metadata
for buffer producer to propogate color space
information to consumer.

This approach is more flexible in the sense
that gralloc doesn't need to depend on usage
flag to derive color space

Change-Id: I89d5a85f84a6f36dca7c5fc754dc7eb19581169a
Adapted to CAF libqdMetaData, where ColorSpace_t exists
Signed-off-by: D. Andrei Măceș <andrei@unlegacy-android.org>
---
 libqdutils/qdMetaData.cpp | 5 ++++-
 libqdutils/qdMetaData.h   | 4 +++-
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/libqdutils/qdMetaData.cpp b/libqdutils/qdMetaData.cpp
index d454ffc35..a0068299a 100644
--- a/libqdutils/qdMetaData.cpp
+++ b/libqdutils/qdMetaData.cpp
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2013, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2015, The Linux Foundation. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
@@ -82,6 +82,9 @@ int setMetaData(private_handle_t *handle, DispParamType paramType,
         case UPDATE_BUFFER_GEOMETRY:
             memcpy((void *)&data->bufferDim, param, sizeof(BufferDim_t));
             break;
+        case UPDATE_COLOR_SPACE:
+            data->colorSpace = *((ColorSpace_t *)param);
+            break;
         case UPDATE_REFRESH_RATE:
             data->refreshrate = *((uint32_t *)param);
             break;
diff --git a/libqdutils/qdMetaData.h b/libqdutils/qdMetaData.h
index e77cf79f4..4d21aab00 100644
--- a/libqdutils/qdMetaData.h
+++ b/libqdutils/qdMetaData.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2013, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2015, The Linux Foundation. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
@@ -90,6 +90,7 @@ struct MetaData_t {
     struct IGCData_t igcData;
     struct Sharp2Data_t Sharp2Data;
     int64_t timestamp;
+    ColorSpace_t colorSpace;
     int32_t vfmDataBitMap;
     struct VfmData_t vfmData[MAX_VFM_DATA_COUNT];
     uint32_t refreshrate;
@@ -106,6 +107,7 @@ typedef enum {
     UPDATE_BUFFER_GEOMETRY = 0x0080,
     PP_PARAM_VFM_DATA   = 0x0100,
     UPDATE_REFRESH_RATE = 0x0200,
+    UPDATE_COLOR_SPACE  = 0x0400,
 } DispParamType;
 
 int setMetaData(private_handle_t *handle, DispParamType paramType, void *param);
-- 
2.17.0

