From 939bddf0d5574dca540f39e73576d8dbaa37fe34 Mon Sep 17 00:00:00 2001
From: dianlujitao <dianlujitao@lineageos.org>
Date: Thu, 6 Sep 2018 17:45:43 +0800
Subject: [PATCH 4/6] power: sdm660: Support power profiles

Change-Id: I54c92db62599d9bd48e685f770adc2ae72eec4cb
---
 power-660.c | 98 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 98 insertions(+)

diff --git a/power-660.c b/power-660.c
index 0a9ef37..ac1137e 100644
--- a/power-660.c
+++ b/power-660.c
@@ -53,6 +53,92 @@
 
 static int video_encode_hint_sent;
 
+static int current_power_profile = PROFILE_BALANCED;
+
+static int profile_high_performance[] = {
+    ALL_CPUS_PWR_CLPS_DIS_V3, 0x1,
+    SCHED_BOOST_ON_V3, 0x1,
+    SCHED_MOSTLY_IDLE_NR_RUN, 0x1,
+    SCHED_SPILL_NR_RUN, 0x1,
+    SCHED_RESTRICT_CLUSTER_SPILL, 0x0,
+    SCHED_GROUP_DOWN_MIGRATE, 0x5F,
+    SCHED_GROUP_UP_MIGRATE, 0x64,
+    CPUS_ONLINE_MIN_BIG, 0x4,
+    MIN_FREQ_BIG_CORE_0, 0xFFF,
+    MIN_FREQ_LITTLE_CORE_0, 0xFFF,
+};
+
+static int profile_power_save[] = {
+    CPUS_ONLINE_MAX_BIG, 0x2,
+    MAX_FREQ_BIG_CORE_0, 0x0,
+    MAX_FREQ_LITTLE_CORE_0, 0x0,
+};
+
+static int profile_bias_power[] = {
+    CPUS_ONLINE_MAX_BIG, 0x2,
+    MAX_FREQ_BIG_CORE_0_RESIDX, 0x3,
+    MAX_FREQ_LITTLE_CORE_0_RESIDX, 0x1,
+};
+
+static int profile_bias_performance[] = {
+    MIN_FREQ_BIG_CORE_0_RESIDX, 0x3,
+    MIN_FREQ_LITTLE_CORE_0_RESIDX, 0x2,
+};
+
+#ifdef INTERACTION_BOOST
+int get_number_of_profiles()
+{
+    return 5;
+}
+#endif
+
+static int set_power_profile(int profile)
+{
+    int ret = -EINVAL;
+    const char *profile_name = NULL;
+
+    if (profile == current_power_profile)
+        return 0;
+
+    ALOGV("%s: Profile=%d", __func__, profile);
+
+    if (current_power_profile != PROFILE_BALANCED) {
+        undo_hint_action(DEFAULT_PROFILE_HINT_ID);
+        ALOGV("%s: Hint undone", __func__);
+        current_power_profile = PROFILE_BALANCED;
+    }
+
+    if (profile == PROFILE_POWER_SAVE) {
+        ret = perform_hint_action(DEFAULT_PROFILE_HINT_ID, profile_power_save,
+                ARRAY_SIZE(profile_power_save));
+        profile_name = "powersave";
+
+    } else if (profile == PROFILE_HIGH_PERFORMANCE) {
+        ret = perform_hint_action(DEFAULT_PROFILE_HINT_ID,
+                profile_high_performance, ARRAY_SIZE(profile_high_performance));
+        profile_name = "performance";
+
+    } else if (profile == PROFILE_BIAS_POWER) {
+        ret = perform_hint_action(DEFAULT_PROFILE_HINT_ID, profile_bias_power,
+                ARRAY_SIZE(profile_bias_power));
+        profile_name = "bias power";
+
+    } else if (profile == PROFILE_BIAS_PERFORMANCE) {
+        ret = perform_hint_action(DEFAULT_PROFILE_HINT_ID,
+                profile_bias_performance, ARRAY_SIZE(profile_bias_performance));
+        profile_name = "bias perf";
+    } else if (profile == PROFILE_BALANCED) {
+        ret = 0;
+        profile_name = "balanced";
+    }
+
+    if (ret == 0) {
+        current_power_profile = profile;
+        ALOGD("%s: Set %s mode", __func__, profile_name);
+    }
+    return ret;
+}
+
 /**
  * If target is SDM630:
  *     return true
@@ -161,6 +247,18 @@ static void process_video_encode_hint(void *metadata)
 
 int power_hint_override(power_hint_t hint, void *data)
 {
+    if (hint == POWER_HINT_SET_PROFILE) {
+        if (set_power_profile(*(int32_t *)data) < 0)
+            ALOGE("Setting power profile failed. perf HAL not started?");
+        return HINT_HANDLED;
+    }
+
+    // Skip other hints in high/low power modes
+    if (current_power_profile == PROFILE_POWER_SAVE ||
+            current_power_profile == PROFILE_HIGH_PERFORMANCE) {
+        return HINT_HANDLED;
+    }
+
     switch (hint) {
         case POWER_HINT_VSYNC:
             break;
-- 
2.17.1

