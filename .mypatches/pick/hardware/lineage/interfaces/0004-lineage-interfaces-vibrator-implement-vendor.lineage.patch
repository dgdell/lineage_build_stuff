From 08e9644587b4d5115e1cd13828517e700a50eb47 Mon Sep 17 00:00:00 2001
From: Demon Singur <demonsingur@gmail.com>
Date: Sun, 29 Apr 2018 16:28:52 +0000
Subject: [PATCH 04/12] lineage/interfaces: vibrator: implement vendor.lineage
 methods

Change-Id: Ic4490784896ffd6edd4803415267289daaae99dc
---
 vibrator/1.0/default/Android.bp               |  8 +--
 vibrator/1.0/default/Vibrator.cpp             | 52 ++++++++++++++-----
 vibrator/1.0/default/Vibrator.h               | 34 ++++++++----
 vibrator/1.0/default/service.cpp              |  8 +--
 ...=> vendor.lineage.vibrator@1.0-service.rc} |  2 +-
 5 files changed, 73 insertions(+), 31 deletions(-)
 rename vibrator/1.0/default/{android.hardware.vibrator@1.0-service.lineage.rc => vendor.lineage.vibrator@1.0-service.rc} (85%)

diff --git a/vibrator/1.0/default/Android.bp b/vibrator/1.0/default/Android.bp
index 0cf587a..7d76d1d 100644
--- a/vibrator/1.0/default/Android.bp
+++ b/vibrator/1.0/default/Android.bp
@@ -1,5 +1,5 @@
 //
-// Copyright (C) 2017 The LineageOS Project
+// Copyright (C) 2017-2018 The LineageOS Project
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
 // limitations under the License.
 
 cc_binary {
-    name: "android.hardware.vibrator@1.0-service.lineage",
+    name: "vendor.lineage.vibrator@1.0-service",
     relative_install_path: "hw",
-    init_rc: ["android.hardware.vibrator@1.0-service.lineage.rc"],
+    init_rc: ["vendor.lineage.vibrator@1.0-service.rc"],
     srcs: ["service.cpp", "Vibrator.cpp"],
     shared_libs: [
         "libhidlbase",
@@ -26,7 +26,7 @@ cc_binary {
         "libutils",
         "libcutils",
         "libhardware",
-        "android.hardware.vibrator@1.0",
+        "vendor.lineage.vibrator@1.0",
     ],
     proprietary: true,
 }
diff --git a/vibrator/1.0/default/Vibrator.cpp b/vibrator/1.0/default/Vibrator.cpp
index 836b694..eb0e588 100644
--- a/vibrator/1.0/default/Vibrator.cpp
+++ b/vibrator/1.0/default/Vibrator.cpp
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2017 The LineageOS Project
+ * Copyright (C) 2017-2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -24,8 +24,8 @@
 #include <cmath>
 #include <fstream>
 
-namespace android {
-namespace hardware {
+namespace vendor {
+namespace lineage {
 namespace vibrator {
 namespace V1_0 {
 namespace implementation {
@@ -33,6 +33,8 @@ namespace implementation {
 #define VIBRATOR "/sys/devices/virtual/timed_output/vibrator/"
 
 #define ENABLE      "enable"
+
+#define VTG_DEFAULT "vtg_default"
 #define VTG_LEVEL   "vtg_level"
 #define VTG_MIN     "vtg_min"
 #define VTG_MAX     "vtg_max"
@@ -51,6 +53,8 @@ namespace implementation {
 #define DEFAULT_MEDIUM_AMPLITUDE    128
 #define DEFAULT_STRONG_AMPLITUDE    255
 
+namespace {
+
 static int get(std::string path, int defaultValue) {
     int value = defaultValue;
     std::ifstream file(path);
@@ -87,15 +91,21 @@ static int set(std::string path, int value) {
     return 0;
 }
 
+} // anonymous namespace
+
 Vibrator::Vibrator() {
+    defaultVoltage = get(VIBRATOR VTG_DEFAULT, DEFAULT_MAX_VTG);
     minVoltage = get(VIBRATOR VTG_MIN, DEFAULT_MIN_VTG);
     maxVoltage = get(VIBRATOR VTG_MAX, DEFAULT_MAX_VTG);
 
     lightAmplitude = property_get_int32(AMPLITUDE_LIGHT, DEFAULT_LIGHT_AMPLITUDE);
     mediumAmplitude = property_get_int32(AMPLITUDE_MEDIUM, DEFAULT_MEDIUM_AMPLITUDE);
     strongAmplitude = property_get_int32(AMPLITUDE_STRONG, DEFAULT_STRONG_AMPLITUDE);
+
+    defaultIntensity = intensity = 255 * defaultVoltage / maxVoltage;
 }
 
+// Methods from ::android::hardware::vibrator::V1_0::IVibrator follow.
 Return<Status> Vibrator::on(uint32_t timeout_ms) {
     if (set(VIBRATOR ENABLE, timeout_ms)) {
         return Status::UNKNOWN_ERROR;
@@ -116,6 +126,18 @@ Return<bool> Vibrator::supportsAmplitudeControl()  {
     return true;
 }
 
+Return<Status> Vibrator::setVoltage(uint32_t voltage) {
+    uint32_t scaledVoltage = voltage * intensity / 255;
+
+    if (set(VIBRATOR VTG_LEVEL, scaledVoltage)) {
+        return Status::UNKNOWN_ERROR;
+    }
+
+    ALOGI("Voltage set to: %u", voltage);
+
+    return Status::OK;
+}
+
 Return<Status> Vibrator::setAmplitude(uint8_t amplitude) {
     if (amplitude == 0) {
         return Status::BAD_VALUE;
@@ -128,13 +150,7 @@ Return<Status> Vibrator::setAmplitude(uint8_t amplitude) {
     uint32_t voltage =
             std::lround((amplitude - 1) / 254.0 * (maxVoltage - minVoltage) + minVoltage);
 
-    if (set(VIBRATOR VTG_LEVEL, voltage)) {
-        return Status::UNKNOWN_ERROR;
-    }
-
-    ALOGI("Voltage set to: %u", voltage);
-
-    return Status::OK;
+    return setVoltage(voltage);
 }
 
 Return<void> Vibrator::perform(Effect effect, EffectStrength strength, perform_cb _hidl_cb) {
@@ -169,8 +185,18 @@ Return<void> Vibrator::perform(Effect effect, EffectStrength strength, perform_c
     return Void();
 }
 
-} // namespace implementation
+// Methods from IVibrator follow.
+Return<uint8_t> Vibrator::getDefaultIntensity() {
+    return defaultIntensity;
+}
+
+Return<void> Vibrator::setIntensity(uint8_t newIntensity) {
+    intensity = newIntensity;
+    return Void();
+}
+
+}  // namespace implementation
 }  // namespace V1_0
 }  // namespace vibrator
-}  // namespace hardware
-}  // namespace android
+}  // namespace lineage
+}  // namespace vendor
diff --git a/vibrator/1.0/default/Vibrator.h b/vibrator/1.0/default/Vibrator.h
index 273cf6b..874ad1b 100644
--- a/vibrator/1.0/default/Vibrator.h
+++ b/vibrator/1.0/default/Vibrator.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2017 The LineageOS Project
+ * Copyright (C) 2017-2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -13,41 +13,57 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-#ifndef ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
-#define ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
+#ifndef VENDOR_LINEAGE_VIBRATOR_V1_0_VIBRATOR_H
+#define VENDOR_LINEAGE_VIBRATOR_V1_0_VIBRATOR_H
 
-#include <android/hardware/vibrator/1.0/IVibrator.h>
+#include <vendor/lineage/vibrator/1.0/IVibrator.h>
 #include <hidl/Status.h>
 
-namespace android {
-namespace hardware {
+namespace vendor {
+namespace lineage {
 namespace vibrator {
 namespace V1_0 {
 namespace implementation {
 
+using ::android::hardware::Return;
+using ::android::hardware::Void;
+using ::android::hardware::vibrator::V1_0::Status;
+using ::android::hardware::vibrator::V1_0::Effect;
+using ::android::hardware::vibrator::V1_0::EffectStrength;
+
 class Vibrator : public IVibrator {
 public:
   Vibrator();
+  Return<Status> setVoltage(uint32_t voltage);
 
+  // Methods from ::android::hardware::vibrator::V1_0::IVibrator follow.
   Return<Status> on(uint32_t timeoutMs) override;
   Return<Status> off() override;
   Return<bool> supportsAmplitudeControl() override;
   Return<Status> setAmplitude(uint8_t amplitude) override;
   Return<void> perform(Effect effect, EffectStrength strength, perform_cb _hidl_cb) override;
 
+  // Methods from IVibrator follow.
+  Return<uint8_t> getDefaultIntensity() override;
+  Return<void> setIntensity(uint8_t intensity) override;
+
 private:
+  uint32_t defaultVoltage;
   uint32_t minVoltage;
   uint32_t maxVoltage;
 
   uint8_t lightAmplitude;
   uint8_t mediumAmplitude;
   uint8_t strongAmplitude;
+
+  uint8_t defaultIntensity;
+  uint8_t intensity;
 };
 
 }  // namespace implementation
 }  // namespace V1_0
 }  // namespace vibrator
-}  // namespace hardware
-}  // namespace android
+}  // namespace lineage
+}  // namespace vendor
 
-#endif  // ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
+#endif  // VENDOR_LINEAGE_VIBRATOR_V1_0_VIBRATOR_H
diff --git a/vibrator/1.0/default/service.cpp b/vibrator/1.0/default/service.cpp
index 9772726..28f2c04 100644
--- a/vibrator/1.0/default/service.cpp
+++ b/vibrator/1.0/default/service.cpp
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2017 The LineageOS Project
+ * Copyright (C) 2017-2018 The LineageOS Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-#define LOG_TAG "android.hardware.vibrator@1.0-service.lineage"
+#define LOG_TAG "vendor.lineage.vibrator@1.0-service.lineage"
 
 #include <hidl/HidlTransportSupport.h>
 
@@ -22,8 +22,8 @@
 using android::hardware::configureRpcThreadpool;
 using android::hardware::joinRpcThreadpool;
 
-using android::hardware::vibrator::V1_0::IVibrator;
-using android::hardware::vibrator::V1_0::implementation::Vibrator;
+using vendor::lineage::vibrator::V1_0::IVibrator;
+using vendor::lineage::vibrator::V1_0::implementation::Vibrator;
 
 using android::OK;
 using android::sp;
diff --git a/vibrator/1.0/default/android.hardware.vibrator@1.0-service.lineage.rc b/vibrator/1.0/default/vendor.lineage.vibrator@1.0-service.rc
similarity index 85%
rename from vibrator/1.0/default/android.hardware.vibrator@1.0-service.lineage.rc
rename to vibrator/1.0/default/vendor.lineage.vibrator@1.0-service.rc
index 5cbf4b4..4cf8dff 100644
--- a/vibrator/1.0/default/android.hardware.vibrator@1.0-service.lineage.rc
+++ b/vibrator/1.0/default/vendor.lineage.vibrator@1.0-service.rc
@@ -6,7 +6,7 @@ on early-boot
     chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_max
     chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_min
 
-service vibrator-1-0 /vendor/bin/hw/android.hardware.vibrator@1.0-service.lineage
+service vibrator-1-0 /vendor/bin/hw/vendor.lineage.vibrator@1.0-service
     class hal
     user system
     group system
-- 
2.17.1

