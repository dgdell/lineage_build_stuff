From b426bc442a7c29a18420e3ad36eebea8881d231c Mon Sep 17 00:00:00 2001
From: Bruno Martins <bgcngm@gmail.com>
Date: Mon, 19 Mar 2018 10:32:41 +0000
Subject: [PATCH 1/2] vibrator: Implement new 1.1 HAL function

 * This adds new perform_1_1 function for supporting tick effect.

Change-Id: I5c8094e39aeef0b533fb8ae7412dfdf02ba83984
---
 vibrator/1.0-lineage/Android.bp                    |  31 ----
 vibrator/1.0-lineage/Vibrator.cpp                  | 162 ------------------
 vibrator/1.0-lineage/Vibrator.h                    |  49 ------
 ...ndroid.hardware.vibrator@1.0-service.lineage.rc |  12 --
 vibrator/1.0-lineage/service.cpp                   |  49 ------
 vibrator/1.1-lineage/Android.bp                    |  32 ++++
 vibrator/1.1-lineage/Vibrator.cpp                  | 182 +++++++++++++++++++++
 vibrator/1.1-lineage/Vibrator.h                    |  57 +++++++
 ...ndroid.hardware.vibrator@1.1-service.lineage.rc |  12 ++
 vibrator/1.1-lineage/service.cpp                   |  49 ++++++
 vibrator/Android.bp                                |   2 +-
 11 files changed, 333 insertions(+), 304 deletions(-)
 delete mode 100644 vibrator/1.0-lineage/Android.bp
 delete mode 100644 vibrator/1.0-lineage/Vibrator.cpp
 delete mode 100644 vibrator/1.0-lineage/Vibrator.h
 delete mode 100644 vibrator/1.0-lineage/android.hardware.vibrator@1.0-service.lineage.rc
 delete mode 100644 vibrator/1.0-lineage/service.cpp
 create mode 100644 vibrator/1.1-lineage/Android.bp
 create mode 100644 vibrator/1.1-lineage/Vibrator.cpp
 create mode 100644 vibrator/1.1-lineage/Vibrator.h
 create mode 100644 vibrator/1.1-lineage/android.hardware.vibrator@1.1-service.lineage.rc
 create mode 100644 vibrator/1.1-lineage/service.cpp

diff --git a/vibrator/1.0-lineage/Android.bp b/vibrator/1.0-lineage/Android.bp
deleted file mode 100644
index 2151e68..0000000
--- a/vibrator/1.0-lineage/Android.bp
+++ /dev/null
@@ -1,31 +0,0 @@
-//
-// Copyright (C) 2017 The LineageOS Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-cc_binary {
-    name: "android.hardware.vibrator@1.0-service.lineage",
-    relative_install_path: "hw",
-    init_rc: ["android.hardware.vibrator@1.0-service.lineage.rc"],
-    srcs: ["service.cpp", "Vibrator.cpp"],
-    shared_libs: [
-        "libhidlbase",
-        "libhidltransport",
-        "liblog",
-        "libhwbinder",
-        "libutils",
-        "libhardware",
-        "android.hardware.vibrator@1.0",
-    ],
-    proprietary: true,
-}
diff --git a/vibrator/1.0-lineage/Vibrator.cpp b/vibrator/1.0-lineage/Vibrator.cpp
deleted file mode 100644
index 50ca82e..0000000
--- a/vibrator/1.0-lineage/Vibrator.cpp
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright (C) 2017 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#define LOG_TAG "VibratorService"
-
-#include <log/log.h>
-
-#include "Vibrator.h"
-
-#include <cmath>
-#include <fstream>
-
-namespace android {
-namespace hardware {
-namespace vibrator {
-namespace V1_0 {
-namespace implementation {
-
-#define VIBRATOR "/sys/devices/virtual/timed_output/vibrator/"
-
-#define ENABLE      "enable"
-#define VTG_LEVEL   "vtg_level"
-#define VTG_MIN     "vtg_min"
-#define VTG_MAX     "vtg_max"
-
-#define CLICK_TIMING_MS 20
-
-#define DEFAULT_MIN_VTG 0
-#define DEFAULT_MAX_VTG 255
-
-static int get(std::string path, int defaultValue) {
-    int value = defaultValue;
-    std::ifstream file(path);
-
-    if (!file) {
-        ALOGE("Failed to open %s", path.c_str());
-        return value;
-    }
-
-    file >> value;
-
-    if (!file) {
-        ALOGE("Failed to read value from %s", path.c_str());
-    }
-
-    return value;
-}
-
-static int set(std::string path, int value) {
-    std::ofstream file(path);
-
-    if (!file) {
-        ALOGE("Failed to open %s", path.c_str());
-        return -1;
-    }
-
-    file << value;
-
-    if (!file) {
-        ALOGE("Failed to write %d to %s", value, path.c_str());
-        return -1;
-    }
-
-    return 0;
-}
-
-Vibrator::Vibrator() {
-    minVoltage = get(VIBRATOR VTG_MIN, DEFAULT_MIN_VTG);
-    maxVoltage = get(VIBRATOR VTG_MAX, DEFAULT_MAX_VTG);
-}
-
-Return<Status> Vibrator::on(uint32_t timeout_ms) {
-    if (set(VIBRATOR ENABLE, timeout_ms)) {
-        return Status::UNKNOWN_ERROR;
-    }
-
-    return Status::OK;
-}
-
-Return<Status> Vibrator::off()  {
-    if (set(VIBRATOR ENABLE, 0)) {
-        return Status::UNKNOWN_ERROR;
-    }
-
-    return Status::OK;
-}
-
-Return<bool> Vibrator::supportsAmplitudeControl()  {
-    return true;
-}
-
-Return<Status> Vibrator::setAmplitude(uint8_t amplitude) {
-    if (amplitude == 0) {
-        return Status::BAD_VALUE;
-    }
-
-    /*
-     * Scale the voltage such that an amplitude of 1 is minVoltage
-     * and an amplitude of 255 is maxVoltage.
-     */
-    uint32_t voltage =
-            std::lround((amplitude - 1) / 254.0 * (maxVoltage - minVoltage) + minVoltage);
-
-    if (set(VIBRATOR VTG_LEVEL, voltage)) {
-        return Status::UNKNOWN_ERROR;
-    }
-
-    ALOGI("Voltage set to: %u", voltage);
-
-    return Status::OK;
-}
-
-Return<void> Vibrator::perform(Effect effect, EffectStrength strength, perform_cb _hidl_cb) {
-    switch (effect) {
-    case Effect::CLICK:
-        uint8_t amplitude;
-
-        switch (strength) {
-        case EffectStrength::LIGHT:
-            amplitude = 36;
-            break;
-        case EffectStrength::MEDIUM:
-            amplitude = 128;
-            break;
-        case EffectStrength::STRONG:
-            amplitude = 255;
-            break;
-        default:
-            _hidl_cb(Status::UNSUPPORTED_OPERATION, 0);
-            return Void();
-        }
-
-        on(CLICK_TIMING_MS);
-        setAmplitude(amplitude);
-        _hidl_cb(Status::OK, CLICK_TIMING_MS);
-        break;
-    default:
-        _hidl_cb(Status::UNSUPPORTED_OPERATION, 0);
-        break;
-    }
-
-    return Void();
-}
-
-} // namespace implementation
-}  // namespace V1_0
-}  // namespace vibrator
-}  // namespace hardware
-}  // namespace android
diff --git a/vibrator/1.0-lineage/Vibrator.h b/vibrator/1.0-lineage/Vibrator.h
deleted file mode 100644
index 7624917..0000000
--- a/vibrator/1.0-lineage/Vibrator.h
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (C) 2017 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#ifndef ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
-#define ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
-
-#include <android/hardware/vibrator/1.0/IVibrator.h>
-#include <hidl/Status.h>
-
-namespace android {
-namespace hardware {
-namespace vibrator {
-namespace V1_0 {
-namespace implementation {
-
-class Vibrator : public IVibrator {
-public:
-  Vibrator();
-
-  Return<Status> on(uint32_t timeoutMs) override;
-  Return<Status> off() override;
-  Return<bool> supportsAmplitudeControl() override;
-  Return<Status> setAmplitude(uint8_t amplitude) override;
-  Return<void> perform(Effect effect, EffectStrength strength, perform_cb _hidl_cb) override;
-
-private:
-  uint32_t minVoltage;
-  uint32_t maxVoltage;
-};
-
-}  // namespace implementation
-}  // namespace V1_0
-}  // namespace vibrator
-}  // namespace hardware
-}  // namespace android
-
-#endif  // ANDROID_HARDWARE_VIBRATOR_V1_0_VIBRATOR_H
diff --git a/vibrator/1.0-lineage/android.hardware.vibrator@1.0-service.lineage.rc b/vibrator/1.0-lineage/android.hardware.vibrator@1.0-service.lineage.rc
deleted file mode 100644
index 5cbf4b4..0000000
--- a/vibrator/1.0-lineage/android.hardware.vibrator@1.0-service.lineage.rc
+++ /dev/null
@@ -1,12 +0,0 @@
-on early-boot
-    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_level
-    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_max
-    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_min
-    chmod 0644 /sys/devices/virtual/timed_output/vibrator/vtg_level
-    chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_max
-    chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_min
-
-service vibrator-1-0 /vendor/bin/hw/android.hardware.vibrator@1.0-service.lineage
-    class hal
-    user system
-    group system
diff --git a/vibrator/1.0-lineage/service.cpp b/vibrator/1.0-lineage/service.cpp
deleted file mode 100644
index 9772726..0000000
--- a/vibrator/1.0-lineage/service.cpp
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (C) 2017 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#define LOG_TAG "android.hardware.vibrator@1.0-service.lineage"
-
-#include <hidl/HidlTransportSupport.h>
-
-#include "Vibrator.h"
-
-using android::hardware::configureRpcThreadpool;
-using android::hardware::joinRpcThreadpool;
-
-using android::hardware::vibrator::V1_0::IVibrator;
-using android::hardware::vibrator::V1_0::implementation::Vibrator;
-
-using android::OK;
-using android::sp;
-using android::status_t;
-
-int main() {
-    android::sp<IVibrator> vibrator = new Vibrator();
-
-    configureRpcThreadpool(1, true);
-
-    status_t status = vibrator->registerAsService();
-    if (status != OK) {
-        ALOGE("Cannot register Vibrator HAL service.");
-        return 1;
-    }
-
-    ALOGI("Vibrator HAL service ready.");
-
-    joinRpcThreadpool();
-
-    ALOGI("Vibrator HAL service failed to join thread pool.");
-    return 1;
-}
diff --git a/vibrator/1.1-lineage/Android.bp b/vibrator/1.1-lineage/Android.bp
new file mode 100644
index 0000000..25d1db2
--- /dev/null
+++ b/vibrator/1.1-lineage/Android.bp
@@ -0,0 +1,32 @@
+//
+// Copyright (C) 2017-2018 The LineageOS Project
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+cc_binary {
+    name: "android.hardware.vibrator@1.1-service.lineage",
+    relative_install_path: "hw",
+    init_rc: ["android.hardware.vibrator@1.1-service.lineage.rc"],
+    srcs: ["service.cpp", "Vibrator.cpp"],
+    shared_libs: [
+        "libhidlbase",
+        "libhidltransport",
+        "liblog",
+        "libhwbinder",
+        "libutils",
+        "libhardware",
+        "android.hardware.vibrator@1.0",
+        "android.hardware.vibrator@1.1",
+    ],
+    proprietary: true,
+}
diff --git a/vibrator/1.1-lineage/Vibrator.cpp b/vibrator/1.1-lineage/Vibrator.cpp
new file mode 100644
index 0000000..44a030e
--- /dev/null
+++ b/vibrator/1.1-lineage/Vibrator.cpp
@@ -0,0 +1,182 @@
+/*
+ * Copyright (C) 2017-2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#define LOG_TAG "VibratorService"
+
+#include <log/log.h>
+
+#include "Vibrator.h"
+
+#include <cmath>
+#include <fstream>
+
+namespace android {
+namespace hardware {
+namespace vibrator {
+namespace V1_1 {
+namespace implementation {
+
+#define VIBRATOR "/sys/devices/virtual/timed_output/vibrator/"
+
+#define ENABLE      "enable"
+#define VTG_LEVEL   "vtg_level"
+#define VTG_MIN     "vtg_min"
+#define VTG_MAX     "vtg_max"
+
+#define CLICK_TIMING_MS 40
+#define TICK_TIMING_MS 20
+
+#define DEFAULT_MIN_VTG 0
+#define DEFAULT_MAX_VTG 255
+
+using Status = ::android::hardware::vibrator::V1_0::Status;
+using EffectStrength = ::android::hardware::vibrator::V1_0::EffectStrength;
+
+static int get(std::string path, int defaultValue) {
+    int value = defaultValue;
+    std::ifstream file(path);
+
+    if (!file) {
+        ALOGE("Failed to open %s", path.c_str());
+        return value;
+    }
+
+    file >> value;
+
+    if (!file) {
+        ALOGE("Failed to read value from %s", path.c_str());
+    }
+
+    return value;
+}
+
+static int set(std::string path, int value) {
+    std::ofstream file(path);
+
+    if (!file) {
+        ALOGE("Failed to open %s", path.c_str());
+        return -1;
+    }
+
+    file << value;
+
+    if (!file) {
+        ALOGE("Failed to write %d to %s", value, path.c_str());
+        return -1;
+    }
+
+    return 0;
+}
+
+Vibrator::Vibrator() {
+    minVoltage = get(VIBRATOR VTG_MIN, DEFAULT_MIN_VTG);
+    maxVoltage = get(VIBRATOR VTG_MAX, DEFAULT_MAX_VTG);
+}
+
+// Methods from ::android::hardware::vibrator::V1_0::IVibrator follow.
+Return<Status> Vibrator::on(uint32_t timeout_ms) {
+    if (set(VIBRATOR ENABLE, timeout_ms)) {
+        return Status::UNKNOWN_ERROR;
+    }
+
+    return Status::OK;
+}
+
+Return<Status> Vibrator::off()  {
+    if (set(VIBRATOR ENABLE, 0)) {
+        return Status::UNKNOWN_ERROR;
+    }
+
+    return Status::OK;
+}
+
+Return<bool> Vibrator::supportsAmplitudeControl()  {
+    return true;
+}
+
+Return<Status> Vibrator::setAmplitude(uint8_t amplitude) {
+    if (amplitude == 0) {
+        return Status::BAD_VALUE;
+    }
+
+    /*
+     * Scale the voltage such that an amplitude of 1 is minVoltage
+     * and an amplitude of 255 is maxVoltage.
+     */
+    uint32_t voltage =
+            std::lround((amplitude - 1) / 254.0 * (maxVoltage - minVoltage) + minVoltage);
+
+    if (set(VIBRATOR VTG_LEVEL, voltage)) {
+        return Status::UNKNOWN_ERROR;
+    }
+
+    ALOGI("Voltage set to: %u", voltage);
+
+    return Status::OK;
+}
+
+static uint8_t convertEffectStrength(EffectStrength strength) {
+    uint8_t amplitude;
+
+    switch (strength) {
+    case EffectStrength::LIGHT:
+        amplitude = 36;
+        break;
+    case EffectStrength::MEDIUM:
+        amplitude = 128;
+        break;
+    default:
+    case EffectStrength::STRONG:
+        amplitude = 255;
+        break;
+    }
+
+    return amplitude;
+}
+
+Return<void> Vibrator::perform(Effect effect, EffectStrength strength,
+        perform_cb _hidl_cb) {
+    if (effect == Effect::CLICK) {
+        on(CLICK_TIMING_MS);
+        setAmplitude(convertEffectStrength(strength));
+        _hidl_cb(Status::OK, CLICK_TIMING_MS);
+    } else {
+        _hidl_cb(Status::UNSUPPORTED_OPERATION, 0);
+    }
+    return Void();
+}
+
+// Methods from ::android::hardware::vibrator::V1_1::IVibrator follow.
+Return<void> Vibrator::perform_1_1(Effect_1_1 effect, EffectStrength strength,
+        perform_cb _hidl_cb) {
+    if (effect == Effect_1_1::TICK) {
+        on(TICK_TIMING_MS);
+        setAmplitude(convertEffectStrength(strength));
+        _hidl_cb(Status::OK, TICK_TIMING_MS);
+        return Void();
+    } else if (effect < Effect_1_1::TICK) {
+        return perform(static_cast<Effect>(effect), strength, _hidl_cb);
+    } else {
+        _hidl_cb(Status::UNSUPPORTED_OPERATION, 0);
+        return Void();
+    }
+}
+
+}  // namespace implementation
+}  // namespace V1_1
+}  // namespace vibrator
+}  // namespace hardware
+}  // namespace android
diff --git a/vibrator/1.1-lineage/Vibrator.h b/vibrator/1.1-lineage/Vibrator.h
new file mode 100644
index 0000000..bb1f2ad
--- /dev/null
+++ b/vibrator/1.1-lineage/Vibrator.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2017-2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#ifndef ANDROID_HARDWARE_VIBRATOR_V1_1_VIBRATOR_H
+#define ANDROID_HARDWARE_VIBRATOR_V1_1_VIBRATOR_H
+
+#include <android/hardware/vibrator/1.1/IVibrator.h>
+#include <hidl/Status.h>
+
+namespace android {
+namespace hardware {
+namespace vibrator {
+namespace V1_1 {
+namespace implementation {
+
+class Vibrator : public IVibrator {
+public:
+  Vibrator();
+
+  // Methods from ::android::hardware::vibrator::V1_0::IVibrator follow.
+  using Status = ::android::hardware::vibrator::V1_0::Status;
+  Return<Status> on(uint32_t timeoutMs) override;
+  Return<Status> off() override;
+  Return<bool> supportsAmplitudeControl() override;
+  Return<Status> setAmplitude(uint8_t amplitude) override;
+
+  using EffectStrength = ::android::hardware::vibrator::V1_0::EffectStrength;
+  using Effect = ::android::hardware::vibrator::V1_0::Effect;
+  Return<void> perform(Effect effect, EffectStrength strength, perform_cb _hidl_cb) override;
+
+  // Methods from ::android::hardware::vibrator::V1_0::IVibrator follow.
+  Return<void> perform_1_1(Effect_1_1 effect, EffectStrength strength, perform_cb _hidl_cb) override;
+
+private:
+  uint32_t minVoltage;
+  uint32_t maxVoltage;
+};
+
+}  // namespace implementation
+}  // namespace V1_1
+}  // namespace vibrator
+}  // namespace hardware
+}  // namespace android
+
+#endif  // ANDROID_HARDWARE_VIBRATOR_V1_1_VIBRATOR_H
diff --git a/vibrator/1.1-lineage/android.hardware.vibrator@1.1-service.lineage.rc b/vibrator/1.1-lineage/android.hardware.vibrator@1.1-service.lineage.rc
new file mode 100644
index 0000000..5fd3c64
--- /dev/null
+++ b/vibrator/1.1-lineage/android.hardware.vibrator@1.1-service.lineage.rc
@@ -0,0 +1,12 @@
+on early-boot
+    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_level
+    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_max
+    chown system system /sys/devices/virtual/timed_output/vibrator/vtg_min
+    chmod 0644 /sys/devices/virtual/timed_output/vibrator/vtg_level
+    chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_max
+    chmod 0444 /sys/devices/virtual/timed_output/vibrator/vtg_min
+
+service vibrator-1-1 /vendor/bin/hw/android.hardware.vibrator@1.1-service.lineage
+    class hal
+    user system
+    group system
diff --git a/vibrator/1.1-lineage/service.cpp b/vibrator/1.1-lineage/service.cpp
new file mode 100644
index 0000000..3901785
--- /dev/null
+++ b/vibrator/1.1-lineage/service.cpp
@@ -0,0 +1,49 @@
+/*
+ * Copyright (C) 2017-2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#define LOG_TAG "android.hardware.vibrator@1.1-service.lineage"
+
+#include <hidl/HidlTransportSupport.h>
+
+#include "Vibrator.h"
+
+using android::hardware::configureRpcThreadpool;
+using android::hardware::joinRpcThreadpool;
+
+using android::hardware::vibrator::V1_1::IVibrator;
+using android::hardware::vibrator::V1_1::implementation::Vibrator;
+
+using android::OK;
+using android::sp;
+using android::status_t;
+
+int main() {
+    android::sp<IVibrator> vibrator = new Vibrator();
+
+    configureRpcThreadpool(1, true);
+
+    status_t status = vibrator->registerAsService();
+    if (status != OK) {
+        ALOGE("Cannot register Vibrator HAL service.");
+        return 1;
+    }
+
+    ALOGI("Vibrator HAL service ready.");
+
+    joinRpcThreadpool();
+
+    ALOGI("Vibrator HAL service failed to join thread pool.");
+    return 1;
+}
diff --git a/vibrator/Android.bp b/vibrator/Android.bp
index 8dbb698..3a5762e 100644
--- a/vibrator/Android.bp
+++ b/vibrator/Android.bp
@@ -1,4 +1,4 @@
 // This is an autogenerated file, do not edit.
 subdirs = [
-    "1.0-lineage",
+    "1.1-lineage",
 ]
-- 
2.7.4

