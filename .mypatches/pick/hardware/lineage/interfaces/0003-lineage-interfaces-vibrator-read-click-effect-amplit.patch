From a0bbe7dc9803373ba223788f5c793b0bb75cd1da Mon Sep 17 00:00:00 2001
From: Demon Singur <demonsingur@gmail.com>
Date: Sun, 29 Apr 2018 19:13:04 +0000
Subject: [PATCH 3/9] lineage/interfaces: vibrator: read click effect amplitude
 from prop

To allow maintainers to customize those with ease.

Change-Id: I845a09ede5f426d91ecacea6291581f718c904c9
---
 vibrator/1.0/default/Android.bp   |  1 +
 vibrator/1.0/default/Vibrator.cpp | 20 +++++++++++++++++---
 vibrator/1.0/default/Vibrator.h   |  4 ++++
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/vibrator/1.0/default/Android.bp b/vibrator/1.0/default/Android.bp
index 2151e68..0cf587a 100644
--- a/vibrator/1.0/default/Android.bp
+++ b/vibrator/1.0/default/Android.bp
@@ -24,6 +24,7 @@ cc_binary {
         "liblog",
         "libhwbinder",
         "libutils",
+        "libcutils",
         "libhardware",
         "android.hardware.vibrator@1.0",
     ],
diff --git a/vibrator/1.0/default/Vibrator.cpp b/vibrator/1.0/default/Vibrator.cpp
index 50ca82e..adf70eb 100644
--- a/vibrator/1.0/default/Vibrator.cpp
+++ b/vibrator/1.0/default/Vibrator.cpp
@@ -16,6 +16,7 @@
 
 #define LOG_TAG "VibratorService"
 
+#include <cutils/properties.h>
 #include <log/log.h>
 
 #include "Vibrator.h"
@@ -41,6 +42,15 @@ namespace implementation {
 #define DEFAULT_MIN_VTG 0
 #define DEFAULT_MAX_VTG 255
 
+#define AMPLITUDE "vendor.lineage.vibrator.amplitude."
+#define AMPLITUDE_LIGHT    AMPLITUDE"light"
+#define AMPLITUDE_MEDIUM   AMPLITUDE"medium"
+#define AMPLITUDE_STRONG   AMPLITUDE"strong"
+
+#define DEFAULT_LIGHT_AMPLITUDE     36
+#define DEFAULT_MEDIUM_AMPLITUDE    128
+#define DEFAULT_STRONG_AMPLITUDE    256
+
 static int get(std::string path, int defaultValue) {
     int value = defaultValue;
     std::ifstream file(path);
@@ -80,6 +90,10 @@ static int set(std::string path, int value) {
 Vibrator::Vibrator() {
     minVoltage = get(VIBRATOR VTG_MIN, DEFAULT_MIN_VTG);
     maxVoltage = get(VIBRATOR VTG_MAX, DEFAULT_MAX_VTG);
+
+    lightAmplitude = property_get_int32(AMPLITUDE_LIGHT, DEFAULT_LIGHT_AMPLITUDE);
+    mediumAmplitude = property_get_int32(AMPLITUDE_MEDIUM, DEFAULT_MEDIUM_AMPLITUDE);
+    strongAmplitude = property_get_int32(AMPLITUDE_STRONG, DEFAULT_STRONG_AMPLITUDE);
 }
 
 Return<Status> Vibrator::on(uint32_t timeout_ms) {
@@ -130,13 +144,13 @@ Return<void> Vibrator::perform(Effect effect, EffectStrength strength, perform_c
 
         switch (strength) {
         case EffectStrength::LIGHT:
-            amplitude = 36;
+            amplitude = lightAmplitude;
             break;
         case EffectStrength::MEDIUM:
-            amplitude = 128;
+            amplitude = mediumAmplitude;
             break;
         case EffectStrength::STRONG:
-            amplitude = 255;
+            amplitude = strongAmplitude;
             break;
         default:
             _hidl_cb(Status::UNSUPPORTED_OPERATION, 0);
diff --git a/vibrator/1.0/default/Vibrator.h b/vibrator/1.0/default/Vibrator.h
index 7624917..273cf6b 100644
--- a/vibrator/1.0/default/Vibrator.h
+++ b/vibrator/1.0/default/Vibrator.h
@@ -38,6 +38,10 @@ public:
 private:
   uint32_t minVoltage;
   uint32_t maxVoltage;
+
+  uint8_t lightAmplitude;
+  uint8_t mediumAmplitude;
+  uint8_t strongAmplitude;
 };
 
 }  // namespace implementation
-- 
2.17.1

