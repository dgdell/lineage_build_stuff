From 8e54cd40a89d558a236cb691f05a5dad3a13b713 Mon Sep 17 00:00:00 2001
From: Ioana Ciornei <ciorneiioana@gmail.com>
Date: Thu, 30 Aug 2018 00:09:16 +0300
Subject: [PATCH 7/9] [DNM] lineage-sdk: add ContainerManagerService

Change-Id: I6c68ea31229244582327af90bec280a2b81724b6
Signed-off-by: Ioana Ciornei <ciorneiioana@gmail.com>
---
 .../internal/ContainerManagerService.java     | 63 +++++++++++++
 lineage/res/AndroidManifest.xml               |  7 ++
 lineage/res/res/values/config.xml             |  1 +
 .../java/lineageos/app/ContainerManager.java  | 94 +++++++++++++++++++
 .../java/lineageos/app/IContainerManager.aidl |  6 ++
 .../app/LineageContextConstants.java          | 17 ++++
 6 files changed, 188 insertions(+)
 create mode 100644 lineage/lib/main/java/org/lineageos/platform/internal/ContainerManagerService.java
 create mode 100644 sdk/src/java/lineageos/app/ContainerManager.java
 create mode 100644 sdk/src/java/lineageos/app/IContainerManager.aidl

diff --git a/lineage/lib/main/java/org/lineageos/platform/internal/ContainerManagerService.java b/lineage/lib/main/java/org/lineageos/platform/internal/ContainerManagerService.java
new file mode 100644
index 0000000..26d7089
--- /dev/null
+++ b/lineage/lib/main/java/org/lineageos/platform/internal/ContainerManagerService.java
@@ -0,0 +1,63 @@
+package org.lineageos.platform.internal;
+
+import com.android.server.SystemService;
+
+import android.content.Context;
+import android.os.IBinder;
+import android.util.Log;
+
+import java.util.List;
+
+import lineageos.app.LineageContextConstants;
+import lineageos.platform.Manifest;
+
+import lineageos.app.ContainerManager;
+import lineageos.app.IContainerManager;
+
+/**
+ * Internal service which manages interactions with the phone and data connection
+ *
+ * @hide
+ */
+public class ContainerManagerService extends LineageSystemService {
+    private static final String TAG = "ContainerManagerSrv";
+    private static boolean localLOGD = Log.isLoggable(TAG, Log.DEBUG);
+
+    private Context mContext;
+    private final IBinder mService = new IContainerManager.Stub() {
+
+        @Override
+        public void sayHelloTo(String msg) {
+            enforceContainerSayHelloPermission();
+            ContainerManagerService.this.sayHelloTo(msg);
+        }
+    };
+
+    public ContainerManagerService(Context context) {
+        super(context);
+        mContext = context;
+    }
+
+    @Override
+    public String getFeatureDeclaration() {
+        return LineageContextConstants.Features.CONTAINERS;
+    }
+
+    @Override
+    public void onStart() {
+        if (localLOGD) {
+            Log.d(TAG, "Container Manager Service start: " + this);
+        }
+        publishBinderService(LineageContextConstants.LINEAGE_CONTAINER_MANAGER_SERVICE, mService);
+    }
+
+    private void sayHelloTo(String msg) {
+        Log.e(TAG, "ContainerManagerService: Say hello to " + msg + "!");
+    }
+
+    private void enforceContainerSayHelloPermission() {
+        mContext.enforceCallingOrSelfPermission(
+                Manifest.permission.CONTAINER_SAY_HELLO,
+                "ContainerManagerService");
+    }
+}
diff --git a/lineage/res/AndroidManifest.xml b/lineage/res/AndroidManifest.xml
index aa4e0f5..e2c118b 100644
--- a/lineage/res/AndroidManifest.xml
+++ b/lineage/res/AndroidManifest.xml
@@ -131,6 +131,13 @@
                 android:icon="@drawable/ic_trust"
                 android:protectionLevel="signature|privileged" />
 
+    <!-- Allows a 3rd party to make the ContainerService say hello TODO -->
+    <permission android:name="lineageos.permission.CONTAINER_SAY_HELLO"
+                android:label="@string/permlab_trustInterface"
+                android:description="@string/permdesc_trustInterface"
+                android:icon="@drawable/ic_launcher_lineageos"
+                android:protectionLevel="normal" />
+
     <application android:process="system"
                  android:persistent="true"
                  android:hasCode="false"
diff --git a/lineage/res/res/values/config.xml b/lineage/res/res/values/config.xml
index e049722..ba40c4f 100644
--- a/lineage/res/res/values/config.xml
+++ b/lineage/res/res/values/config.xml
@@ -111,6 +111,7 @@
         <item>org.lineageos.platform.internal.StyleInterfaceService</item>
         <item>org.lineageos.platform.internal.TrustInterfaceService</item>
         <item>org.lineageos.platform.internal.LineageSettingsService</item>
+        <item>org.lineageos.platform.internal.ContainerManagerService</item>
     </string-array>
 
     <!-- The LineageSystemServer class that is invoked from Android's SystemServer -->
diff --git a/sdk/src/java/lineageos/app/ContainerManager.java b/sdk/src/java/lineageos/app/ContainerManager.java
new file mode 100644
index 0000000..320ff56
--- /dev/null
+++ b/sdk/src/java/lineageos/app/ContainerManager.java
@@ -0,0 +1,94 @@
+package lineageos.app;
+
+import android.content.Context;
+import android.os.IBinder;
+import android.os.RemoteException;
+import android.os.ServiceManager;
+import android.util.Log;
+import android.util.Slog;
+
+import java.util.List;
+
+import lineageos.app.LineageContextConstants;
+
+/**
+ * The ContainerManager allows you to ...
+ * TODO
+ *
+ * <p>
+ * To get the instance of this class, utilize
+ * ContainerManager#getInstance(Context context)
+ */
+public class ContainerManager {
+
+    /**
+     * Subscription ID used to set the default Phone and SMS to "ask every time".
+     */
+    public static final int ASK_FOR_SUBSCRIPTION_ID = 0;
+
+    private static final String TAG = "ContainerManager";
+    private static boolean localLOGD = Log.isLoggable(TAG, Log.DEBUG);
+
+    private static IContainerManager sService;
+    private static ContainerManager sContainerManagerInstance;
+    private Context mContext;
+
+    private ContainerManager(Context context) {
+        Context appContext = context.getApplicationContext();
+        if (appContext != null) {
+            mContext = appContext;
+        } else {
+            mContext = context;
+        }
+        sService = getService();
+
+        if (context.getPackageManager().hasSystemFeature(LineageContextConstants.Features.CONTAINERS)
+                && sService == null) {
+            Log.wtf(TAG, "Unable to get ContainerManagerService. " +
+                    "The service either crashed, was not started, or the interface has been " +
+                    "called too early in SystemServer init");
+        }
+    }
+
+    /**
+     * Get or create an instance of the {@link cyanogenmod.app.ContainerManager}
+     *
+     * @return {@link cyanogenmod.app.ContainerManager}
+     */
+    public static ContainerManager getInstance(Context context) {
+        if (sContainerManagerInstance == null) {
+            sContainerManagerInstance = new ContainerManager(context);
+        }
+        return sContainerManagerInstance;
+    }
+
+    /** @hide */
+    public IContainerManager getService() {
+        if (sService != null) {
+            return sService;
+        }
+        IBinder b = ServiceManager.getService(LineageContextConstants.LINEAGE_CONTAINER_MANAGER_SERVICE);
+        if (b != null) {
+            sService = IContainerManager.Stub.asInterface(b);
+            return sService;
+        }
+        return null;
+    }
+
+    public void sayHelloTo(String msg) {
+        if (sService == null) {
+            Log.w(TAG, "not connected to ContainerManager");
+            return;
+        }
+
+        if (localLOGD) {
+            String pkg = mContext.getPackageName();
+            Log.v(TAG, pkg + " ContainerManager: sayHelloTo " + msg + " called!");
+        }
+        try {
+            sService.sayHelloTo(msg);
+        } catch (RemoteException e) {
+            Slog.w(TAG, "warning: no container manager service");
+        }
+    }
+}
diff --git a/sdk/src/java/lineageos/app/IContainerManager.aidl b/sdk/src/java/lineageos/app/IContainerManager.aidl
new file mode 100644
index 0000000..3a94e09
--- /dev/null
+++ b/sdk/src/java/lineageos/app/IContainerManager.aidl
@@ -0,0 +1,6 @@
+package lineageos.app;
+
+/** @hide */
+interface IContainerManager {
+    void sayHelloTo(String msg);
+}
diff --git a/sdk/src/java/lineageos/app/LineageContextConstants.java b/sdk/src/java/lineageos/app/LineageContextConstants.java
index 8a210cd..d910099 100644
--- a/sdk/src/java/lineageos/app/LineageContextConstants.java
+++ b/sdk/src/java/lineageos/app/LineageContextConstants.java
@@ -96,6 +96,13 @@ public final class LineageContextConstants {
      */
     public static final String LINEAGE_AUDIO_SERVICE = "lineageaudio";
 
+    /**
+     * Manages Docker containers.
+     *
+     * @hide
+     */
+    public static final String LINEAGE_CONTAINER_MANAGER_SERVICE = "lineagecontainermanager";
+
     /**
      * Use with {@link android.content.Context#getSystemService} to retrieve a
      * {@link lineageos.app.StyleInterface} interact with system style.
@@ -170,6 +177,8 @@ public final class LineageContextConstants {
         @SdkConstant(SdkConstant.SdkConstantType.FEATURE)
         public static final String AUDIO = "org.lineageos.audio";
 
+
+
         /**
          * Feature for {@link PackageManager#getSystemAvailableFeatures} and
          * {@link PackageManager#hasSystemFeature}: The device includes the lineage style service
@@ -193,5 +202,13 @@ public final class LineageContextConstants {
          */
         @SdkConstant(SdkConstant.SdkConstantType.FEATURE)
         public static final String SETTINGS = "org.lineageos.settings";
+
+        /**
+         * Feature for {@link PackageManager#getSystemAvailableFeatures} and
+         * {@link PackageManager#hasSystemFeature}: The device includes the lineage container service
+         * utilized by the lineage sdk.
+         */
+        @SdkConstant(SdkConstant.SdkConstantType.FEATURE)
+        public static final String CONTAINERS = "org.lineageos.containers";
     }
 }
-- 
2.17.1

