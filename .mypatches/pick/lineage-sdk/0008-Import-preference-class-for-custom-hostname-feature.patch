From 62c696958445bb6e32ed8ea38e3e3b487ef23d34 Mon Sep 17 00:00:00 2001
From: LuK1337 <priv.luk@gmail.com>
Date: Thu, 2 Aug 2018 17:29:18 +0200
Subject: [PATCH 8/9] Import preference class for custom hostname feature

Change-Id: I85383db3583eba75f675ad5e4a4be1379c012ef6
---
 .../deviceinfo/HostnamePreference.java        | 73 +++++++++++++++++++
 1 file changed, 73 insertions(+)
 create mode 100644 sdk/src/java/org/lineageos/internal/preference/deviceinfo/HostnamePreference.java

diff --git a/sdk/src/java/org/lineageos/internal/preference/deviceinfo/HostnamePreference.java b/sdk/src/java/org/lineageos/internal/preference/deviceinfo/HostnamePreference.java
new file mode 100644
index 0000000..56600b2
--- /dev/null
+++ b/sdk/src/java/org/lineageos/internal/preference/deviceinfo/HostnamePreference.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright (C) 2013 The CyanogenMod project
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.lineageos.internal.preference;
+
+import android.content.Context;
+import android.os.SystemProperties;
+import android.support.v7.preference.EditTextPreference;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+import android.util.Log;
+
+import lineageos.providers.LineageSettings;
+
+public class HostnamePreference extends EditTextPreference {
+
+    private static final String TAG = "HostnamePreference";
+
+    private static final String PROP_HOSTNAME = "net.hostname";
+
+    public HostnamePreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setSummary(getText());
+    }
+
+    @Override
+    public void setText(String text) {
+        if (text == null) {
+            Log.e(TAG, "tried to set null hostname, request ignored");
+            return;
+        }
+        // Remove any character that is not alphanumeric, period, or hyphen
+        text = text.replaceAll("[^-.a-zA-Z0-9]", "");
+        if (TextUtils.isEmpty(text)) {
+            Log.w(TAG, "setting empty hostname");
+        } else {
+            Log.i(TAG, "hostname has been set: " + text);
+        }
+        SystemProperties.set(PROP_HOSTNAME, text);
+        persistHostname(text);
+        setSummary(text);
+    }
+
+    @Override
+    public String getText() {
+        return SystemProperties.get(PROP_HOSTNAME);
+    }
+
+    @Override
+    public void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        persistHostname(getText());
+    }
+
+    public void persistHostname(String hostname) {
+        LineageSettings.Secure.putString(getContext().getContentResolver(),
+                LineageSettings.Secure.DEVICE_HOSTNAME, hostname);
+    }
+
+}
-- 
2.17.1

