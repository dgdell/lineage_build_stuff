From 3e932db8c22e1ce133d296a539c33d87c7810b1d Mon Sep 17 00:00:00 2001
From: Tobias Tefke <tobias.tefke@tutanota.com>
Date: Thu, 14 Jun 2018 12:04:36 +0200
Subject: [PATCH 08/10] Trust: warn if build is signed with insecure keys

Change-Id: I1d58e232ed99dfe7e2addb651c114c1068e64105
---
 api/lineage_current.txt                       |  1 +
 .../internal/TrustInterfaceService.java       | 26 +++++++++++++++++--
 lineage/res/res/values/strings.xml            |  3 ++-
 lineage/res/res/values/symbols.xml            |  3 ++-
 .../java/lineageos/trust/TrustInterface.java  | 11 ++++++++
 5 files changed, 40 insertions(+), 4 deletions(-)

diff --git a/api/lineage_current.txt b/api/lineage_current.txt
index 71fbfd2..a0a6f5e 100644
--- a/api/lineage_current.txt
+++ b/api/lineage_current.txt
@@ -1032,6 +1032,7 @@ package lineageos.trust {
     method public boolean removeNotificationForFeature(int);
     field public static final int ERROR_UNDEFINED = -1; // 0xffffffff
     field public static final int TRUST_FEATURE_ENCRYPTION = 4; // 0x4
+    field public static final int TRUST_FEATURE_KEYS = 5; // 0x5
     field public static final int TRUST_FEATURE_LEVEL_BAD = 2; // 0x2
     field public static final int TRUST_FEATURE_LEVEL_GOOD = 0; // 0x0
     field public static final int TRUST_FEATURE_LEVEL_POOR = 1; // 0x1
diff --git a/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java b/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
index ad86a3c..cc1db10 100644
--- a/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
+++ b/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
@@ -90,6 +90,11 @@ public class TrustInterfaceService extends LineageSystemService {
         if (selinuxStatus != TrustInterface.TRUST_FEATURE_LEVEL_GOOD) {
             postNotificationForFeatureInternal(TrustInterface.TRUST_FEATURE_SELINUX);
         }
+
+        int keysStatus = getKeysStatus();
+        if (keysStatus != TrustInterface.TRUST_FEATURE_LEVEL_GOOD) {
+            postNotificationForFeatureInternal(TrustInterface.TRUST_FEATURE_KEYS);
+        }
     }
 
     /* Public methods implementation */
@@ -173,6 +178,8 @@ public class TrustInterfaceService extends LineageSystemService {
                 return getSecurityPatchStatus(VENDOR_SECURITY_PATCHES);
             case TrustInterface.TRUST_FEATURE_ENCRYPTION:
                 return getEncryptionStatus();
+            case TrustInterface.TRUST_FEATURE_KEYS:
+                return getKeysStatus();
             default:
                 return TrustInterface.ERROR_UNDEFINED;
         }
@@ -196,13 +203,17 @@ public class TrustInterfaceService extends LineageSystemService {
 
         switch (feature) {
             case TrustInterface.TRUST_FEATURE_SELINUX:
-                title = R.string.trust_notification_title_selinux;
+                title = R.string.trust_notification_title_security;
                 message = R.string.trust_notification_content_selinux;
                 break;
             case TrustInterface.TRUST_FEATURE_ROOT:
                 title = R.string.trust_notification_title_root;
                 message = R.string.trust_notification_content_root;
                 break;
+            case TrustInterface.TRUST_FEATURE_KEYS:
+                title = R.string.trust_notification_title_security;
+                message = R.string.trust_notification_content_keys;
+                break;
         }
 
         return title == 0 ? null : new Pair(title, message);
@@ -308,6 +319,17 @@ public class TrustInterfaceService extends LineageSystemService {
         }
     }
 
+    private int getKeysStatus() {
+        String buildTags = SystemProperties.get("ro.build.tags");
+
+        if (buildTags.contains("test-keys")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_BAD;
+        } else if (buildTags.contains("release-keys") || buildTags.contains("dev-keys")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_GOOD;
+        }
+        return TrustInterface.ERROR_UNDEFINED;
+    }
+
     private boolean hasOnboardedUser() {
         return LineageSettings.System.getInt(mContext.getContentResolver(),
                 LineageSettings.System.TRUST_INTERFACE_HINTED, 0) == 1;
@@ -352,4 +374,4 @@ public class TrustInterfaceService extends LineageSystemService {
             return getLevelForFeatureInternal(feature);
         }
     };
-}
\ No newline at end of file
+}
diff --git a/lineage/res/res/values/strings.xml b/lineage/res/res/values/strings.xml
index 4347c67..21e6dfd 100644
--- a/lineage/res/res/values/strings.xml
+++ b/lineage/res/res/values/strings.xml
@@ -188,10 +188,11 @@
     <string name="permlab_trustInterface">access Trust interface</string>
     <string name="permdesc_trustInterface">Allows an app to display Trust warnings and suggestions</string>
     <string name="trust_notification_channel">Trust alerts</string>
-    <string name="trust_notification_title_selinux">Trust \u2022 System security</string>
+    <string name="trust_notification_title_security">Trust \u2022 System security</string>
     <string name="trust_notification_content_selinux">SELinux is not enforcing, your security has been weakened</string>
     <string name="trust_notification_title_root">Trust \u2022 Root access</string>
     <string name="trust_notification_content_root">An app is using the root privileges right now</string>
+    <string name="trust_notification_content_keys">This build was signed with public keys</string>
     <string name="trust_notification_title_onboarding">Discover Trust</string>
     <string name="trust_notification_content_onboarding">Get to know how to assure your device is safe</string>
     <string name="trust_notification_action_manage">Manage alerts</string>
diff --git a/lineage/res/res/values/symbols.xml b/lineage/res/res/values/symbols.xml
index 753bde1..590f2ca 100644
--- a/lineage/res/res/values/symbols.xml
+++ b/lineage/res/res/values/symbols.xml
@@ -175,10 +175,11 @@
     <java-symbol type="drawable" name="ic_warning" />
     <java-symbol type="string" name="trust_feature_name" />
     <java-symbol type="string" name="trust_notification_channel" />
-    <java-symbol type="string" name="trust_notification_title_selinux" />
+    <java-symbol type="string" name="trust_notification_title_security" />
     <java-symbol type="string" name="trust_notification_content_selinux" />
     <java-symbol type="string" name="trust_notification_title_root" />
     <java-symbol type="string" name="trust_notification_content_root" />
+    <java-symbol type="string" name="trust_notification_content_keys" />
     <java-symbol type="string" name="trust_notification_title_onboarding" />
     <java-symbol type="string" name="trust_notification_content_onboarding" />
     <java-symbol type="string" name="trust_notification_action_manage" />
diff --git a/sdk/src/java/lineageos/trust/TrustInterface.java b/sdk/src/java/lineageos/trust/TrustInterface.java
index 9f3c7d8..d62dd4c 100644
--- a/sdk/src/java/lineageos/trust/TrustInterface.java
+++ b/sdk/src/java/lineageos/trust/TrustInterface.java
@@ -129,6 +129,17 @@ public class TrustInterface {
      */
     public static final int TRUST_FEATURE_ENCRYPTION = 4;
 
+    /**
+     * Trust feature indicator: Keys
+     *
+     * Possible status:
+     *    * {@link #TRUST_FEATURE_LEVEL_GOOD}: signed with private keys
+     *    * {@link #TRUST_FEATURE_LEVEL_BAD}: signed with public or inline keys
+     *
+     * @see #getLevelForFeature
+     */
+    public static final int TRUST_FEATURE_KEYS = 5;
+
     private static final String TAG = "TrustInterface";
 
     private static ITrustInterface sService;
-- 
2.17.1

