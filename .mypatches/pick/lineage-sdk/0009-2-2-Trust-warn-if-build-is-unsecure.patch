From f6f1aee2a62774a37a5dee478e52a0b086200181 Mon Sep 17 00:00:00 2001
From: Tobias Tefke <tobias.tefke@tutanota.com>
Date: Thu, 14 Jun 2018 12:04:36 +0200
Subject: [PATCH 09/10] [2/2] Trust: warn if build is unsecure

Change-Id: I1d58e232ed99dfe7e2addb651c114c1068e64105
---
 api/lineage_current.txt                       |  2 +
 .../internal/TrustInterfaceService.java       | 56 ++++++++++++++++++-
 lineage/res/res/values/strings.xml            |  4 +-
 lineage/res/res/values/symbols.xml            |  4 +-
 .../java/lineageos/trust/TrustInterface.java  | 23 ++++++++
 5 files changed, 85 insertions(+), 4 deletions(-)

diff --git a/api/lineage_current.txt b/api/lineage_current.txt
index 71fbfd2..f6af863 100644
--- a/api/lineage_current.txt
+++ b/api/lineage_current.txt
@@ -1031,6 +1031,8 @@ package lineageos.trust {
     method public boolean postNotificationForFeature(int);
     method public boolean removeNotificationForFeature(int);
     field public static final int ERROR_UNDEFINED = -1; // 0xffffffff
+    field public static final int TRUST_FEATURE_KEYS = 6; // 0x6
+    field public static final int TRUST_FEATURE_DEBUGGING = 5; // 0x5
     field public static final int TRUST_FEATURE_ENCRYPTION = 4; // 0x4
     field public static final int TRUST_FEATURE_LEVEL_BAD = 2; // 0x2
     field public static final int TRUST_FEATURE_LEVEL_GOOD = 0; // 0x0
diff --git a/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java b/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
index 201dc41..d8afae1 100644
--- a/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
+++ b/lineage/lib/main/java/org/lineageos/platform/internal/TrustInterfaceService.java
@@ -57,6 +57,7 @@ public class TrustInterfaceService extends LineageSystemService {
     private static final String INTENT_ONBOARDING = "org.lineageos.lineageparts.TRUST_HINT";
     private static final String CHANNEL_NAME = "TrustInterface";
     private static final int ONBOARDING_NOTIFCATION_ID = 89;
+    private static final String mBuildTags = SystemProperties.get("ro.build.tags");
 
     private Context mContext;
     private NotificationManager mNotificationManager = null;
@@ -90,6 +91,16 @@ public class TrustInterfaceService extends LineageSystemService {
         if (selinuxStatus != TrustInterface.TRUST_FEATURE_LEVEL_GOOD) {
             postNotificationForFeatureInternal(TrustInterface.TRUST_FEATURE_SELINUX);
         }
+
+        int debuggingStatus = getDebuggingStatus();
+        if (debuggingStatus != TrustInterface.TRUST_FEATURE_LEVEL_GOOD) {
+            postNotificationForFeatureInternal(TrustInterface.TRUST_FEATURE_DEBUGGING);
+        }
+
+        int keysStatus = getKeysStatus();
+        if (keysStatus != TrustInterface.TRUST_FEATURE_LEVEL_GOOD) {
+            postNotificationForFeatureInternal(TrustInterface.TRUST_FEATURE_KEYS);
+        }
     }
 
     /* Public methods implementation */
@@ -173,6 +184,10 @@ public class TrustInterfaceService extends LineageSystemService {
                 return getSecurityPatchStatus(VENDOR_SECURITY_PATCHES);
             case TrustInterface.TRUST_FEATURE_ENCRYPTION:
                 return getEncryptionStatus();
+            case TrustInterface.TRUST_FEATURE_DEBUGGING:
+                return getDebuggingStatus();
+            case TrustInterface.TRUST_FEATURE_KEYS:
+                return getKeysStatus();
             default:
                 return TrustInterface.ERROR_UNDEFINED;
         }
@@ -196,13 +211,21 @@ public class TrustInterfaceService extends LineageSystemService {
 
         switch (feature) {
             case TrustInterface.TRUST_FEATURE_SELINUX:
-                title = R.string.trust_notification_title_selinux;
+                title = R.string.trust_notification_title_security;
                 message = R.string.trust_notification_content_selinux;
                 break;
             case TrustInterface.TRUST_FEATURE_ROOT:
                 title = R.string.trust_notification_title_root;
                 message = R.string.trust_notification_content_root;
                 break;
+            case TrustInterface.TRUST_FEATURE_DEBUGGING:
+                title = R.string.trust_notification_title_security;
+                message = R.string.trust_notification_content_debugging;
+                break;
+            case TrustInterface.TRUST_FEATURE_KEYS:
+                title = R.string.trust_notification_title_security;
+                message = R.string.trust_notification_content_keys;
+                break;
         }
 
         return title == 0 ? null : new Pair(title, message);
@@ -306,6 +329,35 @@ public class TrustInterfaceService extends LineageSystemService {
         }
     }
 
+    private int getDebuggingStatus() {
+        String secureBuild = SystemProperties.get("ro.secure");
+        String debuggingBuild = SystemProperties.get("ro.debuggable");
+
+        if (secureBuild.isEmpty() || debuggingBuild.isEmpty()) {
+            return TrustInterface.ERROR_UNDEFINED;
+        }
+
+        if (!secureBuild.equals("1")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_BAD;
+        }
+
+        if (!debuggingBuild.equals("0")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_POOR;
+        }
+        return TrustInterface.TRUST_FEATURE_LEVEL_GOOD;
+    }
+
+    private int getKeysStatus() {
+        if (mBuildTags.contains("test-keys")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_BAD;
+        }
+
+        if (mBuildTags.contains("release-keys")) {
+            return TrustInterface.TRUST_FEATURE_LEVEL_GOOD;
+        }
+        return TrustInterface.ERROR_UNDEFINED;
+    }
+
     private boolean hasOnboardedUser() {
         return LineageSettings.System.getInt(mContext.getContentResolver(),
                 LineageSettings.System.TRUST_INTERFACE_HINTED, 0) == 1;
@@ -350,4 +402,4 @@ public class TrustInterfaceService extends LineageSystemService {
             return getLevelForFeatureInternal(feature);
         }
     };
-}
\ No newline at end of file
+}
diff --git a/lineage/res/res/values/strings.xml b/lineage/res/res/values/strings.xml
index 284577b..02bdbfe 100644
--- a/lineage/res/res/values/strings.xml
+++ b/lineage/res/res/values/strings.xml
@@ -191,10 +191,12 @@
     <string name="permlab_trustInterface">access Trust interface</string>
     <string name="permdesc_trustInterface">Allows an app to display Trust warnings and suggestions</string>
     <string name="trust_notification_channel">Trust alerts</string>
-    <string name="trust_notification_title_selinux">Trust \u2022 System security</string>
+    <string name="trust_notification_title_security">Trust \u2022 System security</string>
     <string name="trust_notification_content_selinux">SELinux is not enforcing, your security has been weakened</string>
     <string name="trust_notification_title_root">Trust \u2022 Root access</string>
     <string name="trust_notification_content_root">An app is using the root privileges right now</string>
+    <string name="trust_notification_content_debugging">Insecure debugging features are enabled</string>
+    <string name="trust_notification_content_keys">Your build was signed with public keys</string>
     <string name="trust_notification_title_onboarding">Discover Trust</string>
     <string name="trust_notification_content_onboarding">Get to know how to assure your device is safe</string>
     <string name="trust_notification_action_manage">Manage alerts</string>
diff --git a/lineage/res/res/values/symbols.xml b/lineage/res/res/values/symbols.xml
index f6a6d22..f7b63a3 100644
--- a/lineage/res/res/values/symbols.xml
+++ b/lineage/res/res/values/symbols.xml
@@ -178,10 +178,12 @@
     <java-symbol type="drawable" name="ic_warning" />
     <java-symbol type="string" name="trust_feature_name" />
     <java-symbol type="string" name="trust_notification_channel" />
-    <java-symbol type="string" name="trust_notification_title_selinux" />
+    <java-symbol type="string" name="trust_notification_title_security" />
     <java-symbol type="string" name="trust_notification_content_selinux" />
     <java-symbol type="string" name="trust_notification_title_root" />
     <java-symbol type="string" name="trust_notification_content_root" />
+    <java-symbol type="string" name="trust_notification_content_debugging" />
+    <java-symbol type="string" name="trust_notification_content_keys" />
     <java-symbol type="string" name="trust_notification_title_onboarding" />
     <java-symbol type="string" name="trust_notification_content_onboarding" />
     <java-symbol type="string" name="trust_notification_action_manage" />
diff --git a/sdk/src/java/lineageos/trust/TrustInterface.java b/sdk/src/java/lineageos/trust/TrustInterface.java
index 9f3c7d8..4930694 100644
--- a/sdk/src/java/lineageos/trust/TrustInterface.java
+++ b/sdk/src/java/lineageos/trust/TrustInterface.java
@@ -129,6 +129,29 @@ public class TrustInterface {
      */
     public static final int TRUST_FEATURE_ENCRYPTION = 4;
 
+    /**
+     * Trust feature indicator: Debugging
+     *
+     * Possible status:
+     *    * {@link #TRUST_FEATURE_LEVEL_GOOD}: no debugging or insecure features enabled
+     *    * {@link #TRUST_FEATURE_LEVEL_POOR}: only debugging features enabled
+     *    * {@link #TRUST_FEATURE_LEVEL_BAD}: debugging and insecure features enabled
+     *
+     * @see #getLevelForFeature
+     */
+    public static final int TRUST_FEATURE_DEBUGGING = 5;
+
+    /**
+     * Trust feature indicator: Keys
+     *
+     * Possible status:
+     *    * {@link #TRUST_FEATURE_LEVEL_GOOD}: signed with private keys
+     *    * {@link #TRUST_FEATURE_LEVEL_BAD}: signed with public keys
+     *
+     * @see #getLevelForFeature
+     */
+    public static final int TRUST_FEATURE_KEYS = 6;
+
     private static final String TAG = "TrustInterface";
 
     private static ITrustInterface sService;
-- 
2.17.1

