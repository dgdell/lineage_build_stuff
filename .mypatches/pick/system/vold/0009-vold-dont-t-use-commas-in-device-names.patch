From 73eda4d6e6ecd0c8198081a4a6738696a253378e Mon Sep 17 00:00:00 2001
From: morckx <morckx@gmail.com>
Date: Tue, 24 Nov 2015 22:45:01 +0100
Subject: [PATCH 09/24] vold: dont't use commas in device names

Fuse supports commas escaped by '\' in fs names, but exfat and ntfs-3g
currently don't support the escaping.

This fixes mounting of exFAT and NTFS public volumes.

Change-Id: I72005489956e59e7f889267114fee3921d289984

Also change emulated device id separator from comma to underscore

Needed to fix emulated primary storage on adopted storage.

Change-Id: I22114698e480fc829090261b79824c8b65b009c3
---
 model/Disk.cpp           | 2 +-
 model/EmulatedVolume.cpp | 2 +-
 model/PrivateVolume.cpp  | 2 +-
 model/PublicVolume.cpp   | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/model/Disk.cpp b/model/Disk.cpp
index 04d7e11..493fc2d 100644
--- a/model/Disk.cpp
+++ b/model/Disk.cpp
@@ -118,7 +118,7 @@ Disk::Disk(const std::string& eventPath, dev_t device,
         const std::string& nickname, int flags) :
         mDevice(device), mSize(-1), mNickname(nickname), mFlags(flags), mCreated(
                 false), mJustPartitioned(false) {
-    mId = StringPrintf("disk:%u,%u", major(device), minor(device));
+    mId = StringPrintf("disk:%u_%u", major(device), minor(device));
     mEventPath = eventPath;
     mSysPath = StringPrintf("/sys/%s", eventPath.c_str());
     mDevPath = StringPrintf("/dev/block/vold/%s", mId.c_str());
diff --git a/model/EmulatedVolume.cpp b/model/EmulatedVolume.cpp
index 31c3924..6389719 100644
--- a/model/EmulatedVolume.cpp
+++ b/model/EmulatedVolume.cpp
@@ -47,7 +47,7 @@ EmulatedVolume::EmulatedVolume(const std::string& rawPath) :
 
 EmulatedVolume::EmulatedVolume(const std::string& rawPath, dev_t device,
         const std::string& fsUuid) : VolumeBase(Type::kEmulated), mFusePid(0) {
-    setId(StringPrintf("emulated:%u,%u", major(device), minor(device)));
+    setId(StringPrintf("emulated:%u_%u", major(device), minor(device)));
     mRawPath = rawPath;
     mLabel = fsUuid;
 }
diff --git a/model/PrivateVolume.cpp b/model/PrivateVolume.cpp
index 00811b0..0bd31b1 100644
--- a/model/PrivateVolume.cpp
+++ b/model/PrivateVolume.cpp
@@ -45,7 +45,7 @@ static const unsigned int kMajorBlockMmc = 179;
 
 PrivateVolume::PrivateVolume(dev_t device, const std::string& keyRaw) :
         VolumeBase(Type::kPrivate), mRawDevice(device), mKeyRaw(keyRaw) {
-    setId(StringPrintf("private:%u,%u", major(device), minor(device)));
+    setId(StringPrintf("private:%u_%u", major(device), minor(device)));
     mRawDevPath = StringPrintf("/dev/block/vold/%s", getId().c_str());
 }
 
diff --git a/model/PublicVolume.cpp b/model/PublicVolume.cpp
index b9ac1f5..a19f281 100644
--- a/model/PublicVolume.cpp
+++ b/model/PublicVolume.cpp
@@ -50,7 +50,7 @@ PublicVolume::PublicVolume(dev_t device, const std::string& fstype /* = "" */,
                 const std::string& mntopts /* = "" */) :
         VolumeBase(Type::kPublic), mDevice(device), mFusePid(0),
         mFsType(fstype), mMntOpts(mntopts) {
-    setId(StringPrintf("public:%u,%u", major(device), minor(device)));
+    setId(StringPrintf("public:%u_%u", major(device), minor(device)));
     mDevPath = StringPrintf("/dev/block/vold/%s", getId().c_str());
 }
 
-- 
2.17.1

