From 065239c51d7149ddfc3da869f4f538e2a0beb10d Mon Sep 17 00:00:00 2001
From: LuK1337 <priv.luk@gmail.com>
Date: Tue, 6 Mar 2018 11:31:14 +0100
Subject: [PATCH 15/24] vold: Make sure block device exists before formatting
 it

* This fixes race condition where dm-1 doesn't exist
  when doFormat() is being executed on some devices
  while formatting them to use with adopted storage.

Change-Id: I1297025900a988141717b81b9d0fcca7197955bd
---
 Utils.cpp               | 20 ++++++++++++++++++++
 Utils.h                 |  4 ++++
 model/PrivateVolume.cpp |  7 +++++++
 3 files changed, 31 insertions(+)

diff --git a/Utils.cpp b/Utils.cpp
index 40cb7f0..4a14250 100644
--- a/Utils.cpp
+++ b/Utils.cpp
@@ -39,6 +39,7 @@
 #include <sys/sysmacros.h>
 #include <sys/wait.h>
 #include <sys/statvfs.h>
+#include <thread>
 
 #ifndef UMOUNT_NOFOLLOW
 #define UMOUNT_NOFOLLOW    0x00000008  /* Don't follow symlink on umount */
@@ -47,6 +48,8 @@
 using android::base::ReadFileToString;
 using android::base::StringPrintf;
 
+using namespace std::chrono_literals;
+
 namespace android {
 namespace vold {
 
@@ -731,6 +734,23 @@ bool Readlinkat(int dirfd, const std::string& path, std::string* result) {
     }
 }
 
+bool WaitForFile(const std::string& filename,
+        const std::chrono::milliseconds relativeTimeout) {
+    auto startTime = std::chrono::steady_clock::now();
+
+    while (true) {
+        if (!access(filename.c_str(), F_OK) || errno != ENOENT) {
+            return true;
+        }
+
+        std::this_thread::sleep_for(50ms);
+
+        auto now = std::chrono::steady_clock::now();
+        auto timeElapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - startTime);
+        if (timeElapsed > relativeTimeout) return false;
+    }
+}
+
 bool IsRunningInEmulator() {
     return android::base::GetBoolProperty("ro.kernel.qemu", false);
 }
diff --git a/Utils.h b/Utils.h
index 5caa4e9..949f05b 100644
--- a/Utils.h
+++ b/Utils.h
@@ -24,6 +24,7 @@
 #include <cutils/multiuser.h>
 #include <selinux/selinux.h>
 
+#include <chrono>
 #include <vector>
 #include <string>
 
@@ -122,6 +123,9 @@ status_t RestoreconRecursive(const std::string& path);
 // TODO: promote to android::base
 bool Readlinkat(int dirfd, const std::string& path, std::string* result);
 
+bool WaitForFile(const std::string& filename,
+        const std::chrono::milliseconds relativeTimeout);
+
 /* Checks if Android is running in QEMU */
 bool IsRunningInEmulator();
 
diff --git a/model/PrivateVolume.cpp b/model/PrivateVolume.cpp
index a914b1b..a323350 100644
--- a/model/PrivateVolume.cpp
+++ b/model/PrivateVolume.cpp
@@ -38,6 +38,8 @@
 
 using android::base::StringPrintf;
 
+using namespace std::chrono_literals;
+
 namespace android {
 namespace vold {
 
@@ -191,6 +193,11 @@ status_t PrivateVolume::doFormat(const std::string& fsType) {
         LOG(DEBUG) << "Resolved auto to " << resolvedFsType;
     }
 
+    if (!WaitForFile(mDmDevPath, 15s)) {
+        PLOG(ERROR) << "Timed out waiting for " << getId();
+        return -EIO;
+    }
+
     if (resolvedFsType == "ext4") {
         // TODO: change reported mountpoint once we have better selinux support
         if (ext4::Format(mDmDevPath, 0, "/data")) {
-- 
2.17.1

