From c801c5cefd2a121d014e7605787f217d05ffc730 Mon Sep 17 00:00:00 2001
From: Michael Bestas <mikeioannina@cyanogenmod.org>
Date: Wed, 20 Jan 2016 22:06:11 +0200
Subject: [PATCH 05/20] vold: Honor mount options for f2fs partitions

* Based on 1436fc7ea3b349283a021e75fdd4f3478a2ca2e8

Change-Id: Id9491ada3bd34275a95ef9855167db6ae7a9b30f
---
 fs/F2fs.cpp             | 5 +++--
 fs/F2fs.h               | 2 +-
 model/PrivateVolume.cpp | 2 +-
 model/PublicVolume.cpp  | 2 +-
 4 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/fs/F2fs.cpp b/fs/F2fs.cpp
index 516a2f1..4ebaf2d 100644
--- a/fs/F2fs.cpp
+++ b/fs/F2fs.cpp
@@ -51,12 +51,13 @@ status_t Check(const std::string& source, bool trusted) {
     return ForkExecvp(cmd, trusted ? sFsckContext : sFsckUntrustedContext);
 }
 
-status_t Mount(const std::string& source, const std::string& target) {
+status_t Mount(const std::string& source, const std::string& target, const std::string& opts /* = "" */) {
     const char* c_source = source.c_str();
     const char* c_target = target.c_str();
+    const char* c_opts = opts.c_str();
     unsigned long flags = MS_NOATIME | MS_NODEV | MS_NOSUID | MS_DIRSYNC;
 
-    int res = mount(c_source, c_target, "f2fs", flags, NULL);
+    int res = mount(c_source, c_target, "f2fs", flags, c_opts);
     if (res != 0) {
         PLOG(ERROR) << "Failed to mount " << source;
         if (errno == EROFS) {
diff --git a/fs/F2fs.h b/fs/F2fs.h
index eb34afa..227b8bb 100644
--- a/fs/F2fs.h
+++ b/fs/F2fs.h
@@ -28,7 +28,7 @@ namespace f2fs {
 bool IsSupported();
 
 status_t Check(const std::string& source, bool trusted);
-status_t Mount(const std::string& source, const std::string& target);
+status_t Mount(const std::string& source, const std::string& target, const std::string& opts = "");
 status_t Format(const std::string& source);
 
 }  // namespace f2fs
diff --git a/model/PrivateVolume.cpp b/model/PrivateVolume.cpp
index 63c0711..00811b0 100644
--- a/model/PrivateVolume.cpp
+++ b/model/PrivateVolume.cpp
@@ -133,7 +133,7 @@ status_t PrivateVolume::doMount() {
             return -EIO;
         }
 
-        if (f2fs::Mount(mDmDevPath, mPath)) {
+        if (f2fs::Mount(mDmDevPath, mPath, "")) {
             PLOG(ERROR) << getId() << " failed to mount";
             return -EIO;
         }
diff --git a/model/PublicVolume.cpp b/model/PublicVolume.cpp
index d6a42d1..7e9bf97 100644
--- a/model/PublicVolume.cpp
+++ b/model/PublicVolume.cpp
@@ -154,7 +154,7 @@ status_t PublicVolume::doMount() {
     } else if (mFsType == "ext4") {
          ret = ext4::Mount(mDevPath, mRawPath, false, false, true, mMntOpts);
     } else if (mFsType == "f2fs") {
-        ret = f2fs::Mount(mDevPath, mRawPath);
+        ret = f2fs::Mount(mDevPath, mRawPath, mMntOpts);
     } else if (mFsType == "ntfs") {
         ret = ntfs::Mount(mDevPath, mRawPath, false, false, false,
                 AID_MEDIA_RW, AID_MEDIA_RW, 0007, true);
-- 
2.17.1

