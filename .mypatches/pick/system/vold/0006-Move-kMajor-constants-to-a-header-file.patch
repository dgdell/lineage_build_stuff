From e432e70ee62f6ae5c4c5b1fba3f62813626ec7f2 Mon Sep 17 00:00:00 2001
From: Chih-Wei Huang <cwhuang@linux.org.tw>
Date: Sat, 25 Mar 2017 00:13:45 +0800
Subject: [PATCH 6/9] Move kMajor* constants to a header file

Currently each cpp defines its own kMajor* that can't be shared.
Move the kMajor* to a header to avoid duplicate definitions.

Change isVirtioBlkDevice() to be a public static method of Disk
so that the logic could be shared as well.

Change-Id: I2e0e04301b85c718a5dfff9efbbac1556b854c6d
---
 VolumeManager.cpp       | 10 ++--------
 model/Disk.cpp          | 23 +----------------------
 model/Disk.h            | 25 +++++++++++++++++++++++++
 model/PrivateVolume.cpp |  4 +---
 4 files changed, 29 insertions(+), 33 deletions(-)

diff --git a/VolumeManager.cpp b/VolumeManager.cpp
index 58da887..f391910 100644
--- a/VolumeManager.cpp
+++ b/VolumeManager.cpp
@@ -75,10 +75,6 @@ static const char* kPropVirtualDisk = "persist.sys.virtual_disk";
 /* 512MiB is large enough for testing purposes */
 static const unsigned int kSizeVirtualDisk = 536870912;
 
-static const unsigned int kMajorBlockMmc = 179;
-static const unsigned int kMajorBlockExperimentalMin = 240;
-static const unsigned int kMajorBlockExperimentalMax = 254;
-
 VolumeManager *VolumeManager::sInstance = NULL;
 
 VolumeManager *VolumeManager::Instance() {
@@ -199,11 +195,9 @@ void VolumeManager::handleBlockEvent(NetlinkEvent *evt) {
                 // emulator-specific; see Disk.cpp for details) and UFS card
                 // devices are SD, and that everything else is USB
                 int flags = source->getFlags();
-                if (major == kMajorBlockMmc
+                if (major == android::vold::Disk::kMajorBlockMmc
                     || (eventPath.find("ufs") != std::string::npos)
-                    || (android::vold::IsRunningInEmulator()
-                    && major >= (int) kMajorBlockExperimentalMin
-                    && major <= (int) kMajorBlockExperimentalMax)) {
+                    || android::vold::Disk::isVirtioBlkDevice(major)) {
                     flags |= android::vold::Disk::Flags::kSd;
                 } else {
                     flags |= android::vold::Disk::Flags::kUsb;
diff --git a/model/Disk.cpp b/model/Disk.cpp
index b8a0cbe..e37db8e 100644
--- a/model/Disk.cpp
+++ b/model/Disk.cpp
@@ -56,27 +56,6 @@ static const char* kSysfsLoopMaxMinors = "/sys/module/loop/parameters/max_part";
 static const char* kSysfsMmcMaxMinorsDeprecated = "/sys/module/mmcblk/parameters/perdev_minors";
 static const char* kSysfsMmcMaxMinors = "/sys/module/mmc_block/parameters/perdev_minors";
 
-static const unsigned int kMajorBlockLoop = 7;
-static const unsigned int kMajorBlockScsiA = 8;
-static const unsigned int kMajorBlockScsiB = 65;
-static const unsigned int kMajorBlockScsiC = 66;
-static const unsigned int kMajorBlockScsiD = 67;
-static const unsigned int kMajorBlockScsiE = 68;
-static const unsigned int kMajorBlockScsiF = 69;
-static const unsigned int kMajorBlockScsiG = 70;
-static const unsigned int kMajorBlockScsiH = 71;
-static const unsigned int kMajorBlockScsiI = 128;
-static const unsigned int kMajorBlockScsiJ = 129;
-static const unsigned int kMajorBlockScsiK = 130;
-static const unsigned int kMajorBlockScsiL = 131;
-static const unsigned int kMajorBlockScsiM = 132;
-static const unsigned int kMajorBlockScsiN = 133;
-static const unsigned int kMajorBlockScsiO = 134;
-static const unsigned int kMajorBlockScsiP = 135;
-static const unsigned int kMajorBlockMmc = 179;
-static const unsigned int kMajorBlockExperimentalMin = 240;
-static const unsigned int kMajorBlockExperimentalMax = 254;
-
 static const char* kGptBasicData = "EBD0A0A2-B9E5-4433-87C0-68B6B72699C7";
 static const char* kGptLinuxFilesystem = "0FC63DAF-8483-4772-8E79-3D69D8477DE4";
 static const char* kGptAndroidMeta = "19A710A2-B3CA-11E4-B026-10604B889DCF";
@@ -88,7 +67,7 @@ enum class Table {
     kGpt,
 };
 
-static bool isVirtioBlkDevice(unsigned int major) {
+bool Disk::isVirtioBlkDevice(unsigned int major) {
     /*
      * The new emulator's "ranchu" virtual board no longer includes a goldfish
      * MMC-based SD card device; instead, it emulates SD cards with virtio-blk,
diff --git a/model/Disk.h b/model/Disk.h
index a365ec6..bd888cd 100644
--- a/model/Disk.h
+++ b/model/Disk.h
@@ -40,6 +40,29 @@ public:
     Disk(const std::string& eventPath, dev_t device, const std::string& nickname, int flags);
     virtual ~Disk();
 
+    enum {
+        kMajorBlockLoop = 7,
+        kMajorBlockScsiA = 8,
+        kMajorBlockScsiB = 65,
+        kMajorBlockScsiC = 66,
+        kMajorBlockScsiD = 67,
+        kMajorBlockScsiE = 68,
+        kMajorBlockScsiF = 69,
+        kMajorBlockScsiG = 70,
+        kMajorBlockScsiH = 71,
+        kMajorBlockScsiI = 128,
+        kMajorBlockScsiJ = 129,
+        kMajorBlockScsiK = 130,
+        kMajorBlockScsiL = 131,
+        kMajorBlockScsiM = 132,
+        kMajorBlockScsiN = 133,
+        kMajorBlockScsiO = 134,
+        kMajorBlockScsiP = 135,
+        kMajorBlockMmc = 179,
+        kMajorBlockExperimentalMin = 240,
+        kMajorBlockExperimentalMax = 254,
+    };
+
     enum Flags {
         /* Flag that disk is adoptable */
         kAdoptable = 1 << 0,
@@ -81,6 +104,8 @@ public:
     virtual status_t partitionPrivate();
     virtual status_t partitionMixed(int8_t ratio);
 
+    static bool isVirtioBlkDevice(unsigned int major);
+
 protected:
     /* ID that uniquely references this disk */
     std::string mId;
diff --git a/model/PrivateVolume.cpp b/model/PrivateVolume.cpp
index f0adb6c..8021ca2 100644
--- a/model/PrivateVolume.cpp
+++ b/model/PrivateVolume.cpp
@@ -43,8 +43,6 @@ using namespace std::chrono_literals;
 namespace android {
 namespace vold {
 
-static const unsigned int kMajorBlockMmc = 179;
-
 PrivateVolume::PrivateVolume(dev_t device, const std::string& keyRaw) :
         VolumeBase(Type::kPrivate), mRawDevice(device), mKeyRaw(keyRaw) {
     setId(StringPrintf("private:%u,%u", major(device), minor(device)));
@@ -190,7 +188,7 @@ status_t PrivateVolume::doFormat(const std::string& fsType) {
     if (fsType == "auto") {
         // For now, assume that all MMC devices are flash-based SD cards, and
         // give everyone else ext4 because sysfs rotational isn't reliable.
-        if ((major(mRawDevice) == kMajorBlockMmc) && f2fs::IsSupported()) {
+        if ((major(mRawDevice) == Disk::kMajorBlockMmc) && f2fs::IsSupported()) {
             resolvedFsType = "f2fs";
         } else {
             resolvedFsType = "ext4";
-- 
2.17.1

