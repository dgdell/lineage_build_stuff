From b1b9ce763929855c789369edbd460a9f3c74fc3e Mon Sep 17 00:00:00 2001
From: Fenglin Wu <fenglinw@codeaurora.org>
Date: Thu, 11 Sep 2014 10:15:03 +0800
Subject: [PATCH 02/10] healthd: charger: Add tricolor led to indicate battery
 capacity

Add led to indicate battery capacity when doing off mode charging. The
led behavior is design as below:
   i. 	Shows red led if capacity is lower than 15%.
   ii.	Shows yellow (red + green) led if capacity is
	lower than 90% but higher than 15%.
   iii. Shows green led if capacity is higher than 90%.

Change-Id: If637defec8a04e859b00a6492ec1f95d6bff2200

healthd: remove useless goto in charger mode

jumping to the cleanup makes a check that will fail anyways,
since fd is smaller than 0

Change-Id: Ic53f186e00fc09a49de5185b01a2bf64a8ceba35

healthd: more descriptive LED path opening error message

Change-Id: I6e3fa9e34a471c387a62dfc3318fd94620a30cd7

healthd: fix LED color on 100%

if soc reaches 100, the loop variable would reach 3.
acessing the the fourth element of soc_leds is undefined behaviour

Change-Id: Iebc521c66844c811afa0244bc7977d1f88144227

Healthd: charger: allow override of LED paths

Change-Id: Ib7372e441d554e16ffc20ce43993ee78cdc5b187

healthd: Allow devices to opt-out of enabling charger LED

* Not all devices will want to enable this, and it may also cause symbol
  conflicts with static HAL libraries.

Change-Id: I0a2a082f9bf84b6ecfecf3de88c6d494d5e2cf44

healthd: Fix NO_CHARGER_LED
Change-Id: Iaae43e2a236318011b7aefb59250c19dd954521e

Change-Id: I0a2a082f9bf84b6ecfecf3de88c6d494d5e2cf44

healthd: Write to blink file to fix LED

Many devices (such as bacon) require touching a blink file before
changes to the LED are committed to hardware.

Jira: CYAN-7689

Change-Id: Ia18a62134d196a636352bcd1af924c407c19d5b4

healthd: fix include paths

This makes it possible to set the *_LED_PATH defines from the device's
BoardConfig.mk.

For some reason, these defines were set for healthd.cpp, not for
healthd_mode_charger.cpp, where they are actually used.

I think the issue was introduced with the merging of android-7.1.2_r2 in
commit e40b34d9fc045a22929e459a8b3adc9cb104b2c1.

Change-Id: I507f2cb4cb440f2a6584a59394a623e5ffa16864
---
 healthd/Android.mk               |  15 ++++
 healthd/healthd_mode_charger.cpp | 137 +++++++++++++++++++++++++++++++
 2 files changed, 152 insertions(+)

diff --git a/healthd/Android.mk b/healthd/Android.mk
index a90f55022..a5a6160c5 100644
--- a/healthd/Android.mk
+++ b/healthd/Android.mk
@@ -91,6 +91,21 @@ ifeq ($(strip $(BOARD_CHARGER_ENABLE_SUSPEND)),true)
 LOCAL_STATIC_LIBRARIES += libsuspend
 endif
 
+HEALTHD_CHARGER_DEFINES := RED_LED_PATH \
+    GREEN_LED_PATH \
+    BLUE_LED_PATH \
+    BLINK_PATH
+
+$(foreach healthd_charger_define,$(HEALTHD_CHARGER_DEFINES), \
+  $(if $($(healthd_charger_define)), \
+    $(eval LOCAL_CFLAGS += -D$(healthd_charger_define)=\"$($(healthd_charger_define))\") \
+  ) \
+)
+
+ifeq ($(strip $(BOARD_NO_CHARGER_LED)),true)
+LOCAL_CFLAGS += -DNO_CHARGER_LED
+endif
+
 include $(BUILD_STATIC_LIBRARY)
 
 ### charger ###
diff --git a/healthd/healthd_mode_charger.cpp b/healthd/healthd_mode_charger.cpp
index 6c6d73880..55cb25035 100644
--- a/healthd/healthd_mode_charger.cpp
+++ b/healthd/healthd_mode_charger.cpp
@@ -75,6 +75,20 @@ char* locale;
 
 #define LAST_KMSG_MAX_SZ (32 * 1024)
 
+#ifndef RED_LED_PATH
+#define RED_LED_PATH            "/sys/class/leds/red/brightness"
+#endif
+#ifndef GREEN_LED_PATH
+#define GREEN_LED_PATH          "/sys/class/leds/green/brightness"
+#endif
+#ifndef BLUE_LED_PATH
+#define BLUE_LED_PATH           "/sys/class/leds/blue/brightness"
+#endif
+
+#ifndef BLINK_PATH
+#define BLINK_PATH              "/sys/class/leds/red/device/blink"
+#endif
+
 #define LOGE(x...) KLOG_ERROR("charger", x);
 #define LOGW(x...) KLOG_WARNING("charger", x);
 #define LOGV(x...) KLOG_DEBUG("charger", x);
@@ -100,6 +114,10 @@ struct charger {
     animation* batt_anim;
     GRSurface* surf_unknown;
     int boot_min_cap;
+
+#ifndef NO_CHARGER_LED
+    int old_soc;
+#endif
 };
 
 static const animation BASE_ANIMATION = {
@@ -181,11 +199,111 @@ static animation::frame default_animation_frames[] = {
 
 static animation battery_animation = BASE_ANIMATION;
 
+enum {
+    RED_LED = 0x01 << 0,
+    GREEN_LED = 0x01 << 1,
+    BLUE_LED = 0x01 << 2,
+};
+
+#ifndef NO_CHARGER_LED
+struct led_ctl {
+    int color;
+    const char *path;
+};
+
+struct led_ctl leds[3] =
+    {{RED_LED, RED_LED_PATH},
+    {GREEN_LED, GREEN_LED_PATH},
+    {BLUE_LED, BLUE_LED_PATH}};
+
+struct soc_led_color_mapping {
+    int soc;
+    int color;
+};
+
+struct soc_led_color_mapping soc_leds[3] = {
+    {15, RED_LED},
+    {90, RED_LED | GREEN_LED},
+    {100, GREEN_LED},
+};
+#endif
+
 static charger charger_state;
 static healthd_config* healthd_config;
 static android::BatteryProperties* batt_prop;
 static std::unique_ptr<HealthdDraw> healthd_draw;
 
+#ifndef NO_CHARGER_LED
+static int set_blink(int val)
+{
+    int fd;
+    char buffer[10];
+
+    fd = open(BLINK_PATH, O_RDWR);
+    if (fd < 0) {
+        LOGE("Could not open blink file\n");
+        return -1;
+    }
+    snprintf(buffer, sizeof(buffer), "%d\n", val);
+    if (write(fd, buffer, strlen(buffer)) < 0) {
+        LOGE("Could not write to blink file\n");
+        close(fd);
+        return -1;
+    }
+    close(fd);
+    return 0;
+}
+
+static int set_tricolor_led(int on, int color)
+{
+    int fd;
+    char buffer[10];
+
+    for (size_t i = 0; i < ARRAY_SIZE(leds); i++) {
+        if ((color & leds[i].color) && (access(leds[i].path, R_OK | W_OK) == 0)) {
+            fd = open(leds[i].path, O_RDWR);
+            if (fd < 0) {
+                LOGE("Could not open led node %zu\n", i);
+                continue;
+            }
+            if (on)
+                snprintf(buffer, sizeof(buffer), "255\n");
+            else
+                snprintf(buffer, sizeof(buffer), "0\n");
+            if (write(fd, buffer, strlen(buffer)) < 0)
+                LOGE("Could not write to led node\n");
+            if (fd >= 0)
+                close(fd);
+        }
+    }
+
+    return 0;
+}
+
+static int set_battery_soc_leds(int soc)
+{
+    int i, color;
+    static int old_color = 0;
+
+    for (i = 0; i < (int)ARRAY_SIZE(soc_leds); i++) {
+        if (soc <= soc_leds[i].soc)
+            break;
+    }
+    color = soc_leds[i].color;
+    if (old_color != color) {
+        set_tricolor_led(0, old_color);
+        set_tricolor_led(1, color);
+        old_color = color;
+        LOGV("soc = %d, set led color 0x%x\n", soc, soc_leds[i].color);
+    }
+
+    /* This is required to commit the changes to hardware */
+    set_blink(0);
+
+    return 0;
+}
+#endif
+
 /* current time in milliseconds */
 static int64_t curr_time_ms() {
     timespec tm;
@@ -473,8 +591,23 @@ static void handle_input_state(charger* charger, int64_t now) {
 }
 
 static void handle_power_supply_state(charger* charger, int64_t now) {
+#ifndef NO_CHARGER_LED
+    int soc = 0;
+#endif
+
     if (!charger->have_battery_state) return;
 
+#ifndef NO_CHARGER_LED
+    if (batt_prop && batt_prop->batteryLevel >= 0) {
+        soc = batt_prop->batteryLevel;
+    }
+
+    if (charger->old_soc != soc) {
+        charger->old_soc = soc;
+        set_battery_soc_leds(soc);
+    }
+#endif
+
     if (!charger->charger_connected) {
         /* Last cycle would have stopped at the extreme top of battery-icon
          * Need to show the correct level corresponding to capacity.
@@ -669,4 +802,8 @@ void healthd_mode_charger_init(struct healthd_config* config) {
     charger->next_pwr_check = -1;
     healthd_config = config;
     charger->boot_min_cap = config->boot_min_cap;
+
+#ifndef NO_CHARGER_LED
+    charger->old_soc = 0;
+#endif
 }
-- 
2.17.1

