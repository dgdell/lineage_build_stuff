From a2dd60a0a2253ce2aa94d45e4119f542484c5ba3 Mon Sep 17 00:00:00 2001
From: Rashed Abdel-Tawab <rashed@linux.com>
Date: Sat, 1 Sep 2018 15:00:13 -0700
Subject: [PATCH 6/6] soong: Add generated_headers module alias

Basically all this does is generate a cc_library_header but since we
need a per-device path for the kernel headers, we have to do it in go.
Modules include the generated kernel headers by using
    headers_libs: ["generated_kernel_headers"]

Change-Id: I4fed7ba54e32195952a97b096acfb713cbd29832
---
 Android.bp              |  8 +++++++
 cc/generated_headers.go | 48 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 56 insertions(+)
 create mode 100644 cc/generated_headers.go

diff --git a/Android.bp b/Android.bp
index 4a72ef7b..b9350210 100644
--- a/Android.bp
+++ b/Android.bp
@@ -163,6 +163,8 @@ bootstrap_go_package {
 
         "cc/kernel_headers.go",
 
+        "cc/generated_headers.go",
+
         "cc/genrule.go",
 
         "cc/vendor_public_library.go",
@@ -358,6 +360,12 @@ kernel_headers {
     vendor: true,
 }
 
+generated_headers {
+    name: "generated_kernel_headers",
+    additional_deps: ["$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr"],
+    vendor: true,
+}
+
 cc_genrule {
     name: "host_bionic_linker_asm",
     host_supported: true,
diff --git a/cc/generated_headers.go b/cc/generated_headers.go
new file mode 100644
index 00000000..f11a1094
--- /dev/null
+++ b/cc/generated_headers.go
@@ -0,0 +1,48 @@
+// Copyright 2018 The LineageOS Project. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package cc
+
+import (
+	"android/soong/android"
+)
+
+type generatedHeadersDecorator struct {
+	*libraryDecorator
+}
+
+func (stub *generatedHeadersDecorator) link(ctx ModuleContext, flags Flags, deps PathDeps, objs Objects) android.Path {
+	if ctx.Device() {
+		f := &stub.libraryDecorator.flagExporter
+		f.flags = append(f.flags, "-Iout/target/product/" + ctx.Config().DeviceName() + "/obj/KERNEL_OBJ/usr/include")
+	}
+	return stub.libraryDecorator.linkStatic(ctx, flags, deps, objs)
+}
+
+func generatedHeadersFactory() android.Module {
+	module, library := NewLibrary(android.HostAndDeviceSupported)
+	library.HeaderOnly()
+
+	stub := &generatedHeadersDecorator{
+		libraryDecorator: library,
+	}
+
+	module.linker = stub
+
+	return module.Init()
+}
+
+func init() {
+	android.RegisterModuleType("generated_headers", generatedHeadersFactory)
+}
-- 
2.17.1

