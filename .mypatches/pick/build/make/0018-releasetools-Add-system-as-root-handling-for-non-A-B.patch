From 679086f8fabca334258db2720c4cd3630b32d248 Mon Sep 17 00:00:00 2001
From: Rashed Abdel-Tawab <rashed@linux.com>
Date: Mon, 30 Jul 2018 00:24:28 -0700
Subject: [PATCH 18/20] releasetools: Add system-as-root handling for non-A/B
 backuptool

Non-A/B devices shipping with system-as-root need to use backuptool
in recovery after flashing the new system partition. However, the
current logic assumes the system partition will always be mounted at
/system, which is not the same for these devices. Make the script mount
our own version of system (/system_image) for these devices and execute
backuptool from there.

Change-Id: I1f2259d7d41c54a22992a3bf5fbac50b3cf6ec02
---
 core/Makefile                               |  1 +
 tools/releasetools/ota_from_target_files.py | 30 ++++++++++++++++-----
 2 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/core/Makefile b/core/Makefile
index 648b4d7a0..177c5926a 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -2854,6 +2854,7 @@ $(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) \
 	   -p $(HOST_OUT) \
 	   -k $(KEY_CERT_PAIR) \
 	   --backup=$(backuptool) \
+	   --system_root_build=$(BOARD_BUILD_SYSTEM_ROOT_IMAGE) \
 	   $(if $(OEM_OTA_CONFIG), -o $(OEM_OTA_CONFIG)) \
 	   $(BUILT_TARGET_FILES_PACKAGE) $@
 
diff --git a/tools/releasetools/ota_from_target_files.py b/tools/releasetools/ota_from_target_files.py
index 39ac778a8..da89d5a12 100755
--- a/tools/releasetools/ota_from_target_files.py
+++ b/tools/releasetools/ota_from_target_files.py
@@ -137,6 +137,10 @@ Usage:  ota_from_target_files [flags] input_target_files output_ota_package
   --backup <boolean>
       Enable or disable the execution of backuptool.sh.
       Disabled by default.
+
+  --system_root_build <boolean>
+      Specify whether the build uses a system-as-root layout.
+      Disabled by default.
 """
 
 from __future__ import print_function
@@ -191,6 +195,7 @@ OPTIONS.extracted_input = None
 OPTIONS.key_passwords = []
 OPTIONS.override_device = 'auto'
 OPTIONS.backuptool = False
+OPTIONS.system_root_image = False
 
 METADATA_NAME = 'META-INF/com/android/metadata'
 UNZIP_PATTERN = ['IMAGES/*', 'META/*', 'INSTALL/*', 'SYSTEM/build.prop']
@@ -491,9 +496,14 @@ else if get_stage("%(bcb_dev)s") == "3/3" then
   script.SetPermissionsRecursive("/tmp/install/bin", 0, 0, 0755, 0755, None, None)
 
   if OPTIONS.backuptool:
-    script.Mount("/system")
-    script.RunBackup("backup")
-    script.Unmount("/system")
+    if OPTIONS.system_root_image:
+      script.Mount("/system_image")
+      script.RunBackup("backup")
+      script.Unmount("/system_image")
+    else:
+      script.Mount("/system")
+      script.RunBackup("backup")
+      script.Unmount("/system")
 
   system_progress = 0.75
 
@@ -538,9 +548,14 @@ else if get_stage("%(bcb_dev)s") == "3/3" then
 
   if OPTIONS.backuptool:
     script.ShowProgress(0.02, 10)
-    script.Mount("/system")
-    script.RunBackup("restore")
-    script.Unmount("/system")
+    if OPTIONS.system_root_image:
+      script.Mount("/system_image")
+      script.RunBackup("restore")
+      script.Unmount("/system_image")
+    else:
+      script.Mount("/system")
+      script.RunBackup("restore")
+      script.Unmount("/system")
 
   script.ShowProgress(0.05, 5)
   script.WriteRawImage("/boot", "boot.img")
@@ -1378,6 +1393,8 @@ def main(argv):
       OPTIONS.override_device = a
     elif o in ("--backup"):
       OPTIONS.backuptool = bool(a.lower() == 'true')
+    elif o in ("--system_root_build"):
+      OPTIONS.system_root_image = bool(a.lower() == 'true')
     else:
       return False
     return True
@@ -1411,6 +1428,7 @@ def main(argv):
                                  "extracted_input_target_files=",
                                  "override_device=",
                                  "backup=",
+                                 "system_root_build=",
                              ], extra_option_handler=option_handler)
 
   if len(args) != 2:
-- 
2.17.1

