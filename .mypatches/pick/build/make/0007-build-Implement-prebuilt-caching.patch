From 0f3e2e71fe8279f3d420ae7155dc8e163c002f9a Mon Sep 17 00:00:00 2001
From: Tom Marshall <tdm.code@gmail.com>
Date: Sat, 14 Apr 2018 03:59:49 +0200
Subject: [PATCH 07/20] build: Implement prebuilt caching

Change-Id: Ieb6cefdd370525e3f3c1733e16446a01ce8c7bcd
---
 core/host_shared_library_internal.mk |  9 +++++++++
 core/host_static_library_internal.mk | 23 +++++++++++++++++++++++
 core/main.mk                         |  3 +++
 core/prebuilt_internal.mk            | 14 ++++++++++++++
 core/shared_library_internal.mk      | 10 ++++++++++
 core/static_library_internal.mk      | 23 +++++++++++++++++++++++
 6 files changed, 82 insertions(+)

diff --git a/core/host_shared_library_internal.mk b/core/host_shared_library_internal.mk
index bfbde212b..74f352b29 100644
--- a/core/host_shared_library_internal.mk
+++ b/core/host_shared_library_internal.mk
@@ -25,7 +25,9 @@ $(call host-shared-library-hook)
 skip_build_from_source :=
 ifdef LOCAL_PREBUILT_MODULE_FILE
 ifeq (,$(call if-build-from-source,$(LOCAL_MODULE),$(LOCAL_PATH)))
+prebuilt_is_cached := true
 include $(BUILD_SYSTEM)/prebuilt_internal.mk
+prebuilt_is_cached :=
 skip_build_from_source := true
 endif
 endif
@@ -41,10 +43,17 @@ include $(BUILD_SYSTEM)/binary.mk
 my_host_libprofile_rt := $($(LOCAL_2ND_ARCH_VAR_PREFIX)$(my_prefix)LIBPROFILE_RT)
 $(LOCAL_BUILD_MODULE): PRIVATE_HOST_LIBPROFILE_RT := $(my_host_libprofile_rt)
 
+$(LOCAL_BUILT_MODULE): PRIVATE_INTERMEDIATES_DIR := $(intermediates)
+$(LOCAL_BUILT_MODULE): PRIVATE_CACHE_DIR := $(cache_dir)
+$(LOCAL_BUILT_MODULE): PRIVATE_MODULE_PATH := $(LOCAL_PATH)
+$(LOCAL_BUILT_MODULE): PRIVATE_MODULE_NAME := $(module_relative_name)
+$(LOCAL_BUILT_MODULE): PRIVATE_SRC_FILES := $(LOCAL_SRC_FILES)
+
 $(LOCAL_BUILT_MODULE): \
         $(all_objects) \
         $(all_libraries) \
         $(LOCAL_ADDITIONAL_DEPENDENCIES)
 	$(transform-host-o-to-shared-lib)
+	$(host-save-prebuilt-library)
 
 endif  # skip_build_from_source
diff --git a/core/host_static_library_internal.mk b/core/host_static_library_internal.mk
index 3946aa7bc..1576216a8 100644
--- a/core/host_static_library_internal.mk
+++ b/core/host_static_library_internal.mk
@@ -18,8 +18,31 @@ $(error $(LOCAL_PATH): Cannot set module stem for a library)
 endif
 LOCAL_UNINSTALLABLE_MODULE := true
 
+$(call host-static-library-hook)
+
+skip_build_from_source :=
+ifdef LOCAL_PREBUILT_MODULE_FILE
+ifeq (,$(call if-build-from-source,$(LOCAL_MODULE),$(LOCAL_PATH)))
+prebuilt_is_cached := true
+include $(BUILD_SYSTEM)/prebuilt_internal.mk
+prebuilt_is_cached :=
+skip_build_from_source := true
+endif
+endif
+
+ifndef skip_build_from_source
+
 include $(BUILD_SYSTEM)/binary.mk
 
+$(LOCAL_BUILT_MODULE) : PRIVATE_INTERMEDIATES_DIR := $(intermediates)
+$(LOCAL_BUILT_MODULE) : PRIVATE_CACHE_DIR := $(cache_dir)
+$(LOCAL_BUILT_MODULE) : PRIVATE_MODULE_PATH := $(LOCAL_PATH)
+$(LOCAL_BUILT_MODULE) : PRIVATE_MODULE_NAME := $(module_relative_name)
+$(LOCAL_BUILT_MODULE) : PRIVATE_SRC_FILES := $(LOCAL_SRC_FILES)
+
 $(LOCAL_BUILT_MODULE): $(built_whole_libraries)
 $(LOCAL_BUILT_MODULE): $(all_objects)
 	$(transform-host-o-to-static-lib)
+	$(host-save-prebuilt-library)
+
+endif  # skip_build_from_source
diff --git a/core/main.mk b/core/main.mk
index 8f5e97ee5..0e8b174ee 100644
--- a/core/main.mk
+++ b/core/main.mk
@@ -88,6 +88,9 @@ include $(BUILD_SYSTEM)/cleanbuild.mk
 # Include the google-specific config
 -include vendor/google/build/config.mk
 
+# Include the lineage-specific config
+-include vendor/lineage/build/config.mk
+
 # These are the modifier targets that don't do anything themselves, but
 # change the behavior of the build.
 # (must be defined before including definitions.make)
diff --git a/core/prebuilt_internal.mk b/core/prebuilt_internal.mk
index 620c22cf5..755f73dc9 100644
--- a/core/prebuilt_internal.mk
+++ b/core/prebuilt_internal.mk
@@ -162,6 +162,8 @@ export_cflags += $(LOCAL_EXPORT_CFLAGS)
 else ifdef LOCAL_EXPORT_CFLAGS
 $(call pretty-error,LOCAL_EXPORT_CFLAGS can only be used by Soong, use LOCAL_EXPORT_C_INCLUDE_DIRS instead)
 endif
+ifeq (,$(prebuilt_is_cached))
+# Other prebuilt
 $(export_includes): PRIVATE_EXPORT_CFLAGS := $(export_cflags)
 $(export_includes): $(LOCAL_EXPORT_C_INCLUDE_DEPS)
 	@echo Export includes file: $< -- $@
@@ -171,6 +173,18 @@ ifdef export_cflags
 else
 	$(hide) touch $@
 endif
+else # prebuilt_is_cached set
+# Cached prebuilt
+$(export_includes): PRIVATE_CACHE_DIR := $(cache_dir)
+$(export_includes): PRIVATE_INTERMEDIATES_DIR := $(intermediates)
+$(export_includes): $(cache_dir)/export_includes
+	@echo Export includes file: $< -- $@
+ifdef LOCAL_IS_HOST_MODULE
+	$(host-load-export-includes)
+else
+	$(target-load-export-includes)
+endif
+endif # prebuilt_is_cached
 export_cflags :=
 
 ifdef LOCAL_SDK_VERSION
diff --git a/core/shared_library_internal.mk b/core/shared_library_internal.mk
index 687536b35..2d92afbfa 100644
--- a/core/shared_library_internal.mk
+++ b/core/shared_library_internal.mk
@@ -22,10 +22,13 @@ endif
 
 $(call target-shared-library-hook)
 
+
 skip_build_from_source :=
 ifdef LOCAL_PREBUILT_MODULE_FILE
 ifeq (,$(call if-build-from-source,$(LOCAL_MODULE),$(LOCAL_PATH)))
+prebuilt_is_cached := true
 include $(BUILD_SYSTEM)/prebuilt_internal.mk
+prebuilt_is_cached :=
 skip_build_from_source := true
 endif
 endif
@@ -64,6 +67,12 @@ $(linked_module): PRIVATE_TARGET_LIBATOMIC := $(my_target_libatomic)
 $(linked_module): PRIVATE_TARGET_CRTBEGIN_SO_O := $(my_target_crtbegin_so_o)
 $(linked_module): PRIVATE_TARGET_CRTEND_SO_O := $(my_target_crtend_so_o)
 
+$(linked_module): PRIVATE_INTERMEDIATES_DIR := $(intermediates)
+$(linked_module): PRIVATE_CACHE_DIR := $(cache_dir)
+$(linked_module): PRIVATE_MODULE_PATH := $(LOCAL_PATH)
+$(linked_module): PRIVATE_MODULE_NAME := $(module_relative_name)
+$(linked_module): PRIVATE_SRC_FILES := $(LOCAL_SRC_FILES)
+
 $(linked_module): \
         $(all_objects) \
         $(all_libraries) \
@@ -73,6 +82,7 @@ $(linked_module): \
         $(my_target_libatomic) \
         $(LOCAL_ADDITIONAL_DEPENDENCIES)
 	$(transform-o-to-shared-lib)
+	$(target-save-prebuilt-library)
 
 ifeq ($(my_native_coverage),true)
 gcno_suffix := .gcnodir
diff --git a/core/static_library_internal.mk b/core/static_library_internal.mk
index 6b4d22f12..e310a144f 100644
--- a/core/static_library_internal.mk
+++ b/core/static_library_internal.mk
@@ -18,11 +18,32 @@ ifneq ($(strip $(LOCAL_MODULE_STEM)$(LOCAL_BUILT_MODULE_STEM)),)
 $(error $(LOCAL_PATH): Cannot set module stem for a library)
 endif
 
+$(call target-static-library-hook)
+
+skip_build_from_source :=
+ifdef LOCAL_PREBUILT_MODULE_FILE
+ifeq (,$(call if-build-from-source,$(LOCAL_MODULE),$(LOCAL_PATH)))
+prebuilt_is_cached := true
+include $(BUILD_SYSTEM)/prebuilt_internal.mk
+prebuilt_is_cached :=
+skip_build_from_source := true
+endif
+endif
+
+ifndef skip_build_from_source
+
 include $(BUILD_SYSTEM)/binary.mk
 
+$(LOCAL_BUILT_MODULE) : PRIVATE_INTERMEDIATES_DIR := $(intermediates)
+$(LOCAL_BUILT_MODULE) : PRIVATE_CACHE_DIR := $(cache_dir)
+$(LOCAL_BUILT_MODULE) : PRIVATE_MODULE_PATH := $(LOCAL_PATH)
+$(LOCAL_BUILT_MODULE) : PRIVATE_MODULE_NAME := $(module_relative_name)
+$(LOCAL_BUILT_MODULE) : PRIVATE_SRC_FILES := $(LOCAL_SRC_FILES)
+
 $(LOCAL_BUILT_MODULE) : $(built_whole_libraries)
 $(LOCAL_BUILT_MODULE) : $(all_objects)
 	$(transform-o-to-static-lib)
+	$(target-save-prebuilt-library)
 
 ifeq ($(NATIVE_COVERAGE),true)
 gcno_suffix := .gcnodir
@@ -43,3 +64,5 @@ $(intermediates)/$(GCNO_ARCHIVE) : PRIVATE_INTERMEDIATES_DIR := $(intermediates)
 $(intermediates)/$(GCNO_ARCHIVE) : $(LOCAL_GCNO_FILES) $(built_whole_gcno_libraries)
 	$(transform-o-to-static-lib)
 endif
+
+endif  # skip_build_from_source
-- 
2.17.1

