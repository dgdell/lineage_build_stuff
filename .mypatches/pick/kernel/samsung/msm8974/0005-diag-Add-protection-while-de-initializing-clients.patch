From e3c5d93e548989f42731df0abd857de8f5fd65b4 Mon Sep 17 00:00:00 2001
From: Mohit Aggarwal <maggarwa@codeaurora.org>
Date: Thu, 6 Jul 2017 10:16:52 +0530
Subject: [PATCH 05/47] diag: Add protection while de-initializing clients

Currently, while de-initializing clients, there is
a possibility of using already freed memory. The
patch adds proper protection to fix the issue.

CRs-Fixed: 2068569
Bug: 68870904
Change-Id: I4b397a82e03fa2f1c84cfa8ca912cdb6a51ba08b
Signed-off-by: Mohit Aggarwal <maggarwa@codeaurora.org>
[haggertk: Backport to 3.4/msm8974]
CVE-2018-3561
Signed-off-by: Kevin F. Haggerty <haggertk@lineageos.org>
---
 drivers/char/diag/diagchar_core.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/char/diag/diagchar_core.c b/drivers/char/diag/diagchar_core.c
index 3afd5e80f67..a791a7ca917 100644
--- a/drivers/char/diag/diagchar_core.c
+++ b/drivers/char/diag/diagchar_core.c
@@ -1109,12 +1109,16 @@ long diagchar_ioctl(struct file *filp,
 		result = diag_dci_clear_event_mask();
 		break;
 	case DIAG_IOCTL_LSM_DEINIT:
+		mutex_lock(&driver->diagchar_mutex);
 		for (i = 0; i < driver->num_clients; i++)
 			if (driver->client_map[i].pid == current->tgid)
 				break;
-		if (i == driver->num_clients)
+		if (i == driver->num_clients) {
+			mutex_unlock(&driver->diagchar_mutex);
 			return -EINVAL;
+		}
 		driver->data_ready[i] |= DEINIT_TYPE;
+		mutex_unlock(&driver->diagchar_mutex);
 		wake_up_interruptible(&driver->wait_q);
 		result = 1;
 		break;
-- 
2.17.1

