From 9b6428de2a3abb0e1b24eff6a3e904ff72f80966 Mon Sep 17 00:00:00 2001
From: Sai Krishna Juturi <jsaikrishna@codeaurora.org>
Date: Wed, 22 Nov 2017 16:40:18 +0530
Subject: [PATCH 23/60] net: usb: rmnet_usb_ctrl: Fix use after free issue

In rmnet_usb_ctrl_init dev is freed again it is
dereferenced with in same block. Fix this issue
by taking derefernced value into a local variable
prior to freeing dev.

Change-Id: Ic51accc8949e97c8aaeda558adcc9d404fb2a26d
Signed-off-by: Sai Krishna Juturi <jsaikrishna@codeaurora.org>
CVE-2018-3584
Signed-off-by: Kevin F. Haggerty <haggertk@lineageos.org>
---
 drivers/net/usb/rmnet_usb_ctrl.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/net/usb/rmnet_usb_ctrl.c b/drivers/net/usb/rmnet_usb_ctrl.c
index 2f0d75c3606..da7025162ee 100644
--- a/drivers/net/usb/rmnet_usb_ctrl.c
+++ b/drivers/net/usb/rmnet_usb_ctrl.c
@@ -1195,12 +1195,13 @@ int rmnet_usb_ctrl_init(int no_rmnet_devs, int no_rmnet_insts_per_dev)
 						     "%s%d", rmnet_dev_names[i],
 						     n);
 			if (IS_ERR(dev->devicep)) {
+				long status = PTR_ERR(dev->devicep);
 				pr_err("%s: device_create() returned %ld\n",
-					__func__, PTR_ERR(dev->devicep));
+					__func__, status);
 				cdev_del(&dev->cdev);
 				destroy_workqueue(dev->wq);
 				kfree(dev);
-				return PTR_ERR(dev->devicep);
+				return status;
 			}
 
 			/*create /sys/class/hsicctl/hsicctlx/modem_wait*/
-- 
2.17.1

