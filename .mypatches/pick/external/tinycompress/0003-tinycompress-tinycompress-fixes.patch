From a27eae21ad3129183d82d0bd09c60f8318b00edd Mon Sep 17 00:00:00 2001
From: Preetam Singh Ranawat <apranawat@codeaurora.org>
Date: Tue, 17 Jan 2017 11:57:09 +0530
Subject: [PATCH 3/4] tinycompress: tinycompress fixes

tinycompress: Add support to send codec specific data
change-Id: If6f2a0d75140614c283ae444fc51b9b505d200f0

tinycompress: include kernel headers
Change-Id: I3e6de1276b4b16599eff2b1cbce7473e2d7fc216

tinycompress: Set additional metadata for flac stream
change-Id: I6b67ab3853637dff4fc6aee00137be2888ca6c86

tinycompress: Add get_metadata() and set_metadata() API support
Change-Id: Id81bd8585ed389efc3d0c830cb6cc1678d4d4e56

Change-Id: I9c3f39e22d7246fbb7cf665a4b5ce71a74e07495
---
 compress.c                          | 43 +++++++++++++++++++++++++++++
 include/tinycompress/tinycompress.h | 21 ++++++++++++++
 2 files changed, 64 insertions(+)

diff --git a/compress.c b/compress.c
index d1a2283..8fa1386 100644
--- a/compress.c
+++ b/compress.c
@@ -572,6 +572,17 @@ int compress_set_gapless_metadata(struct compress *compress,
 	return 0;
 }
 
+int compress_set_next_track_param(struct compress *compress,
+	union snd_codec_options *codec_options)
+{
+	if (!is_compress_running(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_SET_NEXT_TRACK_PARAM, codec_options))
+		return oops(compress, errno, "cannot set next track params\n");
+	return 0;
+}
+
 bool is_codec_supported(unsigned int card, unsigned int device,
 		unsigned int flags, struct snd_codec *codec)
 {
@@ -630,3 +641,35 @@ int compress_wait(struct compress *compress, int timeout_ms)
 	return oops(compress, EIO, "poll signalled unhandled event");
 }
 
+int compress_get_metadata(struct compress *compress,
+		struct snd_compr_metadata *mdata) {
+	int version;
+	if (!is_compress_ready(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	version = get_compress_version(compress);
+	if (version <= 0)
+		return -1;
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_GET_METADATA, mdata)) {
+		return oops(compress, errno, "can't get metadata for stream\n");
+	}
+	return 0;
+}
+
+int compress_set_metadata(struct compress *compress,
+		struct snd_compr_metadata *mdata) {
+
+	int version;
+	if (!is_compress_ready(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	version = get_compress_version(compress);
+	if (version <= 0)
+		return -1;
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_SET_METADATA, mdata)) {
+		return oops(compress, errno, "can't set metadata for stream\n");
+	}
+	return 0;
+}
diff --git a/include/tinycompress/tinycompress.h b/include/tinycompress/tinycompress.h
index 9f95b87..f88c2a2 100644
--- a/include/tinycompress/tinycompress.h
+++ b/include/tinycompress/tinycompress.h
@@ -81,6 +81,8 @@ struct compr_gapless_mdata {
 
 struct compress;
 struct snd_compr_tstamp;
+union snd_codec_options;
+struct snd_compr_metadata;
 
 /*
  * compress_open: open a new compress stream
@@ -235,6 +237,18 @@ int compress_partial_drain(struct compress *compress);
 int compress_set_gapless_metadata(struct compress *compress,
 			struct compr_gapless_mdata *mdata);
 
+/*
+ * compress_set_next_track_param: set params of next compress stream in gapless
+ *
+ * return 0 on success, negative on error
+ *
+ * @compress: compress stream for which codec options has to be set
+ * @codec_options: codec options of compress stream based on codec type
+ */
+
+int compress_set_next_track_param(struct compress *compress,
+			union snd_codec_options *codec_options);
+
 /*
  * is_codec_supported:check if the given codec is supported
  * returns true when supported, false if not
@@ -291,6 +305,13 @@ const char *compress_get_error(struct compress *compress);
 /* utility functions */
 unsigned int compress_get_alsa_rate(unsigned int rate);
 
+/* set metadata */
+int compress_set_metadata(struct compress *compress,
+	    struct snd_compr_metadata *mdata);
+
+/* get metadata */
+int compress_get_metadata(struct compress *compress,
+	    struct snd_compr_metadata *mdata);
 
 #if defined(__cplusplus)
 }
-- 
2.17.1

