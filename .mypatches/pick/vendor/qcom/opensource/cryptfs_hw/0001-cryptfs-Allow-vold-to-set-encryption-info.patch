From aa6361048252639aa2bc244f65b1e4f5012f7ffe Mon Sep 17 00:00:00 2001
From: Neeraj Soni <neersoni@codeaurora.org>
Date: Fri, 9 Feb 2018 19:54:58 +0530
Subject: [PATCH] cryptfs: Allow vold to set encryption info

Vold needs to set partition and ICE specific
data before encryption starts.

Change-Id: I5d26b9c9ba1025c61d97004fea37ef35b081cf5a
Signed-off-by: Neeraj Soni <neersoni@codeaurora.org>
---
 cryptfs_hw.c | 15 +++++++++++++++
 cryptfs_hw.h |  7 ++++++-
 2 files changed, 21 insertions(+), 1 deletion(-)
 mode change 100755 => 100644 cryptfs_hw.c
 mode change 100755 => 100644 cryptfs_hw.h

diff --git a/cryptfs_hw.c b/cryptfs_hw.c
old mode 100755
new mode 100644
index 5b52eb6..329c4b1
--- a/cryptfs_hw.c
+++ b/cryptfs_hw.c
@@ -87,6 +87,8 @@ static int (*qseecom_wipe_key)(int);
 #define CRYPTFS_HW_WIPE_KEY_FAILED			-8
 #define CRYPTFS_HW_CREATE_KEY_FAILED			-7
 
+#define CRYPTFS_HW_ALGO_MODE_AES_XTS 			0x3
+
 enum cryptfs_hw_key_management_usage_type {
 	CRYPTFS_HW_KM_USAGE_DISK_ENCRYPTION		= 0x01,
 	CRYPTFS_HW_KM_USAGE_FILE_ENCRYPTION		= 0x02,
@@ -209,6 +211,19 @@ static int cryptfs_hw_wipe_key(enum cryptfs_hw_key_management_usage_type usage)
 	return ret;
 }
 
+int set_ice_param(int flag)
+{
+	int  qseecom_fd, ret = -1;
+	struct qseecom_ice_data_t ice_data;
+	qseecom_fd = open("/dev/qseecom", O_RDWR);
+	if (qseecom_fd < 0)
+		return ret;
+	ice_data.flag = flag;
+	ret = ioctl(qseecom_fd, QSEECOM_IOCTL_SET_ICE_INFO, &ice_data);
+	close(qseecom_fd);
+	return ret;
+}
+
 static int cryptfs_hw_clear_key(enum cryptfs_hw_key_management_usage_type usage)
 {
 	int32_t ret;
diff --git a/cryptfs_hw.h b/cryptfs_hw.h
old mode 100755
new mode 100644
index 9862212..d395a99
--- a/cryptfs_hw.h
+++ b/cryptfs_hw.h
@@ -33,6 +33,11 @@
 extern "C" {
 #endif
 
+/*This is equivalent of MAX_CRYPTO_TYPE_NAME_LEN*/
+#define CRYPTO_ALGO_LENGTH 64
+#define START_ENC 0x1
+#define START_ENCDEC 0x3
+
 int set_hw_device_encryption_key(const char*, const char*);
 int update_hw_device_encryption_key(const char*, const char*, const char*);
 int clear_hw_device_encryption_key();
@@ -40,7 +45,7 @@ unsigned int is_hw_disk_encryption(const char*);
 unsigned int is_hw_fde_enabled(void);
 int is_ice_enabled(void);
 int should_use_keymaster();
-
+int set_ice_param(int flag);
 #ifdef __cplusplus
 }
 #endif
-- 
2.17.1

