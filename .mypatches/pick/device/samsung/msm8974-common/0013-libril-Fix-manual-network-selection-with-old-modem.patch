From 4683d57e4763a1542bad7e33d7a66c2e245faa26 Mon Sep 17 00:00:00 2001
From: faust93 <monumentum@gmail.com>
Date: Wed, 19 Sep 2018 14:26:54 +0800
Subject: [PATCH 13/16] libril: Fix manual network selection with old modem

 * Old modem sends and applies mccmnc+network type, but new aosp
   telephony uses only digits.
 * Manually cut or append the "+" and strings after that to work around.

Change-Id: I1015e6c0d6afdc0c03d70e9491d49331703eddcc
---
 ril/libril/Android.mk      |  4 ++++
 ril/libril/ril_service.cpp | 13 +++++++++++++
 2 files changed, 17 insertions(+)

diff --git a/ril/libril/Android.mk b/ril/libril/Android.mk
index a0078f6..6233933 100644
--- a/ril/libril/Android.mk
+++ b/ril/libril/Android.mk
@@ -42,6 +42,10 @@ ifneq ($(DISABLE_RILD_OEM_HOOK),)
     LOCAL_CFLAGS += -DOEM_HOOK_DISABLED
 endif
 
+ifneq ($(TARGET_USE_OLD_MNC_FORMAT),)
+    LOCAL_CFLAGS += -DOLD_MNC_FORMAT
+endif
+
 LOCAL_C_INCLUDES += external/nanopb-c
 LOCAL_C_INCLUDES += $(LOCAL_PATH)/../include
 LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)/../include
diff --git a/ril/libril/ril_service.cpp b/ril/libril/ril_service.cpp
index f218832..353eb74 100644
--- a/ril/libril/ril_service.cpp
+++ b/ril/libril/ril_service.cpp
@@ -1362,8 +1362,15 @@ Return<void> RadioImpl::setNetworkSelectionModeManual(int32_t serial,
 #if VDBG
     RLOGD("setNetworkSelectionModeManual: serial %d", serial);
 #endif
+#ifndef OLD_MNC_FORMAT
     dispatchString(serial, mSlotId, RIL_REQUEST_SET_NETWORK_SELECTION_MANUAL,
             operatorNumeric.c_str());
+#else
+    std::string opNum = operatorNumeric;
+    opNum.append("+");
+    dispatchString(serial, mSlotId, RIL_REQUEST_SET_NETWORK_SELECTION_MANUAL,
+            opNum.c_str());
+#endif
     return Void();
 }
 
@@ -4586,7 +4593,13 @@ int radio::getAvailableNetworksResponse(int slotId,
             for (int i = 0, j = 0; i < numStrings; i = i + qanRespStrings, j++) {
                 networks[j].alphaLong = convertCharPtrToHidlString(resp[i]);
                 networks[j].alphaShort = convertCharPtrToHidlString(resp[i + 1]);
+#ifndef OLD_MNC_FORMAT
                 networks[j].operatorNumeric = convertCharPtrToHidlString(resp[i + 2]);
+#else
+                std::string opNum = convertCharPtrToHidlString(resp[i + 2]);
+                std::size_t mccmncIdx = opNum.find_last_of("+");
+                networks[j].operatorNumeric = opNum.substr(0,mccmncIdx);
+#endif
                 int status = convertOperatorStatusToInt(resp[i + 3]);
                 if (status == -1) {
                     if (e == RIL_E_SUCCESS) responseInfo.error = RadioError::INVALID_RESPONSE;
-- 
2.17.1

