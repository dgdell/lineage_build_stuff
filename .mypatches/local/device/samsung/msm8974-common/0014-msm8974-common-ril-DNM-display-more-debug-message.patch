From 9099712093bb25c1af021703e30f0a50a124d661 Mon Sep 17 00:00:00 2001
From: nx111 <gd.zhangdz@gmail.com>
Date: Fri, 7 Sep 2018 23:45:57 +0800
Subject: [PATCH 14/14] msm8974-common: ril: [DNM] display more debug message.

Change-Id: If422afc01719f7cc7d5394b669d189c632610787
---
 ril/libril/ril_internal.h  |  4 ++--
 ril/libril/ril_service.cpp | 25 +++++++++++++++++++++++++
 2 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/ril/libril/ril_internal.h b/ril/libril/ril_internal.h
index 350791b..de9cd48 100644
--- a/ril/libril/ril_internal.h
+++ b/ril/libril/ril_internal.h
@@ -33,12 +33,12 @@ namespace android {
 #define RESPONSE_UNSOLICITED_ACK_EXP 4
 
 // Enable verbose logging
-#define VDBG 0
+#define VDBG 1
 
 #define MIN(a,b) ((a)<(b) ? (a) : (b))
 
 // Enable RILC log
-#define RILC_LOG 0
+#define RILC_LOG 1
 
 #if RILC_LOG
     #define startRequest           sprintf(printBuf, "(")
diff --git a/ril/libril/ril_service.cpp b/ril/libril/ril_service.cpp
index e69d9bb..d7d8e55 100644
--- a/ril/libril/ril_service.cpp
+++ b/ril/libril/ril_service.cpp
@@ -560,6 +560,9 @@ bool dispatchVoid(int serial, int slotId, int request) {
     if (pRI == NULL) {
         return false;
     }
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, NULL, 0, pRI, slotId);
     return true;
 }
@@ -575,6 +578,9 @@ bool dispatchString(int serial, int slotId, int request, const char * str) {
         return false;
     }
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, pString, sizeof(char *), pRI, slotId);
 
     memsetAndFreeStrings(1, pString);
@@ -609,6 +615,9 @@ bool dispatchStrings(int serial, int slotId, int request, bool allowEmpty, int c
     }
     va_end(ap);
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, pStrings, countStrings * sizeof(char *), pRI, slotId);
 
     if (pStrings != NULL) {
@@ -649,6 +658,9 @@ bool dispatchStrings(int serial, int slotId, int request, const hidl_vec<hidl_st
         }
     }
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, pStrings, countStrings * sizeof(char *), pRI, slotId);
 
     if (pStrings != NULL) {
@@ -667,6 +679,7 @@ bool dispatchStrings(int serial, int slotId, int request, const hidl_vec<hidl_st
 bool dispatchInts(int serial, int slotId, int request, int countInts, ...) {
     RequestInfo *pRI = android::addRequestToList(serial, slotId, request);
     if (pRI == NULL) {
+        RLOGE("dispatchInts: pRI == NULL, return false...");
         return false;
     }
 
@@ -684,6 +697,9 @@ bool dispatchInts(int serial, int slotId, int request, int countInts, ...) {
     }
     va_end(ap);
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, pInts, countInts * sizeof(int), pRI, slotId);
 
     if (pInts != NULL) {
@@ -713,6 +729,9 @@ bool dispatchCallForwardStatus(int serial, int slotId, int request,
         return false;
     }
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, &cf, sizeof(cf), pRI, slotId);
 
     memsetAndFreeStrings(1, cf.number);
@@ -728,6 +747,9 @@ bool dispatchRaw(int serial, int slotId, int request, const hidl_vec<uint8_t>& r
 
     const uint8_t *uData = rawBytes.data();
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, (void *) uData, rawBytes.size(), pRI, slotId);
 
     return true;
@@ -752,6 +774,9 @@ bool dispatchIccApdu(int serial, int slotId, int request, const SimApdu& message
         return false;
     }
 
+#if VDBG
+    RLOGD("%s => %s", __FUNCTION__, requestToString(request));
+#endif
     CALL_ONREQUEST(request, &apdu, sizeof(apdu), pRI, slotId);
 
     memsetAndFreeStrings(1, apdu.data);
-- 
2.17.1

