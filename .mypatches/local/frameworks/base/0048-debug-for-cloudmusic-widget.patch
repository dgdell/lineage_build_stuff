From b45af00535639abcdad02504938b88ab30bea8f7 Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Wed, 24 Oct 2018 21:20:53 +0800
Subject: [PATCH 48/48] debug for cloudmusic widget

Change-Id: I80a60f2e8e942a57cb399f68cf762b797954b30f
---
 .../server/pm/PackageManagerService.java      | 20 +++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index f306b3f2ab4..c78f73c36ec 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -416,7 +416,7 @@ public class PackageManagerService extends IPackageManager.Stub
     public static final boolean DEBUG_REMOVE = false;
     private static final boolean DEBUG_BROADCASTS = false;
     private static final boolean DEBUG_SHOW_INFO = false;
-    private static final boolean DEBUG_PACKAGE_INFO = false;
+    private static final boolean DEBUG_PACKAGE_INFO = true;
     private static final boolean DEBUG_INTENT_MATCHING = false;
     public static final boolean DEBUG_PACKAGE_SCANNING = false;
     private static final boolean DEBUG_VERIFY = false;
@@ -4538,7 +4538,7 @@ public class PackageManagerService extends IPackageManager.Stub
                     PackageManager.VERSION_CODE_HIGHEST);
 
             PackageParser.Package p = mPackages.get(packageName);
-            if (DEBUG_PACKAGE_INFO) Log.v(
+            if (DEBUG_PACKAGE_INFO && p == null) Log.v(
                     TAG, "getApplicationInfo " + packageName
                     + ": " + p);
             if (p != null) {
@@ -4567,6 +4567,9 @@ public class PackageManagerService extends IPackageManager.Stub
                         flags, filterCallingUid, userId);
             }
         }
+        if (DEBUG_PACKAGE_INFO) Log.v(
+                    TAG, "getApplicationInfo " + packageName
+                    + " return null ");
         return null;
     }
 
@@ -8887,9 +8890,18 @@ public class PackageManagerService extends IPackageManager.Stub
             // add it to mPackages if there isn't already a package in the collection and then throw
             // an exception to use the application already installed on the /data partition.
             synchronized (mPackages) {
+                if (DEBUG_PACKAGE_INFO){
+                    Log.v(TAG, " addForInitLI: " + pkg.packageName);
+                }
                 if (!mPackages.containsKey(pkg.packageName)) {
                     mPackages.put(pkg.packageName, pkg);
+                    if (DEBUG_PACKAGE_INFO){
+                        Log.v(TAG, " addForInitLI: " + pkg.packageName + "(added).");
+                    }
+                }else if (DEBUG_PACKAGE_INFO){
+                    Log.v(TAG, " addForInitLI: " + pkg.packageName + " (not added).");
                 }
+
             }
             throw new PackageManagerException(Log.WARN, "Package " + pkg.packageName + " at "
                     + pkg.codePath + " ignored: updated version " + pkgSetting.versionCode
@@ -11529,6 +11541,10 @@ public class PackageManagerService extends IPackageManager.Stub
             mSettings.insertPackageSettingLPw(pkgSetting, pkg);
             // Add the new setting to mPackages
             mPackages.put(pkg.applicationInfo.packageName, pkg);
+            if (DEBUG_PACKAGE_INFO){
+                Log.v(TAG, " commitPackageSettings: " + pkg.packageName + " (added).");
+            }
+
             // Make sure we don't accidentally delete its data.
             final Iterator<PackageCleanItem> iter = mSettings.mPackagesToBeCleaned.iterator();
             while (iter.hasNext()) {
-- 
2.17.1

