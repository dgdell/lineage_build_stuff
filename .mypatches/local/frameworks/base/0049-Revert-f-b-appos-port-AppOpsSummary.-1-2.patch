From 6b8822dfe1d17e86b587dda1c91561498dc8df82 Mon Sep 17 00:00:00 2001
From: nx111 <gd.zhangdz@gmail.com>
Date: Fri, 19 Oct 2018 16:48:54 +0800
Subject: [PATCH 49/50] Revert "f/b: appos:  port AppOpsSummary. (1/2)"

This reverts commit b3624e7e38034538292734f2315bb68b61c75fd7.
---
 core/java/android/app/AppOpsManager.java      | 39 +------------------
 core/java/android/os/UserManager.java         | 12 ------
 .../com/android/server/AppOpsService.java     |  3 --
 3 files changed, 1 insertion(+), 53 deletions(-)

diff --git a/core/java/android/app/AppOpsManager.java b/core/java/android/app/AppOpsManager.java
index 001dc1ba4ad9..6ccf01c008a2 100644
--- a/core/java/android/app/AppOpsManager.java
+++ b/core/java/android/app/AppOpsManager.java
@@ -352,12 +352,8 @@ public class AppOpsManager {
     public static final int OP_START_FOREGROUND = 76;
     /** @hide */
     public static final int OP_BLUETOOTH_SCAN = 77;
-    /** @hide Boot completed */
-    public static final int OP_BOOT_COMPLETED = 78;
-    /** @hide SU access */
-    public static final int OP_SU = 79;
     /** @hide */
-    public static final int _NUM_OP = 80;
+    public static final int _NUM_OP = 78;
 
     /** Access to coarse location information. */
     public static final String OPSTR_COARSE_LOCATION = "android:coarse_location";
@@ -601,10 +597,6 @@ public class AppOpsManager {
     public static final String OPSTR_START_FOREGROUND = "android:start_foreground";
     /** @hide */
     public static final String OPSTR_BLUETOOTH_SCAN = "android:bluetooth_scan";
-    /** @hide */
-    public static final String OPSTR_BOOT_COMPLETED = "android:boot_completed";
-    /** @hide */
-    public static final String OPSTR_SU = "android:su";
 
     // Warning: If an permission is added here it also has to be added to
     // com.android.packageinstaller.permission.utils.EventLogger
@@ -654,7 +646,6 @@ public class AppOpsManager {
             OP_WRITE_SETTINGS,
             OP_REQUEST_INSTALL_PACKAGES,
             OP_START_FOREGROUND,
-            OP_SU,
     };
 
     /**
@@ -744,8 +735,6 @@ public class AppOpsManager {
             OP_MANAGE_IPSEC_TUNNELS,            // MANAGE_IPSEC_HANDOVERS
             OP_START_FOREGROUND,                // START_FOREGROUND
             OP_COARSE_LOCATION,                 // BLUETOOTH_SCAN
-            OP_BOOT_COMPLETED,                  // BOOT_COMPLETED
-            OP_SU,                              // SU
     };
 
     /**
@@ -830,8 +819,6 @@ public class AppOpsManager {
             OPSTR_MANAGE_IPSEC_TUNNELS,
             OPSTR_START_FOREGROUND,
             OPSTR_BLUETOOTH_SCAN,
-            OPSTR_BOOT_COMPLETED,
-            OPSTR_SU,
     };
 
     /**
@@ -917,8 +904,6 @@ public class AppOpsManager {
             "MANAGE_IPSEC_TUNNELS",
             "START_FOREGROUND",
             "BLUETOOTH_SCAN",
-            "BOOT_COMPLETED",
-            "SU",
     };
 
     /**
@@ -1004,8 +989,6 @@ public class AppOpsManager {
             null, // no permission for OP_MANAGE_IPSEC_TUNNELS
             Manifest.permission.FOREGROUND_SERVICE,
             null, // no permission for OP_BLUETOOTH_SCAN
-            Manifest.permission.RECEIVE_BOOT_COMPLETED,
-            null, // no permission for OP_SU
     };
 
     /**
@@ -1092,8 +1075,6 @@ public class AppOpsManager {
             null, // MANAGE_IPSEC_TUNNELS
             null, // START_FOREGROUND
             null, // maybe should be UserManager.DISALLOW_SHARE_LOCATION, //BLUETOOTH_SCAN
-            null, //BOOT_COMPLETED
-            UserManager.DISALLOW_SU, //SU TODO: this should really be investigated.
     };
 
     /**
@@ -1179,8 +1160,6 @@ public class AppOpsManager {
             false, // MANAGE_IPSEC_HANDOVERS
             false, // START_FOREGROUND
             true, // BLUETOOTH_SCAN
-            true, // BOOT_COMPLETED
-            false, // SU
     };
 
     /**
@@ -1265,8 +1244,6 @@ public class AppOpsManager {
             AppOpsManager.MODE_ERRORED,  // MANAGE_IPSEC_TUNNELS
             AppOpsManager.MODE_ALLOWED,  // OP_START_FOREGROUND
             AppOpsManager.MODE_ALLOWED,  // OP_BLUETOOTH_SCAN
-            AppOpsManager.MODE_ALLOWED, // OP_BOOT_COMPLETED
-            AppOpsManager.MODE_ALLOWED,  // OP_SU
     };
 
     /**
@@ -1355,8 +1332,6 @@ public class AppOpsManager {
             false, // MANAGE_IPSEC_TUNNELS
             false, // START_FOREGROUND
             false, // BLUETOOTH_SCAN
-            false, // OP_BOOT_COMPLETED
-            false, // OP_SU
     };
 
     /**
@@ -1371,18 +1346,6 @@ public class AppOpsManager {
 
     private static HashMap<String, Integer> sNameToOp = new HashMap<String, Integer>();
 
-    /**
-     * App op guard states.
-     * @hide
-     */
-    public static final int[] PRIVACY_GUARD_OP_STATES = new int[] {
-            OP_COARSE_LOCATION,
-            OP_READ_CALL_LOG,
-            OP_READ_CONTACTS,
-            OP_READ_CALENDAR,
-            OP_READ_SMS,
-    };
-
     static {
         if (sOpToSwitch.length != _NUM_OP) {
             throw new IllegalStateException("sOpToSwitch length " + sOpToSwitch.length
diff --git a/core/java/android/os/UserManager.java b/core/java/android/os/UserManager.java
index bfe4e4d4ebac..b5918519d872 100644
--- a/core/java/android/os/UserManager.java
+++ b/core/java/android/os/UserManager.java
@@ -1012,18 +1012,6 @@ public class UserManager {
     public static final String EXTRA_USER_ACCOUNT_OPTIONS
             = "android.os.extra.USER_ACCOUNT_OPTIONS";
 
-    /**
-     * Specifies if the user is not allowed to use SU commands.
-     * The default value is <code>false</code>.
-     *
-     * <p/>Key for user restrictions.
-     * <p/>Type: Boolean
-     * @see #setUserRestrictions(Bundle)
-     * @see #getUserRestrictions()
-     * @hide
-     */
-    public static final String DISALLOW_SU = "no_su";
-
     /** @hide */
     public static final int PIN_VERIFICATION_FAILED_INCORRECT = -3;
     /** @hide */
diff --git a/services/core/java/com/android/server/AppOpsService.java b/services/core/java/com/android/server/AppOpsService.java
index 6589dd0df699..98b30a6e2cc7 100644
--- a/services/core/java/com/android/server/AppOpsService.java
+++ b/services/core/java/com/android/server/AppOpsService.java
@@ -2364,9 +2364,6 @@ public class AppOpsService extends IAppOpsService.Stub {
                             // Backwards compat.
                             op.rejectTime[AppOpsManager.UID_STATE_TOP] = Long.parseLong(value);
                             break;
-                        case "n":
-                        case "ns":
-                            break;
                         default:
                             Slog.w(TAG, "Unknown attribute in 'op' tag: " + name);
                             break;
-- 
2.17.1

