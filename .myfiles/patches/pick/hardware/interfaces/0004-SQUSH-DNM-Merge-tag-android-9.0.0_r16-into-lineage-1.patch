From 8a93541ffbf446926e2653e4e0f7e9e0ade1fc4d Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Tue, 6 Nov 2018 14:56:23 +0100
Subject: [PATCH 4/4] [SQUSH][DNM] Merge tag 'android-9.0.0_r16' into
 lineage-16.0

commit d12eece09cd4ea6f72e024fe6ffdff638b105bf7
Merge: 0a02c313a 8970ac88e
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Wed Aug 22 03:08:34 2018 +0000

    Snap for 4969136 from 8970ac88eda0307484d8d577dbe24606c1ba0eb9 to pi-qpr1-release

    Change-Id: I1289f86471468da23ccbbe7ce96026d59e51ef4a

commit 8970ac88eda0307484d8d577dbe24606c1ba0eb9
Merge: 472e5f435 dd06d73ca
Author: Nathan Harold <nharold@google.com>
Date:   Mon Aug 20 20:43:32 2018 -0700

    [automerger skipped] Add docs for setSignalStrengthReportingCriteria
    am: dd06d73cab  -s ours

    Change-Id: Ief59f8006e6a70f202b94f6d7225273deb67e800

commit 0a02c313a744c571ede0e4f0dfea4820337be72e
Merge: 49731f6d9 472e5f435
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Tue Aug 21 03:05:11 2018 +0000

    Snap for 4966094 from 472e5f435552db9b72209c22ae98eb1a19538831 to pi-qpr1-release

    Change-Id: Iecb2da93fcab3512231aeb3b747e1031e15d1def

commit dd06d73cabd7ca0df542e7384978c4c6b5087632
Author: Nathan Harold <nharold@google.com>
Date:   Thu Jun 21 11:46:42 2018 -0700

    Add docs for setSignalStrengthReportingCriteria

    Because setSignalStrengthReportingCriteria only
    supports a single measurement quantity, provide
    further clarification on the applicability of the
    API and how it may be used in various situations.

    Bug: 110121199
    Test: compilation - docstring-only change
    Merged-In: If4236070fbc03368e5a78b0cf502cdc4a529a6ed
    Change-Id: If4236070fbc03368e5a78b0cf502cdc4a529a6ed
    (cherry picked from commit 529d2fffa02451406f013b354fd7c07164f619b1)

commit 472e5f435552db9b72209c22ae98eb1a19538831
Merge: 095e15e00 6a20e646e
Author: Steven Moreland <smoreland@google.com>
Date:   Mon Aug 20 17:33:46 2018 -0700

    Merge "Add back keymaster@4.0 hash." into pie-vts-dev
    am: 6a20e646e4

    Change-Id: I72ce314c50518e1ff04b09ab947678c4f63fd261

commit 6a20e646e4fe1ab7c4ed4034d01e42bb35aca322
Merge: 46a5d4f73 a00fa0d37
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Mon Aug 20 23:44:03 2018 +0000

    Merge "Add back keymaster@4.0 hash." into pie-vts-dev

commit 095e15e000e55bf0bec4a38b72b6f84d22ddddd6
Merge: cfc4356fb ec720564d
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Aug 20 23:33:25 2018 +0000

    Merge "Add back keymaster@4.0 hash." into pi-dev

commit cfc4356fb21a7dc1d68b1e587d903501c25e3d1a
Merge: 6be235190 46a5d4f73
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Mon Aug 20 11:38:45 2018 -0700

    [automerger skipped] resolve merge conflicts of cd02298b46cfb17954555e0f1d324f63085aa204 to oreo-mr1-vts-dev am: 79cea44239  -s ours
    am: 46a5d4f73b

    Change-Id: I35b563f58df2cfda3b89be22806217a2b980e2de

commit 46a5d4f73b5ffa8527e70b5b0e4ebcff689906d6
Merge: a3268e954 79cea4423
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Mon Aug 20 11:29:40 2018 -0700

    [automerger skipped] resolve merge conflicts of cd02298b46cfb17954555e0f1d324f63085aa204 to oreo-mr1-vts-dev
    am: 79cea44239  -s ours

    Change-Id: I17d4a58573074b7746a9d35be04414f9227ec47e

commit 6be2351904d6f3c2ac15fa5828af8bff7a614c9b
Merge: 0743b3c82 a3268e954
Author: Kevin Rocard <krocard@google.com>
Date:   Mon Aug 20 11:26:42 2018 -0700

    Effect VTS: Allow an effect proxy as pre/post processing am: 0f0328fc4e
    am: a3268e954d

    Change-Id: I1b64d0dd51dcae43bf7f17f1b0683b01aeeae6d2

commit a3268e954d3d75b0a6a77f5d70fbef218b0364f9
Merge: a73a8c9b2 0f0328fc4
Author: Kevin Rocard <krocard@google.com>
Date:   Mon Aug 20 11:13:35 2018 -0700

    Effect VTS: Allow an effect proxy as pre/post processing
    am: 0f0328fc4e

    Change-Id: I570e2a73de01900cf39b5d08cfed370ee17a0e38

commit a00fa0d3720d76dc88478e1ef062e611d8fe7361
Author: Steven Moreland <smoreland@google.com>
Date:   Mon Aug 20 10:46:48 2018 -0700

    Add back keymaster@4.0 hash.

    This was changed after this branch was released. The originally
    released hash needs to be restored since that is what partners
    are building with.

    Bug: 112688384
    Bug: 78104779
    Test: m android.hardware.keymaster@4.0 (tests hashes)
    Change-Id: I0f59a493d7f17a13402d992495d1a259f6257077
    (cherry picked from commit ec720564dbdef01d14fcf46c46ea18294440358b)

commit ec720564dbdef01d14fcf46c46ea18294440358b
Author: Steven Moreland <smoreland@google.com>
Date:   Mon Aug 20 10:46:48 2018 -0700

    Add back keymaster@4.0 hash.

    This was changed after this branch was released. The originally
    released hash needs to be restored since that is what partners
    are building with.

    Bug: 112688384
    Bug: 78104779
    Test: m android.hardware.keymaster@4.0 (tests hashes)
    Change-Id: I0f59a493d7f17a13402d992495d1a259f6257077

commit 49731f6d9536486a84736e4c621bf82876cefde3
Merge: cf2e00dd4 0743b3c82
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Fri Aug 17 03:14:03 2018 +0000

    Snap for 4959688 from 0743b3c82860cc8e8b8692e80285ab8bb9d38e25 to pi-qpr1-release

    Change-Id: I942265c8e35bf9af7d73e6fb19a08f715fdb1cb1

commit 0743b3c82860cc8e8b8692e80285ab8bb9d38e25
Merge: b8dc4087f a73a8c9b2
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Thu Aug 16 16:53:19 2018 -0700

    [automerger skipped] Merge "Fix base class of WifiHidlEnvironment_1_2" into pie-vts-dev
    am: a73a8c9b2b  -s ours

    Change-Id: Ibe587199700defc6fb254bb8400187520cb6f686

commit b8dc4087f46dff751cea4dceddd3de7b9beb3a13
Merge: 269e1ccea 0a55878d1
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Thu Aug 16 16:53:00 2018 -0700

    [automerger skipped] Merge "Fix IUsb version number in vts test" into pie-vts-dev
    am: 0a55878d1e  -s ours

    Change-Id: I14e8837ac6069696b55a5344e667c2be00385d9b

commit a73a8c9b2bab1c45637d842cc93f9cff8e980582
Merge: 0a55878d1 82179cf46
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Thu Aug 16 15:43:19 2018 +0000

    Merge "Fix base class of WifiHidlEnvironment_1_2" into pie-vts-dev

commit 0a55878d1e580e86f544a580a50834af0eec4536
Merge: a8b8b6b1b b782cb856
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Thu Aug 16 15:42:37 2018 +0000

    Merge "Fix IUsb version number in vts test" into pie-vts-dev

commit cf2e00dd49e81c09a26a763c2866a8e5f481d5ff
Merge: 44ae3fc14 269e1ccea
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Thu Aug 16 03:06:57 2018 +0000

    Snap for 4957529 from 269e1cceac6c9d918422b001bc00bef9e1406175 to pi-qpr1-release

    Change-Id: I79fcadda21566582a2565879c222735f21e026d7

commit 269e1cceac6c9d918422b001bc00bef9e1406175
Merge: 005ba418a a8b8b6b1b
Author: sqian <shuoq@google.com>
Date:   Wed Aug 15 13:40:38 2018 -0700

    Patch for setSimCardPower_1_1
    am: a8b8b6b1b3

    Change-Id: Icdb7960fe151b6faaaac5b03dc5da233be3d92e0

commit a8b8b6b1b3548be1e0604f261e4f71e85596ee64
Author: sqian <shuoq@google.com>
Date:   Tue Aug 14 12:30:57 2018 -0700

    Patch for setSimCardPower_1_1

    Do not expect its affect on cardStatus if it is not successfully returned.
    Check the response error before updating sim card status.

    Test: sanity
    Bug: 111661946
    Change-Id: I48551f5469289b9fcfc47dd9fd2e455779640329
    Merged-In: I48551f5469289b9fcfc47dd9fd2e455779640329
    (cherry picked from commit 7e787e192cd4700d8f4e7cc5f55501bc37590245)

commit 44ae3fc14ac03fd473a6a970c5b1ee1a7831b218
Merge: 18e2fb9b3 005ba418a
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Wed Aug 15 03:04:50 2018 +0000

    Snap for 4954419 from 005ba418a1e823a35a241446afdc532ef7b03217 to pi-qpr1-release

    Change-Id: Ibddbb2814dfaf760c67f2722545003d01eb218d1

commit 005ba418a1e823a35a241446afdc532ef7b03217
Merge: ed003acae c1db42272
Author: sqian <shuoq@google.com>
Date:   Tue Aug 14 13:49:59 2018 -0700

    [automerger skipped] Merge "Fix setSimCardPower_1_1" into pie-vts-dev
    am: c1db422723  -s ours

    Change-Id: I66903a9ed80036a8d1f2050fc631d7c239fe11f5

commit c1db4227234aa3c85ef59e03df360bb54f0d0bcf
Merge: a935e652a f25e99630
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Tue Aug 14 20:13:47 2018 +0000

    Merge "Fix setSimCardPower_1_1" into pie-vts-dev

commit f25e9963023cfec18e2047a0541043b6f998f986
Author: sqian <shuoq@google.com>
Date:   Fri Jul 20 16:33:16 2018 -0700

    Fix setSimCardPower_1_1

    If the function isn't executed successfully, do not expect its effect
    of cardStatus.

    Bug: 111661946
    Test: run vts
    Change-Id: I952728311b595149b449280e73142f2f82af544d
    Merged-In: I952728311b595149b449280e73142f2f82af544d
    (cherry picked from commit 934243085ae70d7ce4ec7f6ee331099b4566b051)
    (cherry picked from commit c02dd2562ff373c32740b1fda5947a5861d73990)

commit ed003acaebb81e1206d98a3f346569a2328d1630
Merge: 14c80dad1 a935e652a
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Tue Aug 14 09:48:57 2018 -0700

    [automerger skipped] Merge "Fix ICameraDeviceCallback version in VTS test" into pie-vts-dev
    am: a935e652af  -s ours

    Change-Id: I284cdf08e8e6fd59d774d9917a21fd091accac52

commit a935e652afdf60e79964b8eb550e5542e19efddd
Merge: 2d0ba0f61 68c347fa6
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Tue Aug 14 16:35:34 2018 +0000

    Merge "Fix ICameraDeviceCallback version in VTS test" into pie-vts-dev

commit 18e2fb9b360b294dc6f8ec3694d27138b49f2b23
Merge: c27980f45 14c80dad1
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Tue Aug 14 03:11:42 2018 +0000

    Snap for 4951295 from 14c80dad1a2f3c60e8732b87f234fe8effddd0ca to pi-qpr1-release

    Change-Id: I80d543734e623c9bd46ccdfd87f603935cf62122

commit 14c80dad1a2f3c60e8732b87f234fe8effddd0ca
Merge: 6e80536af 2d0ba0f61
Author: sqian <shuoq@google.com>
Date:   Mon Aug 13 18:44:28 2018 -0700

    Check INVALID_SIM_STATE for sim permanent lock status
    am: 2d0ba0f61b

    Change-Id: I94cdd69cfcf4d6be9a6700df97e671e78a8a1cf1

commit 2d0ba0f61b720ec0426fe8e544715dd5133e91bd
Author: sqian <shuoq@google.com>
Date:   Thu Aug 9 12:51:10 2018 -0700

    Check INVALID_SIM_STATE for sim permanent lock status

    PUK1 and PUK2 can get permanent blocked when it inputs wrong
    passwords more than 10 times.

    Bug: 111211929
    Test: sanity
    Change-Id: I736873b1b181b88f279df7dc1c09e18e0fc76af3

commit 6e80536af7502295109056ed175e97ed27e38d4a
Merge: c692e91df 9da8a7274
Author: sqian <shuoq@google.com>
Date:   Mon Aug 13 16:58:45 2018 -0700

    [automerger skipped] resolve merge conflicts of 898d05a713a693670cd450ff3f50156fed2f4567 to pie-vts-dev
    am: 9da8a72744  -s ours

    Change-Id: Ie00b51fbda62104dcd9f5b8eff437dbccd7e1be2

commit 9da8a72744b4f1f80a16fc3da2892aa742ed329c
Merge: 795990cca 898d05a71
Author: sqian <shuoq@google.com>
Date:   Mon Aug 13 16:31:27 2018 -0700

    resolve merge conflicts of 898d05a713a693670cd450ff3f50156fed2f4567 to pie-vts-dev

    Test: I solemnly swear I tested this conflict resolution.
    Bug: 72075328
    Change-Id: I5d7c124bc3905f899e63f080ac94def4e06fe9c2
    Merged-In: I8c993cd2fa95c961dc7f976b5bd85a2826b42889

commit 82179cf46804a4b1db96de366bc6d4ec584f4243
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Thu Aug 2 15:09:17 2018 +0800

    Fix base class of WifiHidlEnvironment_1_2

    WifiHidlEnvironment_1_2 inherits WifiHidlEnvironment so that it stops
    Wifi before every test.

    Test: run vts -m VtsHalWifiV1_2Target
    Bug: 112058501
    Change-Id: I73c50351fa486f2ae7749e43a060ff05672c0f65
    Merged-In: I73c50351fa486f2ae7749e43a060ff05672c0f65
    (cherry picked from commit 4721523a96007b3b928ca847cfb3945e3e68c346)

commit 68c347fa6249bb2666505c2a7e33f827a9efe1b4
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Fri Jul 20 12:52:20 2018 +0800

    Fix ICameraDeviceCallback version in VTS test

    Test: ./VtsHalCameraProviderV2_4TargetTest --gtest_filter=CameraHidlTest.constructDefaultRequestSettings
    Bug: 111625570
    Change-Id: I8ad02afb0e9c2131c240999c4a8c78a1f770e847
    Merged-In: I8ad02afb0e9c2131c240999c4a8c78a1f770e847
    (cherry picked from commit cccd5bf1dd32c49ac6e10d870829b1ae40d19580)

commit b782cb856539bb855afb19d439497e1ceb585f64
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Wed Jul 4 10:35:01 2018 +0800

    Fix IUsb version number in vts test

    Bug: 110913709
    Test: vts-tradefed run vts -m VtsHalUsbV1_1Target
    Change-Id: I9ae6add2fe8ff7138e07797c3a191b6dfe611948
    Merged-In: I9ae6add2fe8ff7138e07797c3a191b6dfe611948
    (cherry picked from commit b4193b855c745da6772607d32f5351300ac826e1)

commit c27980f4541859392d0a240ebefdf7834064be91
Merge: f0207dc3c c692e91df
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Mon Aug 13 03:01:00 2018 +0000

    Snap for 4949382 from c692e91df7f39764b033c8de07f8e26f3f4584ef to pi-qpr1-release

    Change-Id: Ib0e02db91747590a92f8ecc2a7c2893dc30df041

commit c692e91df7f39764b033c8de07f8e26f3f4584ef
Merge: b080c4cbc 795990cca
Author: Michael Wright <michaelwr@google.com>
Date:   Fri Aug 10 18:48:50 2018 -0700

    Update power HAL to version 1.3.
    am: 795990cca6

    Change-Id: Ic1afdf461a72019ff8d0f18ddf05eb948263b898

commit 795990cca6f0979ec9cd397e345bd87a247ff97f
Author: Michael Wright <michaelwr@google.com>
Date:   Thu Jun 21 02:42:31 2018 +0100

    Update power HAL to version 1.3.

    Adds new EXPENSIVE_RENDERING power hint.

    This adds a new library which does not affect any pre-existing
    targets unless they create and add a new binary which uses this.

    BUG: 110112323
    Test: adb shell /data/nativetest/VtsHalPowerV1_3TargetTest/VtsHalPowerV1_3TargetTest
    Change-Id: I5fb33abbbe4c4958882a106dfa400ad74013e40d

commit b080c4cbcaf04f7ff08725ae9d5b27f029e45aa7
Merge: 32ddcf059 841940be1
Author: Pawin Vongmasa <pawin@google.com>
Date:   Fri Aug 10 14:45:29 2018 -0700

    resolve merge conflicts of b92f1d2e1be35b331b18589a8cde81d51ddd31d6 to oreo-mr1-vts-dev am: c0243f2ff8
    am: 841940be1c

    Change-Id: I9ece663eeeb126455092ddf9c6a186e5e7b0973e

commit 32ddcf059a086b8b2f9ac6ca989e82bbb27ecaf1
Merge: a92f77cc1 92dc39725
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Aug 10 14:45:13 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b  -s ours am: 70d13c2ad3  -s ours
    am: 92dc397252  -s ours

    Change-Id: I897f37b1f581e6099ae06e028a68364502af2d99

commit a92f77cc1f151119c08d1f8c8d95ea7f3a886768
Merge: 65534c45a 538119297
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Aug 10 14:44:54 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO am: cfab8dac2b
    am: 5381192973

    Change-Id: I80a609e0080aacc4f3ff1bd9331d28a3f4c041de

commit 65534c45aecf7f955d1b5acd13ba9cffd76ce538
Merge: bc6fadbaa 698b7fe3f
Author: sqian <shuoq@google.com>
Date:   Fri Aug 10 14:44:35 2018 -0700

    [automerger skipped] Fix setBandMode. am: ab2b8bf919  -s ours am: d1e489c94c  -s ours
    am: 698b7fe3f4

    Change-Id: Ic42ea569cc368bcc813d1e5d4e923ad15eb260e5

commit 841940be1cebd7a650001725d900d04648bc5bc9
Merge: 92dc39725 c0243f2ff
Author: Pawin Vongmasa <pawin@google.com>
Date:   Fri Aug 10 14:30:13 2018 -0700

    resolve merge conflicts of b92f1d2e1be35b331b18589a8cde81d51ddd31d6 to oreo-mr1-vts-dev
    am: c0243f2ff8

    Change-Id: I25bf6387a074f630cc3e10c3b265d16390e39eca

commit 92dc397252405b07e7ea0f921b875f97095600bf
Merge: 538119297 70d13c2ad
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Aug 10 14:29:59 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b  -s ours
    am: 70d13c2ad3  -s ours

    Change-Id: I1040539ea50b8c6c02daa1b032d9b5be01bd920e

commit 53811929738dffd320800fb231eb0f0d40eeaa8a
Merge: 698b7fe3f cfab8dac2
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Aug 10 14:29:43 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO
    am: cfab8dac2b

    Change-Id: Ibd24dda91b5d334a62553dfe980d6559743688b8

commit 698b7fe3f4fd172f90244e392359efdc61465d31
Merge: a22fea616 d1e489c94
Author: sqian <shuoq@google.com>
Date:   Fri Aug 10 14:29:29 2018 -0700

    [automerger skipped] Fix setBandMode. am: ab2b8bf919  -s ours
    am: d1e489c94c  -s ours

    Change-Id: Ia6efc79ef18e4614f784a3a393ce19d33dd564f1

commit bc6fadbaa264528be15d534a2a8e9f3e67fe0fc6
Merge: 765cc404c a22fea616
Author: Eric Schwarzenbach <easchwar@google.com>
Date:   Fri Aug 10 14:29:19 2018 -0700

    [automerger skipped] Call notify for voiceReg and dataReg VTS tests
    am: a22fea6160  -s ours

    Change-Id: Ia5067ae0ee9989c566c6e7d139fed0fe0ede5316

commit 765cc404c3a50a58622493ea206ad743ccd0ee2b
Merge: 82bac7851 70afa883a
Author: sqian <shuoq@google.com>
Date:   Fri Aug 10 14:29:03 2018 -0700

    [automerger skipped] Add REQUEST_NOT_SUPPORTED for changeIccPinForApp and changeIccPin2ForApp
    am: 70afa883ae  -s ours

    Change-Id: I2f75f6a04a7ded0b3fa352b5f85e4d01e6f886ee

commit 82bac78512b62add5311c4fffff385a6d9723c63
Merge: 04261119b 555cb5e13
Author: Hung-ying Tyan <tyanh@google.com>
Date:   Fri Aug 10 14:28:47 2018 -0700

    [automerger skipped] Fix free() in keymaster VTS
    am: 555cb5e13b  -s ours

    Change-Id: I8fa027297ea0a8374f1817f4f5b1d2865ed0d4db

commit 04261119b6aeeb3474a33938dfc0bda146f5605d
Merge: 0dba88861 bbe9263f8
Author: nagendra modadugu <ngm@google.com>
Date:   Fri Aug 10 14:28:12 2018 -0700

    [automerger skipped] Respect limited requirements for Strongbox KM implementations
    am: bbe9263f85  -s ours

    Change-Id: Ib5581578b3d5ac6a8934be329253c37d6f54dc80

commit a22fea6160a5a9173d0f97a31bce178ea42855fd
Author: Eric Schwarzenbach <easchwar@google.com>
Date:   Wed Jun 6 16:09:58 2018 -0700

    Call notify for voiceReg and dataReg VTS tests

    Bug: 80554443
    Test: vts
    Merged-In: I19f7131f7b65323065f3c283a89668ff761815e3
    Change-Id: I19f7131f7b65323065f3c283a89668ff761815e3
    (cherry picked from commit 2bb626a2975ef3398adbcb12fe50804cf71efc39)

commit 70afa883aee42e311908addb0fc586052f43ca3b
Author: sqian <shuoq@google.com>
Date:   Fri Jun 15 14:24:31 2018 -0700

    Add REQUEST_NOT_SUPPORTED for changeIccPinForApp and changeIccPin2ForApp

    Bug: 110037298
    Test: run vts -m VtsHalRadioV1_0Target
    Merged-In: Iaba800814c5a6950d086a2f105714d01fdaa14a4
    Change-Id: Iaba800814c5a6950d086a2f105714d01fdaa14a4
    (cherry picked from commit 7470cbd04dbb90ec4a6481d08db54c6a8c5f2efd)

commit 555cb5e13b215babb32cafb4d884acb1a462b44b
Author: Hung-ying Tyan <tyanh@google.com>
Date:   Fri Jun 8 17:53:48 2018 +0800

    Fix free() in keymaster VTS

    The buffer is allocated by OPENSSL_malloc() in X509_NAME_oneline(name, nullptr, 0).
    Should be reclaimed by OPENSSL_free() instead of free().

    The patch is provided by vink.shen@mediatek.corp-partner.google.com

    Bug: 109708231
    Test: build pass
    Merged-In: I66a864e3e28905eebac2e7d3a4517d4d5aaa39df
    Change-Id: I66a864e3e28905eebac2e7d3a4517d4d5aaa39df
    (cherry picked from commit 79db3ec849c5f1142a0802dccfff6cbef564ff76)

commit bbe9263f857e4aa0a08aeb6b916dadb4f6d0ab94
Author: nagendra modadugu <ngm@google.com>
Date:   Tue Jun 5 11:05:19 2018 -0700

    Respect limited requirements for Strongbox KM implementations

    With this patch the KM VTS test apply the restricted requirements on
    supported key sizes, EC curves, and Digests to Strongbox keymaster
    implementations.

    Also amend tests to use Update().

    Test: Yes it is
    Bug: 74519020
    Merged-In: Ibec9c3398671f81dbc0ecf78e554726276160579
    Change-Id: Ibec9c3398671f81dbc0ecf78e554726276160579
    (cherry picked from commit 3a7e2cade3305d59f861c21206b5862de9d05d5c)

commit f0207dc3c4af0061bef2634d9815b986ffe86c7d
Merge: 93688c0cf 0dba88861
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Tue Aug 7 03:00:56 2018 +0000

    Snap for 4937098 from 0dba88861267b2b37355b41504b9d1e0d89bbe0f to pi-qpr1-release

    Change-Id: I32e7fcde9b7579ef9e311a3cc4d52a8675cedc40

commit 0dba88861267b2b37355b41504b9d1e0d89bbe0f
Author: Shawn Willden <swillden@google.com>
Date:   Mon Aug 6 17:23:23 2018 -0600

    Change ImportWrappedKeyTest back to SHA1

    Change I5f877b2a1ac66026a876e145416ba078d486e4b5 inadvertently changed
    the digest used for ImportWrappedKey, breaking the test.  This CL
    reverts that portion of the change.

    Test: VtsHalKeymasterV4_0TargetTest
    Bug: 112279922
    Change-Id: Ib8e2e7793ba46ae0d29d8407bb730a35bdb5ea98

commit 93688c0cf5dbe68d2464674f6fae145ac2bda484
Merge: 0abd37fd4 5a45bbf82
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Mon Aug 6 03:05:13 2018 +0000

    Snap for 4933870 from 5a45bbf82117cd7c2a0c8bd7478e675f55b0ddc8 to pi-qpr1-release

    Change-Id: I3a63752985a31edd22279646f620bcb10771454a

commit 5a45bbf82117cd7c2a0c8bd7478e675f55b0ddc8
Merge: 12f7d6127 4721523a9
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Mon Aug 6 01:56:49 2018 +0000

    Merge "Fix base class of WifiHidlEnvironment_1_2" into pi-dev

commit 12f7d6127b301b140ee81696fed19f81a7ea50c6
Author: sqian <shuoq@google.com>
Date:   Fri Aug 3 16:19:29 2018 -0700

    Loose startNetworkScan cases

    startNetworkScan:
    Some vendor may not support the required manual GSM search
    functionality.

    startNetworkScan_GoodRequest1 and startNetworkScan_GoodRequest2:
    Some vendor may not support max search time of 360s.

    Test: sanity
    Bug: 109765420
    Change-Id: I456847815057d76561bfb3e840016619ac753476

commit 7d1fdecea5bfa16ab7af3b0b98db1973c1775abd
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Fri Aug 3 11:50:47 2018 -0700

    Legacy camera shim: add option to free buffers earlier

    This option allows HAL to opt in for the behavior that will free
    cached buffers earlier if the libhardware HAL implementation
    doesn't cache/reference the cached buffers internally.

    Test: buffers are freed earlier when the property is set
    Bug: 111850884
    Change-Id: I3a10b288c7160c86dc7d3a30d04b5c4903917731

commit 72c7579c080a092fcab92c087a9fe7fe3ecd106e
Merge: efbb5ea65 874cc7008
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Fri Aug 3 08:38:54 2018 -0700

    [automerger skipped] Camera: add proper HwLevel check am: cd02298b46 am: 616f595527 am: 8235ceff90  -s ours
    am: 874cc70085  -s ours

    Change-Id: Ic97d070dd974b610e21f91b48320077fd199ba06

commit 874cc70085ff926feab2457992aba026798ed3bb
Merge: 3140fff4f 8235ceff9
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Fri Aug 3 08:32:47 2018 -0700

    [automerger skipped] Camera: add proper HwLevel check am: cd02298b46 am: 616f595527
    am: 8235ceff90  -s ours

    Change-Id: I4ead2f00e9e6341e42e5682b0aecc339434cfae9

commit efbb5ea65d0762a65d001690465e600dc8643e83
Merge: 503fed748 3140fff4f
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Fri Aug 3 08:07:40 2018 -0700

    [automerger skipped] resolve merge conflicts of cd02298b46cfb17954555e0f1d324f63085aa204 to oreo-mr1-vts-dev am: 79cea44239
    am: 3140fff4f3  -s ours

    Change-Id: Ia2f6e7f2b8152b7c131f2265d1db49e917b91f82

commit 0abd37fd407b5936f38375f767081bba8448dfc5
Merge: 4cadf35f9 503fed748
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Fri Aug 3 03:07:24 2018 +0000

    Snap for 4930082 from 503fed748d8b2ba3aeeed90b2cc47e2efa70e62d to pi-qpr1-release

    Change-Id: Ie1b443e7ebc85604c038ade54cde3092af78f9b1

commit 3140fff4f3c7b44c46109d85c27ec3da5e8587bb
Merge: f06d4203a 79cea4423
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Thu Aug 2 16:26:27 2018 -0700

    resolve merge conflicts of cd02298b46cfb17954555e0f1d324f63085aa204 to oreo-mr1-vts-dev
    am: 79cea44239

    Change-Id: I29d89c104f5d476c7c6563b16cf5898a3a213b09

commit 79cea44239bd275f5f482f39622f08fd82d255f7
Merge: 0f0328fc4 cd02298b4
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Thu Aug 2 15:11:46 2018 -0700

    resolve merge conflicts of cd02298b46cfb17954555e0f1d324f63085aa204 to oreo-mr1-vts-dev

    Bug: None
    Test: none
    Change-Id: I1d705ee440f49b1d7713b9225cbfb1815b79d5a0

commit 8235ceff90fab2578783be566bda46052de343bf
Merge: 6a85d76a9 616f59552
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Thu Aug 2 15:12:49 2018 -0700

    Camera: add proper HwLevel check am: cd02298b46
    am: 616f595527

    Change-Id: I61b5b76391da48c5f4b3298b0f44ecaa2c8af204

commit 616f595527830c1b18ae44e581c18f53e90728e7
Merge: eb0f7cdcb cd02298b4
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Thu Aug 2 15:02:31 2018 -0700

    Camera: add proper HwLevel check
    am: cd02298b46

    Change-Id: I30593eda48d5ba1cca0e5e29f4bc99f27351da23

commit 503fed748d8b2ba3aeeed90b2cc47e2efa70e62d
Merge: 4046722d0 44b129f72
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Thu Aug 2 21:21:56 2018 +0000

    Merge "Fix setAllowedCarrier" into pi-dev

commit 4046722d02e343411eccc15d44b903b95603cb95
Merge: b471863b2 4e006c2b9
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Thu Aug 2 21:20:10 2018 +0000

    Merge "Require keymaster4 attestations to contain the right version." into pi-dev

commit 4e006c2b92be6ac71927b975b6725ddadf0b3342
Author: Shawn Willden <swillden@google.com>
Date:   Tue Jul 31 13:47:37 2018 -0600

    Require keymaster4 attestations to contain the right version.

    Note that devices with KM4 will fail to pass VTS after this
    lands, until the fix from Qualcomm arrives.

    Test: VtsHalKeymasterV4_0TargetTest
    Bug: 112040197
    Change-Id: Ie2cd917af704b9f19de3537297b3a7e4f0c861e9

commit 4721523a96007b3b928ca847cfb3945e3e68c346
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Thu Aug 2 15:09:17 2018 +0800

    Fix base class of WifiHidlEnvironment_1_2

    WifiHidlEnvironment_1_2 inherits WifiHidlEnvironment so that it stops
    Wifi before every test.

    Test: run vts -m VtsHalWifiV1_2Target
    Bug: 112058501
    Change-Id: I73c50351fa486f2ae7749e43a060ff05672c0f65

commit 4cadf35f9aaf8ec9e3ea8dc40e4e92a5ee983787
Merge: 3132d6ead b471863b2
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Thu Aug 2 03:06:20 2018 +0000

    Snap for 4927333 from b471863b219c651ce4013e2573922528eafded3d to pi-qpr1-release

    Change-Id: I122f9f6f9090a98bbc7f079133eed693106f40b1

commit b471863b219c651ce4013e2573922528eafded3d
Merge: 8e9205683 17fec3625
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Wed Aug 1 23:15:41 2018 +0000

    Merge "Revert "Fixed VTS failure in no SIM case"" into pi-dev

commit 44b129f7288016a4113f5e6ff059d63987d63385
Author: sqian <shuoq@google.com>
Date:   Tue Jul 31 09:23:24 2018 -0700

    Fix setAllowedCarrier

    If function is not supported or executed successfully, do not
    expect its effect on cardStatus.

    Bug: 112008372
    Test: run vts
    Change-Id: I4532a39af2cfcf0e44eafe29c3c7f6779ae101f5

commit cd02298b46cfb17954555e0f1d324f63085aa204
Author: Yin-Chia Yeh <yinchiayeh@google.com>
Date:   Fri Jul 27 11:59:26 2018 -0700

    Camera: add proper HwLevel check

    Bug: 112011195

    Merged-In: Ib0b98f32c401566323eee546ee23c7873c00aef0
    Change-Id: If27bb5b12cfd2ffd8abf3079302d5967e37bf241

commit 17fec3625d7094fd68c4a43966ddc2eb513658e4
Author: Shuo Qian <shuoq@google.com>
Date:   Thu Jul 26 22:37:50 2018 +0000

    Revert "Fixed VTS failure in no SIM case"

    Since the EMERGENCY-type APN is a must set in the radio
    setupDataCall request for modem to perform Emergency call,
    and the given VTS test case does not set that emergency bit,
    I think modem should treat the request as a normal call
    request, and should not return "NONE" for no-sim.

    This reverts commit 431eb118f84de14c94ec18f887197944ec17e712.

    Reason for revert: after further discussion, NONE
    is not acceptable given the test case.

    Bug: 109767888
    Change-Id: I3d1cc96120d53a9be0ae5059c26b091bf82dc352

commit 3132d6ead43e69f980b7e477a2e456f18557ea5d
Merge: 8f7677d13 8e9205683
Author: android-build-team Robot <android-build-team-robot@google.com>
Date:   Fri Jul 27 03:14:56 2018 +0000

    Snap for 4916303 from 8e920568371136b011c79e6c1d15bcb4c047d0a3 to pi-qpr1-release

    Change-Id: Ie9e75d44456f3694910c67123d579d8c0d2b9bc9

commit 8e920568371136b011c79e6c1d15bcb4c047d0a3
Author: Emilian Peev <epeev@google.com>
Date:   Thu Jul 26 13:00:08 2018 +0100

    Camera: Don't hold 'mLock' when closing the camera session

    After flushing the camera requests don't try to close the
    camera session while still holding 'mLock'. Different Hals
    could still try and return additional results which then will
    get blocked on 'mLock'. Closing the session could potentially
    introduce a deadlock if the Hal implementation waits for any
    of the result calls to return.

    Bug: 111836165
    Test: vts-tradefed run commandAndExit vts --skip-all-system-status-check
    --skip-preconditions --module VtsHalCameraProviderV2_4Target -l INFO

    Change-Id: I0f309f435cc76db3f9b6ba500da65a232b014717

commit 5e3ee74b95909ba8fdb85fe605c109d86e74b264
Merge: 4c5db7f25 8cec80be1
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jul 24 00:16:49 2018 +0000

    Merge "keymaster: skip SHA2 digest tests for strongbox" into pi-dev

commit 4c5db7f25413a9888a333fcba2c82967a414695d
Merge: 1298fdb18 b065c9d8b
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 23 22:29:37 2018 +0000

    Merge "Fix failing drm 1.0 vts tests" into pi-dev

commit 1298fdb18600aaf07a6f448863fef644a9624c6c
Merge: ad3acdc14 3fac35a98
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 23 21:27:46 2018 +0000

    Merge "HWC2OnFbAdapter: don't claim present fences work" into pi-dev

commit 8cec80be1fc3d2d30fe095fa009dfa83cb7651ce
Author: nagendra modadugu <ngm@google.com>
Date:   Mon Jul 23 10:32:28 2018 -0700

    keymaster: skip SHA2 digest tests for strongbox

    Strongbox is not required to support SHA-2 digests,
    so skip the related tests.

    Bug: 109771020
    Change-Id: I5f877b2a1ac66026a876e145416ba078d486e4b5

commit ad3acdc14f7fa272c20039439f7c00b5f2a2a24f
Merge: 934243085 b41b57547
Author: Kevin Rocard <krocard@google.com>
Date:   Mon Jul 23 16:42:24 2018 +0000

    Merge "VTS: Do not require XML for Audio effect V2" into pi-dev

commit b41b575475f3c93fe30216b9cdb2db441b92854b
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jul 19 13:31:47 2018 -0700

    VTS: Do not require XML for Audio effect V2

    In O, the Audio effect V2 HAL allows not to have an audio effect XML
    configuration but to use a .conf format.

    In P, before this patch, the Audio effect V2 HAL _requires_ to have an
    audio effect XML configuration and forbids the use of a .conf format.

    This is discouraged by Treble as it means that an unchanged HAL V2
    implementation that was compatible with O VTS will not be with P VTS.

    As a result, revert to the Oreo behavior for Audio Effect V2 VTS.

    Note that the audio effect V4 VTS is not changed by this patch and
    still requires an audio effect XML configuration.
    Aka device _updating_ to P will not have to upgrade to XML but new
    devices lunching on P are still required to have an audio effect
    XML configuration.

    This commit only changes VTS code.

    Test: cd hardware/interfaces/audio/effect/
          mmm 2.0/vts/functional 4.0/vts/functional && adb sync data
          adb push *.0/xml/audio_effects_conf_V*.xsd /data/local/tmp/
          adb shell
          cd /data/nativetest64
          OPS=--gtest_filter=CheckConfig.audioEffectsConfigurationValidation
          VtsHalAudioEffectV2_0TargetTest/VtsHalAudioEffectV2_0TargetTest $OPS
          VtsHalAudioEffectV4_0TargetTest/VtsHalAudioEffectV4_0TargetTest $OPS
          rm /{odm,vendor,system}/etc/audio_effects.xml || true
          VtsHalAudioEffectV2_0TargetTest/VtsHalAudioEffectV2_0TargetTest $OPS
          ! VtsHalAudioEffectV4_0TargetTest/VtsHalAudioEffectV4_0TargetTest $OPS
    Bug: 111421676
    Change-Id: Ifb15d65ae4aa65759c8ebaa91cbc8c02234030dc
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit 934243085ae70d7ce4ec7f6ee331099b4566b051
Author: sqian <shuoq@google.com>
Date:   Fri Jul 20 16:33:16 2018 -0700

    Fix setSimCardPower_1_1

    If the function isn't executed successfully, do not expect its effect
    of cardStatus.

    Bug: 111661946
    Test: run vts
    Change-Id: I952728311b595149b449280e73142f2f82af544d

commit b065c9d8b7f926c57a7ec59e50e979a8c6e38e7f
Author: Jeff Tinker <jtinker@google.com>
Date:   Thu Jul 19 16:31:56 2018 -0700

    Fix failing drm 1.0 vts tests

    The shared library path was incorrectly set based on
    the drm.64bit.enabled flag. It should be set based
    on whether the drm service is running as 32-bit or
    64-bit.

    Test: vts-tradefed run commandAndExit vts -m VtsHalDrmV1_0Target

    bug:111289939
    Change-Id: I388dc87bd4566211dc2901feccf1e6e1c90bfe67

commit 80abca52dea74b8a53659fcb33c5448bf697312f
Merge: cccd5bf1d f06d4203a
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Jul 20 07:18:32 2018 -0700

    Effect VTS: Allow an effect proxy as pre/post processing am: 0f0328fc4e
    am: f06d4203ac

    Change-Id: I1e3b1296c0943f65c57b448d25bcbe4c2bd95239

commit f06d4203accc96302c5c6e7287bea5fd7a563f08
Merge: bb6bc7809 0f0328fc4
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Jul 20 07:15:11 2018 -0700

    Effect VTS: Allow an effect proxy as pre/post processing
    am: 0f0328fc4e

    Change-Id: I9dd308618084d4c4328812d3c7b8acb9086ea5a4

commit cccd5bf1dd32c49ac6e10d870829b1ae40d19580
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Fri Jul 20 12:52:20 2018 +0800

    Fix ICameraDeviceCallback version in VTS test

    Test: ./VtsHalCameraProviderV2_4TargetTest --gtest_filter=CameraHidlTest.constructDefaultRequestSettings
    Bug: 111625570
    Change-Id: I8ad02afb0e9c2131c240999c4a8c78a1f770e847

commit 0f0328fc4eb9218e627b3aba13bd40b1feef1da4
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jul 19 09:04:21 2018 -0700

    Effect VTS: Allow an effect proxy as pre/post processing

    Effect proxy were previously mistakenly forbidden as post
    or pre processing effects.

    An effect being a proxy or not should not affect where
    it can be use in the effect framework.

    Bug: 111421676
    Test: xmllint --noout --schema hardware/interfaces/audio/effect/2.0/xml/audio_effects_conf_V2_0.xsd $(find -name audio_effects.xml)
    Change-Id: Iad1c1467226b86a2935a36dd90cf2e32f7f753b0
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit 8f7677d1317b022b92b415f4b5c3edba0638ae08
Merge: f4f52c707 bb6bc7809
Author: sqian <shuoq@google.com>
Date:   Tue Jul 17 20:29:22 2018 -0700

    [automerger skipped] resolve merge conflicts of eb0f7cdcbfc7235978247ae62bfd07675cdf8c67 to oc-dr1-dev am: 6a85d76a9e
    am: bb6bc7809b  -s ours

    Change-Id: If2ddcff91d7f17f7b211ab24b61953868e90a3a9

commit bb6bc7809be7481115b5b41ddf80a2fe181ea1e8
Merge: 61ba46d76 6a85d76a9
Author: sqian <shuoq@google.com>
Date:   Tue Jul 17 20:26:00 2018 -0700

    resolve merge conflicts of eb0f7cdcbfc7235978247ae62bfd07675cdf8c67 to oc-dr1-dev
    am: 6a85d76a9e

    Change-Id: I94776398e7f93c89c1966944bc7b9dd133f588eb

commit 6a85d76a9e1faf6262b91ebc999d29fe71996acb
Merge: ea4ab32f9 eb0f7cdcb
Author: sqian <shuoq@google.com>
Date:   Tue Jul 17 15:40:09 2018 -0700

    resolve merge conflicts of eb0f7cdcbfc7235978247ae62bfd07675cdf8c67 to oc-dr1-dev

    Test: I solemnly swear I tested this conflict resolution.
    Bug: 72075328
    Change-Id: I58b1bb905b0126297ba651e9ecff65878f6d49c7
    Merged-In: I8c993cd2fa95c961dc7f976b5bd85a2826b42889

commit f4f52c70750dd0d58025bbde7ff1f9fc5b94c5ec
Merge: df6d0cae1 61ba46d76
Author: Pawin Vongmasa <pawin@google.com>
Date:   Tue Jul 17 15:36:16 2018 -0700

    Disable tests for secure audio decoders am: b92f1d2e1b am: 2108362a2e am: ea4ab32f97
    am: 61ba46d766

    Change-Id: I92f1b26d217a846dd391ee9f2ffc1a8755355fea

commit df6d0cae127f4ed39aa64cfc42ddf941a6f9a3ee
Merge: 3ce3c9127 61d91f9de
Author: Kevin Rocard <krocard@google.com>
Date:   Tue Jul 17 15:35:48 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b am: 6bd9139909  -s ours am: b32043a615  -s ours
    am: 61d91f9deb  -s ours

    Change-Id: I09c83e8d20ea827ada0a143d24a4661121fa902f

commit 61ba46d7669fad4ebcefb8e6aabc69fdeff95b38
Merge: 61d91f9de ea4ab32f9
Author: Pawin Vongmasa <pawin@google.com>
Date:   Tue Jul 17 15:30:04 2018 -0700

    Disable tests for secure audio decoders am: b92f1d2e1b am: 2108362a2e
    am: ea4ab32f97

    Change-Id: I12b6c26605f05c058c3f0e7cffb1122e37bebb74

commit 61d91f9debf9d13b64a94200f8fa5b8cb49676ea
Merge: ccda8d629 b32043a61
Author: Kevin Rocard <krocard@google.com>
Date:   Tue Jul 17 15:29:40 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b am: 6bd9139909  -s ours
    am: b32043a615  -s ours

    Change-Id: I0d4f9e8dd06d452054a875e5add10e605a11ab85

commit ea4ab32f97f38941b15d3267c44e1aa1be07bce7
Merge: b32043a61 2108362a2
Author: Pawin Vongmasa <pawin@google.com>
Date:   Tue Jul 17 15:24:54 2018 -0700

    Disable tests for secure audio decoders am: b92f1d2e1b
    am: 2108362a2e

    Change-Id: Iac2d962dd3b6926888618c1489addf223e599e10

commit b32043a615f4bc953eb644caf8e25d28be6aa19d
Merge: ea34bd6a0 6bd913990
Author: Kevin Rocard <krocard@google.com>
Date:   Tue Jul 17 15:24:39 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b
    am: 6bd9139909  -s ours

    Change-Id: Iad839f5681a69e65dc194d60a22532ec8bd2bca4

commit 3ce3c9127af475de88356908c44e2246ac59e307
Merge: 57c9e5fc3 8284636fe
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jul 17 20:58:49 2018 +0000

    Merge "audio: add wakelock capability for audiohalservice" into pi-dev

commit 57c9e5fc377fe854d48ddbec249a7bc2c7ae634e
Merge: 375ff6a3a ccda8d629
Author: sqian <shuoq@google.com>
Date:   Mon Jul 16 10:04:49 2018 -0700

    resolve merge conflicts of ccda8d62963b62e80fe1e303c16e75ee9fa274d8 to pi-dev

    Test: I solemnly swear I tested this conflict resolution.
    Bug: 72075328
    Change-Id: I8c993cd2fa95c961dc7f976b5bd85a2826b42889

commit 3fac35a98ae8dcc2b475c8a5b7f031c031d011a7
Author: Chris Forbes <chrisforbes@google.com>
Date:   Mon Jul 16 10:33:46 2018 -0700

    HWC2OnFbAdapter: don't claim present fences work

    We never produce real present fences, so indicate this to the
    compositor. This will prevent GOOGLE_display_timing & friends from being
    exposed in the client APIs.

    Similar to previous change in HWC2On1Adapter.

    Bug: b/111505197
    Change-Id: I601a7f5628d4b218431fc0f1abb4807c9941ce64

commit ccda8d62963b62e80fe1e303c16e75ee9fa274d8
Merge: fedde0ea5 898d05a71
Author: sqian <shuoq@google.com>
Date:   Mon Jul 16 09:49:17 2018 -0700

    resolve merge conflicts of dfa79a6292a42dd8609053febd8df7d5e7d48fbf to oreo-mr1-vts-dev
    am: 898d05a713

    Change-Id: Ib6c454c7e5e81ac2b82ecae24d8293497d36211e

commit 898d05a713a693670cd450ff3f50156fed2f4567
Merge: c0243f2ff dfa79a629
Author: sqian <shuoq@google.com>
Date:   Mon Jul 16 08:36:50 2018 -0700

    resolve merge conflicts of dfa79a6292a42dd8609053febd8df7d5e7d48fbf to oreo-mr1-vts-dev

    Test: I solemnly swear I tested this conflict resolution.
    Bug: None
    Change-Id: I10919718b841fdb33ab0e873d1b4bbd787fafcd2

commit eb0f7cdcbfc7235978247ae62bfd07675cdf8c67
Merge: 2108362a2 dfa79a629
Author: sqian <shuoq@google.com>
Date:   Mon Jul 16 08:30:07 2018 -0700

    Merge "Add NONE for LceService" into oreo-vts-dev
    am: dfa79a6292

    Change-Id: I53cd38ba31b1f19860f7d67396a1ce130c4a3375

commit dfa79a6292a42dd8609053febd8df7d5e7d48fbf
Merge: b92f1d2e1 70805cffd
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 16 15:19:43 2018 +0000

    Merge "Add NONE for LceService" into oreo-vts-dev

commit 70805cffdd6ebfb98fc355620ffe2402ec377094
Author: sqian <shuoq@google.com>
Date:   Wed Jul 11 15:19:02 2018 -0700

    Add NONE for LceService

    "Allow startLceService to succeed even in the
    SIM_ABSENT case. The original RIL documentation
    states that SUCCESS is valid for all LCE
    operations, and there is no logical reason why
    one of these operations must fail in a no-SIM
    case (though a vendor may choose not to support
    that configuration). Thus, a call to
    startLceService should permit NONE when requested
    in the no-SIM case for 1.0 VTS.

    In addition, a successful call to startLceService
    should also permit a successful call to
    pullLceData, so also allow RadioError::NONE for
    the pull operation. Ideally the tests would only
    allow NONE for pull if startLceService also
    returns NONE, but that's out of scope for now."

    Bug: 110181475
    Bug: 72075328
    Test: confirmed in the discussion; compilation

commit 375ff6a3a7a0e2d60360fc68e4900535f2422ec7
Merge: c0a06f34c fedde0ea5
Author: Pawin Vongmasa <pawin@google.com>
Date:   Fri Jul 13 01:45:43 2018 -0700

    resolve merge conflicts of b92f1d2e1be35b331b18589a8cde81d51ddd31d6 to oreo-mr1-vts-dev am: c0243f2ff8
    am: fedde0ea52

    Change-Id: I52c92c4cd9a68a5a57ba652e0284f495e912ea37

commit fedde0ea526dfb5d5b280ecf20fe7be94aaf2dbd
Merge: 54eb2c126 c0243f2ff
Author: Pawin Vongmasa <pawin@google.com>
Date:   Fri Jul 13 01:40:58 2018 -0700

    resolve merge conflicts of b92f1d2e1be35b331b18589a8cde81d51ddd31d6 to oreo-mr1-vts-dev
    am: c0243f2ff8

    Change-Id: Ic39fb2e88c6d0d1c1185dae1fab6d9c42a624187

commit 8284636fecaf9d679646416988762ce4b3ca685b
Author: Carter Hsu <carterhsu@google.com>
Date:   Fri Jul 13 10:41:29 2018 +0800

    audio: add wakelock capability for audiohalservice

    1. wake_lock group
    2. BLOCK_SUSPEND capability

    int pm_wake_lock(const char *buf)
    {
    	const char *str = buf;
    	struct wakelock *wl;
    	u64 timeout_ns = 0;
    	size_t len;
    	int ret = 0;

    	if (!capable(CAP_BLOCK_SUSPEND))
    		return -EPERM;
    Bug: 111018819
    Test: manual
    Change-Id: I1283e4b1ab2b95e4e94df045240001485593f1ab
    Signed-off-by: Carter Hsu <carterhsu@google.com>

commit c0a06f34c88cf9dc017be6178113b35c3c7fc67e
Author: sqian <shuoq@google.com>
Date:   Thu Jul 12 16:30:24 2018 -0700

    Add REQUEST_NOT_SUPPORTED for pin and pin2 Icc VTS

    Bug: 111222834
    Test: sanity
    Change-Id: Ia3b96e83d6173c2c80bdbf7763a876883b167af9

commit bef00fe1af7e9fde15d4235e64b9c483c780e523
Merge: 062047339 4ed0a216a
Author: Shuo Qian <shuoq@google.com>
Date:   Thu Jul 12 23:10:45 2018 +0000

    Merge "Add SIM_PUK2 for Icc VTS tests" into pi-dev

commit 4ed0a216adc3bc9460d11d302ba53db9707ded44
Author: sqian <shuoq@google.com>
Date:   Mon Jul 9 14:45:12 2018 -0700

    Add SIM_PUK2 for Icc VTS tests

    Add SIM_PUK2 for supplyIccPin2ForApp and changeIccPin2ForApp if sim
    card is in the puk2 state.

    Bug: 111211929
    Test: sanity
    Change-Id: I80d924cc4a61565887cbd2a65ee5927a42ad656e

commit c0243f2ff85d3d8d897f34d063177169e736a500
Merge: 70d13c2ad b92f1d2e1
Author: Pawin Vongmasa <pawin@google.com>
Date:   Wed Jul 11 23:22:17 2018 -0700

    resolve merge conflicts of b92f1d2e1be35b331b18589a8cde81d51ddd31d6 to oreo-mr1-vts-dev

    Test: make vts -j123 && vts-tradefed run commandAndExit vts \
    --skip-all-system-status-check \
    --skip-preconditions -m VtsHalMediaOmxV1_0Host \
    -l INFO

    Bug: 70933963
    Change-Id: I38f6309b638e604403dba15fa1fe1022b298c5b2

commit 2108362a2ed7938043c381acfb6f21dd90ed47f2
Merge: 6bd913990 b92f1d2e1
Author: Pawin Vongmasa <pawin@google.com>
Date:   Wed Jul 11 22:57:50 2018 -0700

    Disable tests for secure audio decoders
    am: b92f1d2e1b

    Change-Id: I0170a99924c56200d428ea2e0bc78e97831aa51c

commit 062047339b0e54b4b4147a892ce58a82067d7a21
Merge: 03f16e442 54eb2c126
Author: Kevin Rocard <krocard@google.com>
Date:   Wed Jul 11 21:25:19 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b  -s ours am: 70d13c2ad3  -s ours
    am: 54eb2c126d  -s ours

    Change-Id: I4892ee3009773e4090f0dd480c7ce56f9e674254

commit 54eb2c126d1595eb92ed05415cddb0d1c1535a02
Merge: 4595c66a1 70d13c2ad
Author: Kevin Rocard <krocard@google.com>
Date:   Wed Jul 11 19:20:14 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO am: 01ead7c96b  -s ours
    am: 70d13c2ad3  -s ours

    Change-Id: I9239953a3dd7af8b4bac5098199ea9bb9190b75d

commit 6bd91399094571651af0ecc11ebf400486743d76
Merge: d88330667 01ead7c96
Author: Kevin Rocard <krocard@google.com>
Date:   Wed Jul 11 18:09:36 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO
    am: 01ead7c96b

    Change-Id: Ifbfafaacac3eb30d20890f98ec3f1ff7f7b493f2

commit b92f1d2e1be35b331b18589a8cde81d51ddd31d6
Author: Pawin Vongmasa <pawin@google.com>
Date:   Thu May 10 19:05:09 2018 -0700

    Disable tests for secure audio decoders

    Test: make vts -j123 && vts-tradefed run commandAndExit vts \
    --skip-all-system-status-check \
    --skip-preconditions -m VtsHalMediaOmxV1_0Host \
    -l INFO

    Bug: 70933963
    Change-Id: Iaaf3b7d382e7df4374dd7e03e5cc7b2ae6861fad

commit 70d13c2ad31cf8e9bcf2d9c81e0161ba3295cc1e
Merge: cfab8dac2 01ead7c96
Author: Kevin Rocard <krocard@google.com>
Date:   Wed Jul 11 17:56:31 2018 -0700

    [automerger skipped] Audio VTS: run tear-down hooks in LIFO instead of FIFO
    am: 01ead7c96b  -s ours

    Change-Id: I827c0bd5011129a704d35cdcd2df9f9bbe7eadfe

commit 03f16e442af2c1bf1f47c77c9ef71477c8da1398
Merge: 366c0abba ec233bf69
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Tue Jul 10 04:58:13 2018 +0000

    Merge "Fix IUsb version number in vts test" into pi-dev

commit ec233bf692435c6cc1472bd2677bdf46d4befa94
Author: Hsin-Yi Chen <hsinyichen@google.com>
Date:   Wed Jul 4 10:35:01 2018 +0800

    Fix IUsb version number in vts test

    Bug: 110913709
    Test: vts-tradefed run vts -m VtsHalUsbV1_1Target
    Change-Id: I9ae6add2fe8ff7138e07797c3a191b6dfe611948
    Merged-In: I9ae6add2fe8ff7138e07797c3a191b6dfe611948
    (cherry picked from commit b4193b855c745da6772607d32f5351300ac826e1)

commit 366c0abba49abdd3039ec5f6762952143bda2e36
Merge: 75aca3976 91cc8f483
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 2 21:53:29 2018 +0000

    Merge "Tolerate 1 sv status in GNSS blacklist VTS test" into pi-dev

commit 75aca397636e5986918fa6b11779673aba8d01a6
Merge: 812607cf1 ec5aa6af4
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 2 21:46:40 2018 +0000

    Merge "Secure_element: vts: Modify openBasicChannel as per OMAPI standard" into pi-dev

commit ec5aa6af4d8b330af6c8599830942e29294aa688
Author: Ruchi Kandoi <kandoiruchi@google.com>
Date:   Mon Jul 2 13:20:34 2018 -0700

    Secure_element: vts: Modify openBasicChannel as per OMAPI standard

    CHANNEL_NOT_AVAILABLE should be returned when opening basic channel
    is not permitted on the secure element

    Test: Test with SIM1 HAL
    Bug: 110945797
    Merged-In: I2dd4eafaf4c534b49a37690a9baadcc5ac93190c
    Change-Id: I2dd4eafaf4c534b49a37690a9baadcc5ac93190c

commit 812607cf13d9ee4c604915d624428a7d7b512036
Merge: 6c72c271a 5ea5dda2c
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 2 21:27:55 2018 +0000

    Merge "Improve VTS GNSS 1.1 reliability." into pi-dev

commit 6c72c271ad006155dd7e0470d80f992d3be921b2
Merge: 8d555ac0a 84cff99b2
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jul 2 21:27:16 2018 +0000

    Merge "Delete time/position in InjectDelete instead of Delete_all" into pi-dev

commit 91cc8f4832882e8fa9baa04d717184636a57314d
Author: Yu-Han Yang <yuhany@google.com>
Date:   Mon Jul 2 10:48:08 2018 -0700

    Tolerate 1 sv status in GNSS blacklist VTS test

    Bug: 110969497
    Test: run VTS test on device.
    Change-Id: I26345bb62513da8530cb48672e5f59a915817cb4

commit 5ea5dda2c33f9d2f1db77d6b4493f0eb356c2937
Author: WyattRiley <wyattriley@google.com>
Date:   Thu Jun 28 15:05:14 2018 -0700

    Improve VTS GNSS 1.1 reliability.

    Allow VTS test for low power mode to handle
    certain vendor issues that supply one extra location
    at the start of low power mode.

    Allow more time for GNSS first fix, and warmup as
    needed given limited VTS access to AGPS.

    Bug: 110626730
    Bug: 110987651
    Test: (TODO) Passes on device.
    Change-Id: Ieeefd7fcd45890b03dffbbee965e1d9b17805c4c

commit 8d555ac0a46b37da5314f9fe8d7ae12143a02726
Merge: 714ddf05d bb372e598
Author: Yu-Han Yang <yuhany@google.com>
Date:   Mon Jul 2 18:08:37 2018 +0000

    Merge "Inject last location in InjectBestLocation VTS test" into pi-dev

commit 84cff99b2fcae8757704b0384552aebe290165ed
Author: Yu-Han Yang <yuhany@google.com>
Date:   Mon Jul 2 10:41:28 2018 -0700

    Delete time/position in InjectDelete instead of Delete_all

    - DELETE_ALL will delete XTRA.

    Bug: 110626730
    Test: run VTS test on device.
    Change-Id: I4f01430f24f92238193d3de6b6fbb31e81e9f006

commit bb372e5984a612cb6972e837662d64a90785fbd8
Author: Yu-Han Yang <yuhany@google.com>
Date:   Fri Jun 29 16:21:32 2018 -0700

    Inject last location in InjectBestLocation VTS test

    Bug: 110626730
    Test: run VTS on device.
    Change-Id: I6f57dd7f9164dacf011f25412e55fcd22821aca0

commit 714ddf05d738e498054d4bdcb6eb25dd679b1319
Merge: 8216f3df0 4595c66a1
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Jun 29 14:36:14 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO am: cfab8dac2b
    am: 4595c66a1e

    Change-Id: Idb84f4a8259683b825a02051264d0a6a89af24c5

commit 4595c66a1e5b5e36da2ea112b1af70f23057fd9e
Merge: 2d6e23863 cfab8dac2
Author: Kevin Rocard <krocard@google.com>
Date:   Fri Jun 29 14:12:07 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO
    am: cfab8dac2b

    Change-Id: I10b15c6973b65229728151f5c47322ef167ae0e7

commit 01ead7c96b67f230425e8c131258d5ff9b8aa3ff
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jun 28 17:34:11 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO

    The audio tests use a static cache of some HAL objects for
    performance reasons (speed up by 10x on Pixel).
    Those object are destroy during the test environment tear-down.

    This tear-down was destroying the objects in a FIFO instead of LIFO
    order. Thus the DeficesFactory was destroyed before the Device it
    created.

    Bug: 79889318
    Test: vts-tradefed run commandAndExit vts --module VtsHalAudioV2_0Target
          check that the device destructor is called before the
          devicesFactory one.
    Change-Id: I1b4345158139ba14a8779a9508f7ebdc41129d1d
    Merged-In: I1b4345158139ba14a8779a9508f7ebdc41129d1d
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit cfab8dac2b83a3bb50f0ac7cb5a34690c818b0ef
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jun 28 17:34:11 2018 -0700

    Audio VTS: run tear-down hooks in LIFO instead of FIFO

    The audio tests use a static cache of some HAL objects for
    performance reasons (speed up by 10x on Pixel).
    Those object are destroy during the test environment tear-down.

    This tear-down was destroying the objects in a FIFO instead of LIFO
    order. Thus the DeficesFactory was destroyed before the Device it
    created.

    Bug: 79889318
    Test: vts-tradefed run commandAndExit vts --module VtsHalAudioV2_0Target
          check that the device destructor is called before the
          devicesFactory one.
    Change-Id: I1b4345158139ba14a8779a9508f7ebdc41129d1d
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit 8216f3df076b3db4c6b5e0de3b2acb1b4cebeadb
Merge: 897b56e2a 0fdd7cdc0
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Fri Jun 29 15:00:41 2018 +0000

    Merge "Camera: Allow 3% ISO tolerance during ISO burst VTS" into pi-dev

commit 897b56e2a8c21ad8df5bf191f7cce76cb7c27c21
Merge: 72641e7ad ae8da1b70
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Fri Jun 29 10:57:17 2018 +0000

    Merge "Fixing Keymaster documentation." into pi-dev

commit 72641e7ad014a011562c3fd16444b919d32aeb63
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jun 28 18:00:05 2018 -0700

    Audio VTS was testing wrong uninitialized variable due to typo

    The test was testing a uninitialized variable instead of testing
    the result of the tested method.

    Bug: 110963314
    Test: vts-tradefed run commandAndExit vts --module VtsHalAudioV2_0Target
    Change-Id: I9a212eef690ae627fd7f7dbfaf4a0b4047c491b3
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit 518b8253b03e42ce2bd8bbeeb9b5411ee509ab0b
Merge: be8beb8c0 529d2fffa
Author: Nathan Harold <nharold@google.com>
Date:   Wed Jun 27 22:26:25 2018 +0000

    Merge "Add docs for setSignalStrengthReportingCriteria" into pi-dev

commit be8beb8c0a0d725c1192fa765831eb33e28634c8
Merge: 01e286d5a c0e2e2b07
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Wed Jun 27 22:12:19 2018 +0000

    Merge "Fix missed refactor of serial" into pi-dev

commit c0e2e2b071df5cdff10193556163e2975f0b682c
Author: sqian <shuoq@google.com>
Date:   Wed Jun 27 12:12:26 2018 -0700

    Fix missed refactor of serial

    Bug: 109822806
    Test: run vts
    Change-Id: If88384699dbb4c2ddd1c580d2b35be38afd0f8e8

commit 01e286d5a71fd7a99ff40c44b16086f340adf7d3
Merge: 409b5fd5f 0215d11cf
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Wed Jun 27 01:51:07 2018 +0000

    Merge "Revert "Handle radio API in low version VTS for high version service"" into pi-dev

commit 0215d11cf266219245e27234d65e8f9eeac9f6c0
Author: Shuo Qian <shuoq@google.com>
Date:   Wed Jun 27 00:33:10 2018 +0000

    Revert "Handle radio API in low version VTS for high version service"

    This reverts commit cabe101cd2dc945b6b4ef4295f4fa650077d0c62.

    Bug: 109839239

    Reason for revert: Treble/VTS backward compatibility

    Change-Id: Ibef1d91261fe6318c65fd617a2bee7f5d69bebae

commit 409b5fd5fbba6b59217e691db7c6e8dcd5bcc837
Merge: 1e757749f 7b75f015a
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jun 26 23:57:01 2018 +0000

    Merge "keymaster: spec does not require that update produce output" into pi-dev

commit 7b75f015a7a7ebc40722fd4f36c9ca70e7e58e59
Author: nagendra modadugu <ngm@google.com>
Date:   Mon Jun 25 19:56:35 2018 -0700

    keymaster: spec does not require that update produce output

    Remove out of spec enforcement on the amount of data returned
    by update, as this is not specified in the HAL.

    Bug: 109771020
    Test: yes it is
    Change-Id: Ic41afbd01d51faf48d3c0fe090409ebcd257cc1e

commit 1e757749fbb770fc3cfcb17cf171832b5093a8a7
Merge: 9d114dbf8 cabe101cd
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jun 26 20:08:32 2018 +0000

    Merge "Handle radio API in low version VTS for high version service" into pi-dev

commit 9d114dbf88a53127372ab18726ed95b6bba18461
Merge: e4722f92d 6c9c6e62c
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jun 26 19:15:33 2018 +0000

    Merge "Allow getCapturePosition to return 0 frames for unprepared streams" into pi-dev

commit cabe101cd2dc945b6b4ef4295f4fa650077d0c62
Author: sqian <shuoq@google.com>
Date:   Wed Jun 6 20:55:15 2018 -0700

    Handle radio API in low version VTS for high version service

    There are some request/response pair that could be replaced in
    higher-version hal. Radio service need to handle
    these request/response pair specific to version number. For example,
    e.g. getVoiceRegistrationStateResponse_1_2 replaces
    getVoiceRegistrationStateResponse for getVoiceRegistrationState
    in 1.2 radio service. We need to add util and update version number
    of IRadio service to check the version for testing the correct
    behavior.

    Bug: 109839239
    Test: run vts
    Change-Id: I291690e77ea0e6e37fe75219e550f79fa44fb840

commit 6c9c6e62c193461ed0de4666d0995631ba39e009
Author: Kevin Rocard <krocard@google.com>
Date:   Thu Jun 21 14:10:58 2018 -0700

    Allow getCapturePosition to return 0 frames for unprepared streams

    For device supporting getCapturePosition,
    VTS only allowed unprepared stream to return INVALID_STATE.
    Now also allow for the stream to return 0 frames similarly to the other
    non started states.

    Test: vts-tradefed run commandAndExit vts --module VtsHalAudioV2_0Target
    Bug: 110367728
    Cherry-piked from: d01dc3edac9e92981e7ae419d0e7622f753acf94
    Change-Id: Ibdf8df8cb8809e98c40a50035371df6893fe4da4
    Signed-off-by: Kevin Rocard <krocard@google.com>

commit 0fdd7cdc0eab249e0f0615fad1034231c09987dd
Author: Emilian Peev <epeev@google.com>
Date:   Tue Jun 26 09:17:33 2018 +0100

    Camera: Allow 3% ISO tolerance during ISO burst VTS

    The advertised ISO ranges may not be entirely supported on
    some devices. Expect a 3% tolerance when comparing the applied
    results versus the expected ISO value.

    Bug: 80025874
    Test: run vts --skip-all-system-status-check --skip-preconditions
    --primary-abi-only --module VtsHalCameraProviderV2_4Target -l INFO

    Change-Id: Ibd2758e48a0924e81877e35dd27433669274fdb3

commit e4722f92ddbe325a14882f226d5e752d558d1b24
Merge: be04f192e c7896501d
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Tue Jun 26 00:05:19 2018 +0000

    Merge "Allow NOT_SUPPORTED for setLinkCapacityReportingCriteria on GERAN." into pi-dev

commit be04f192e96c854c18828d194996ef85eea9bb05
Merge: 7dab610c3 d898d0a42
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jun 25 23:40:02 2018 +0000

    Merge "Fix attestation test." into pi-dev

commit c7896501db413c9a0fa44d2697da4079610075d8
Author: Amit Mahajan <amitmahajan@google.com>
Date:   Mon Jun 25 14:16:37 2018 -0700

    Allow NOT_SUPPORTED for setLinkCapacityReportingCriteria on GERAN.

    Test: run vts -m VtsHalRadioV1_2Target
    Bug: 110716988
    Change-Id: I9a5f014d498db00d818870cbd73e119f66562ef1

commit 7dab610c3612f6a939da765fc458f4215951002d
Merge: a0ff82f78 2bb626a29
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jun 25 20:52:42 2018 +0000

    Merge "Call notify for voiceReg and dataReg VTS tests" into pi-dev

commit a0ff82f781bde09acef6b804a200d7dd558d132e
Merge: d33b77a19 0ff41b94b
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jun 25 20:06:25 2018 +0000

    Merge "Add setIndicationFilter response notification in 1.2 VTS" into pi-dev

commit 529d2fffa02451406f013b354fd7c07164f619b1
Author: Nathan Harold <nharold@google.com>
Date:   Thu Jun 21 11:46:42 2018 -0700

    Add docs for setSignalStrengthReportingCriteria

    Because setSignalStrengthReportingCriteria only
    supports a single measurement quantity, provide
    further clarification on the applicability of the
    API and how it may be used in various situations.

    Bug: 110121199
    Test: compilation - docstring-only change
    Merged-In: If4236070fbc03368e5a78b0cf502cdc4a529a6ed
    Change-Id: If4236070fbc03368e5a78b0cf502cdc4a529a6ed

commit d898d0a4223df75225cfdf23e6f184166933cdb3
Author: Shawn Willden <swillden@google.com>
Date:   Tue Jun 19 22:10:03 2018 -0600

    Fix attestation test.

    Bug: 77588764
    Test: VtsHalKeymasterV4_0TargetTest
    Change-Id: Ibe264d08ae7b3333a6949761a92759f5305b3fcb

commit d33b77a1942bb86b4c63859c0b1c70618111599c
Merge: 2aae65f84 431eb118f
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Fri Jun 22 23:53:09 2018 +0000

    Merge "Fixed VTS failure in no SIM case" into pi-dev

commit 2aae65f84453c31160f02fcf53ccc26e3625018a
Merge: d8725d152 e3ff41fc1
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Fri Jun 22 23:45:38 2018 +0000

    Merge "Add VTS test to verify scheduling capability" into pi-dev

commit d8725d1521b97c3a0a6c5b7e8e9e1cb9b7ead1d8
Merge: dfe1131c9 07eabef42
Author: Peiyong Lin <lpy@google.com>
Date:   Fri Jun 22 23:40:28 2018 +0000

    Merge "Update power HAL to version 1.3." into pi-dev

commit dfe1131c973479cbd5d7e0612da0706d9d86475d
Merge: ab0704aed 7470cbd04
Author: Shuo Qian <shuoq@google.com>
Date:   Fri Jun 22 23:29:14 2018 +0000

    Merge "Add REQUEST_NOT_SUPPORTED for changeIccPinForApp and changeIccPin2ForApp" into pi-dev

commit 431eb118f84de14c94ec18f887197944ec17e712
Author: Jack Yu <jackyu@google.com>
Date:   Fri Jun 22 13:31:09 2018 -0700

    Fixed VTS failure in no SIM case

    Added RadioError::NONE as a possible return value for data call
    setup API. The data call could be setup for emergency purposes
    when no SIM inserted.

    Test: VTS
    Bug: 109767888
    Change-Id: I4469c371f999b99d35f4078df000f05ee1f3c84d

commit 07eabef427ce8851f91a24ff29a4ab98e18ceff2
Author: Michael Wright <michaelwr@google.com>
Date:   Thu Jun 21 02:42:31 2018 +0100

    Update power HAL to version 1.3.

    Adds new EXPENSIVE_RENDERING power hint.

    This adds a new library which does not affect any pre-existing
    targets unless they create and add a new binary which uses this.

    BUG: 110112323
    Test: adb shell /data/nativetest/VtsHalPowerV1_3TargetTest/VtsHalPowerV1_3TargetTest
    Change-Id: I5fb33abbbe4c4958882a106dfa400ad74013e40d

commit ab0704aed2e96f80a48f2125e84325e00e4043cb
Merge: b6093dccf a7587b5a7
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Thu Jun 21 20:25:00 2018 +0000

    Merge "Allow REQUEST_NOT_SUPPORTED as an error for startNetworkScan" into pi-dev

commit ae8da1b70ad563edb79f4f7429b704b54c1a9e19
Author: Eran Messeri <eranm@google.com>
Date:   Tue Jun 19 17:12:04 2018 +0100

    Fixing Keymaster documentation.

    Keymaster HAL documentation documents the bootPatchLevel as having
    tag 718, while types.hal indicates the tag value for it is actually
    719.

    Test: N/A
    Bug: 78104779
    Change-Id: I0dde0b3c863081f2594e20466d8e82866a5f2d2e

commit a7587b5a7fdace0d193ad333e6f5cda8b995570b
Author: Amit Mahajan <amitmahajan@google.com>
Date:   Fri Jun 15 11:16:28 2018 -0700

    Allow REQUEST_NOT_SUPPORTED as an error for startNetworkScan

    We are trying to tighten the APIs. However for this case since the
    documentation was not updated, we are allowing NOT_SUPPORTED for
    now and will be cleaned up in a later release.

    Test: run vts -m VtsHalRadioV1_2Target
    Bug: 110118713
    Change-Id: Id9dd3d7bac99bed36ceb9c906189f1fea78d5a2c

commit b6093dccf01c6bd5fbcb6123b8930266ea1a3fda
Merge: f053b3de2 a1c4e0ec5
Author: Janis Danisevskis <jdanis@google.com>
Date:   Wed Jun 20 22:32:13 2018 +0000

    Merge "Relax HMAC computation check" into pi-dev

commit a1c4e0ec5deaf3c6c4e8694afd67eb5a24bd0fa5
Author: Janis Danisevskis <jdanis@google.com>
Date:   Tue Jun 19 19:08:15 2018 -0700

    Relax HMAC computation check

    This KM4 key agreement check is causing some pain on early units
    that aren't completely provisioned in both locked and non-Green
    (unlocked) states.

    This doesn't impact KM3 devices (Pixel 2016/2017 etc.)

    Bug: 110301629
    Change-Id: I5a737ac8a335863b1099c29cf3c0496adeb41e15

commit f053b3de23ed63f1401cb61317d596e9330d35a1
Merge: 4f0d19ebf 76fa88e7a
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Wed Jun 20 00:05:56 2018 +0000

    Merge "Add hwcomposer to the system-background cpuset for hal v2.2" into pi-dev

commit 4f0d19ebff1f4a3eb565d8432f44b561ebd4abe2
Author: Yu-Han Yang <yuhany@google.com>
Date:   Thu Jun 14 14:17:58 2018 -0700

    Set the floor value of time estimate as 2017 Jan 01 00:00:00 GMT

    - The VTS test checks if the time estimate is a sane value. Thus, any
    arbitrary sane value is acceptable. Here we make it consistent to
    IGnssDebug.hal, where a comment mentions 2017 Jan 1 as an example of
    the value.

    Bug: 110094003
    Test: make vts, and tested on device.
    Merged-In: Ic4f6b597a718ea3e98a67c7939f9e6930d44d224
    Change-Id: Ic4f6b597a718ea3e98a67c7939f9e6930d44d224
    (cherry picked from commit 5fa43c83e90ccd0f852c89feb0e071aad195d7b2)

commit 7470cbd04dbb90ec4a6481d08db54c6a8c5f2efd
Author: sqian <shuoq@google.com>
Date:   Fri Jun 15 14:24:31 2018 -0700

    Add REQUEST_NOT_SUPPORTED for changeIccPinForApp and changeIccPin2ForApp

    Bug: 110037298
    Test: run vts -m VtsHalRadioV1_0Target
    Change-Id: Iaba800814c5a6950d086a2f105714d01fdaa14a4

commit 76fa88e7a01a5a0cb3588710dae7e35b002de124
Author: Carmen Jackson <carmenjackson@google.com>
Date:   Thu Jun 14 14:53:14 2018 -0700

    Add hwcomposer to the system-background cpuset for hal v2.2

    This change was made for hal v2.1 but not cross-ported to 2.2.

    Bug: 110167043
    Test: $ adb shell ps -A | grep composer
    system  630 ...  android.hardware.graphics.composer@2.2-service
    $ adb shell cat /proc/630/cpuset
    /system-background

    Change-Id: I40b8a0386a7cf67fe64b1e0e40d81b78891faaca

commit db94365e732de859fadeaa2e7b422b1ecbe66d6b
Merge: e70531a92 eb159af99
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jun 18 23:35:25 2018 +0000

    Merge "health: Update README to remove .override [DO NOT MERGE]" into pi-dev

commit eb159af99494bd26a3c6d41b88614eb0b832ba04
Author: Yifan Hong <elsk@google.com>
Date:   Mon Jun 18 14:39:01 2018 -0700

    health: Update README to remove .override [DO NOT MERGE]

    The .override module does not have correct rc and
    sepolicy file_contexts configured, so let's allow
    OEMs to keep healthd. If an OEM does want to remove
    healthd they can provide a device-specific
    health service impl.

    Test: none
    Bug: 110228707
    Change-Id: I9ba32ae366df4ba58994ef0e3f9eb57cab5626f7

commit e70531a92e0318e61a28903a043892e09c9f2d93
Merge: 6e7870938 2d6e23863
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:33:01 2018 -0700

    Fix setBandMode. am: ab2b8bf919 am: d88330667d am: ea34bd6a05
    am: 2d6e238637

    Change-Id: Ieb380a674df9d73fac14a30dc084251c7db3f3e9

commit 6e787093817847e59b2374bae9eb7153083e0141
Merge: 17be71d39 b24e51a89
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:28:31 2018 -0700

    [automerger skipped] Fix setBandMode. am: ab2b8bf919  -s ours am: d1e489c94c
    am: b24e51a892

    Change-Id: Ia2929b679bd5f6d0244876a725e4ea334355835c

commit 2d6e238637114af07a3bd8b04ee39b5faa9bcdfa
Merge: b24e51a89 ea34bd6a0
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:28:30 2018 -0700

    Fix setBandMode. am: ab2b8bf919 am: d88330667d
    am: ea34bd6a05

    Change-Id: I58bf1b67184a14f70d49b46c5da8c225406ed1ed

commit b24e51a89233395eb95093acfaba2e1d9603ee08
Merge: 006436f92 d1e489c94
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:24:00 2018 -0700

    [automerger skipped] Fix setBandMode. am: ab2b8bf919  -s ours
    am: d1e489c94c

    Change-Id: I26809cbc6614c4dc71dfe76e5df24ac06ed8946a

commit ea34bd6a052082253fd9d907141870b7fabaf03d
Merge: e0c3d0c3f d88330667
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:23:56 2018 -0700

    Fix setBandMode. am: ab2b8bf919
    am: d88330667d

    Change-Id: Ibf1c624c097956ec0a769f98a3cf5abe74ecc020

commit d88330667d1e285b4590ca9d34d409642fb2d7d1
Merge: 5de1ae23f ab2b8bf91
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:20:24 2018 -0700

    Fix setBandMode.
    am: ab2b8bf919

    Change-Id: Ie8bbd67d2d0ffe1af57672fd4990cfabb751ef7a

commit d1e489c94caa6338fe3486438274fbaa2bf21a2d
Merge: 9886d749d ab2b8bf91
Author: sqian <shuoq@google.com>
Date:   Mon Jun 18 14:10:59 2018 -0700

    [automerger skipped] Fix setBandMode.
    am: ab2b8bf919  -s ours

    Change-Id: Ibbdfad48f943c35419a91ccf8b3d4651bfab88f1

commit 17be71d3971114cd4ed1e33ba7835187a01a23c5
Merge: f3d1d3aed 3a7e2cade
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Mon Jun 18 17:26:22 2018 +0000

    Merge "Respect limited requirements for Strongbox KM implementations" into pi-dev

commit ab2b8bf9193364c42fef1007b1744c49641a97fb
Author: sqian <shuoq@google.com>
Date:   Mon Jun 11 18:37:13 2018 -0700

    Fix setBandMode.

    Bug: 67834975
    Test: sanity

    Merged-In: Ie907cdb464a44d92be47d898151d71eb2d83a11c

commit 3a7e2cade3305d59f861c21206b5862de9d05d5c
Author: nagendra modadugu <ngm@google.com>
Date:   Tue Jun 5 11:05:19 2018 -0700

    Respect limited requirements for Strongbox KM implementations

    With this patch the KM VTS test apply the restricted requirements on
    supported key sizes, EC curves, and Digests to Strongbox keymaster
    implementations.

    Also amend tests to use Update().

    Test: Yes it is
    Bug: 74519020
    Change-Id: Ibec9c3398671f81dbc0ecf78e554726276160579

commit e3ff41fc12fb7a80ee533e4459035ef4545c174d
Author: Vishal Agarwal <agarwalvishal@google.com>
Date:   Tue Jun 5 18:42:01 2018 -0700

    Add VTS test to verify scheduling capability

    2018+ devices must support GNSS capability scheduling
    Test results: go/vts-review-bucket/pi-dev/4267645

    Bug: 109642198
    Test: atest VtsHalGnssV1_0TargetTest
    Change-Id: I7394674abca8f8c40ab30403be6b41bbbb279956

commit f3d1d3aed3e689db34e06450dd8914d056fb4107
Merge: 79db3ec84 817848e59
Author: TreeHugger Robot <treehugger-gerrit@google.com>
Date:   Thu Jun 14 17:16:03 2018 +0000

    Merge "Allow general errors for getImsiForApp()." into pi-dev

commit 817848e59e18334a30f623ef143cf182716fd3fa
Author: Amit Mahajan <amitmahajan@google.com>
Date:   Tue Jun 12 15:23:39 2018 -0700

    Allow general errors for getImsiForApp().

    This is to match it with other 1.0 tests where general errors are
    allowed. For newer tests we have decided to not allow these errors,
    but a failure for this old test is reported when run with SIM
    present.

    Test: run vts -m VtsHalRadioV1_0Target
    Bug: 109889468
    Change-Id: If36083b7832706a50805932e8ba08e4eb397f3fe

commit 79db3ec849c5f1142a0802dccfff6cbef564ff76
Author: Hung-ying Tyan <tyanh@google.com>
Date:   Fri Jun 8 17:53:48 2018 +0800

    Fix free() in keymaster VTS

    The buffer is allocated by OPENSSL_malloc() in X509_NAME_oneline(name, nullptr, 0).
    Should be reclaimed by OPENSSL_free() instead of free().

    The patch is provided by vink.shen@mediatek.corp-partner.google.com

    Bug: 109708231
    Test: build pass
    Change-Id: I66a864e3e28905eebac2e7d3a4517d4d5aaa39df

commit 0ff41b94b30a0db0ce4a6a5b29600ced5853a762
Author: sqian <shuoq@google.com>
Date:   Wed Jun 6 22:35:20 2018 -0700

    Add setIndicationFilter response notification in 1.2 VTS

    Test: compile
    Bug: 109822806
    Change-Id: I95102a148a26cab80235cc68ad83143a9bb6eb39

commit 2bb626a2975ef3398adbcb12fe50804cf71efc39
Author: Eric Schwarzenbach <easchwar@google.com>
Date:   Wed Jun 6 16:09:58 2018 -0700

    Call notify for voiceReg and dataReg VTS tests

    Bug: 80554443
    Test: vts
    Change-Id: I19f7131f7b65323065f3c283a89668ff761815e3

Change-Id: I1ef593a9329218371fb7d07437bf8f1dfaede8f1
---
 .../android.hardware.audio@2.0-service.rc     |   3 +-
 .../include/utility/EnvironmentTearDown.h     |   2 +-
 .../utility/include/utility/ValidateXml.h     |  40 +++---
 .../test/utility/src/ValidateXml.cpp          |  16 ++-
 .../functional/AudioPrimaryHidlHalTest.cpp    |  17 ++-
 .../ValidateAudioEffectsConfiguration.cpp     |   4 +-
 .../2.0/xml/audio_effects_conf_V2_0.xsd       |   2 +-
 .../3.2/default/CameraDeviceSession.cpp       |  50 +++++++-
 .../device/3.2/default/CameraDeviceSession.h  |   5 +
 .../3.3/default/CameraDeviceSession.cpp       |   2 +
 .../3.4/default/CameraDeviceSession.cpp       |  43 ++++++-
 .../device_v3_4_impl/CameraDeviceSession.h    |   2 +
 .../VtsHalCameraProviderV2_4TargetTest.cpp    |  20 ++-
 .../compatibility_matrix.3.xml                |   2 +-
 current.txt                                   |   9 +-
 drm/1.0/default/DrmFactory.cpp                |   2 +-
 drm/1.0/default/LegacyPluginPath.cpp          |  16 ++-
 drm/1.0/default/include/PluginLoader.h        |   5 +-
 .../functional/VtsHalGnssV1_0TargetTest.cpp   |  16 ++-
 gnss/1.1/vts/functional/gnss_hal_test.cpp     |  11 +-
 gnss/1.1/vts/functional/gnss_hal_test.h       |   9 +-
 .../vts/functional/gnss_hal_test_cases.cpp    |  77 ++++++-----
 .../utils/hwc2onfbadapter/HWC2OnFbAdapter.cpp |  30 ++++-
 .../include/hwc2onfbadapter/HWC2OnFbAdapter.h |   7 +
 ....hardware.graphics.composer@2.2-service.rc |   1 +
 health/2.0/README                             |   7 +-
 keymaster/4.0/IKeymasterDevice.hal            |   2 +-
 keymaster/4.0/support/Keymaster.cpp           |   8 +-
 keymaster/4.0/support/attestation_record.cpp  |  29 ++++-
 .../include/keymasterV4_0/key_param_output.h  |   4 +
 .../include/keymasterV4_0/keymaster_tags.h    |   6 +-
 .../vts/functional/VerificationTokenTest.cpp  |   5 +-
 .../functional/keymaster_hidl_hal_test.cpp    | 120 ++++++++++--------
 .../VtsHalMediaOmxV1_0TargetAudioDecTest.cpp  |  10 ++
 power/1.3/Android.bp                          |  21 +++
 power/1.3/IPower.hal                          |  33 +++++
 power/1.3/types.hal                           |  28 ++++
 power/1.3/vts/functional/Android.bp           |  27 ++++
 .../functional/VtsHalPowerV1_3TargetTest.cpp  |  64 ++++++++++
 radio/1.0/IRadioResponse.hal                  |   2 +
 .../1.0/vts/functional/radio_hidl_hal_icc.cpp |  25 ++--
 .../vts/functional/radio_hidl_hal_misc.cpp    |  65 ++++++----
 .../1.1/vts/functional/radio_hidl_hal_api.cpp |  23 ++--
 radio/1.2/IRadio.hal                          |  23 +++-
 .../1.2/vts/functional/radio_hidl_hal_api.cpp |  78 +++++++++---
 radio/1.2/vts/functional/radio_response.cpp   |   4 +-
 .../VtsHalSecureElementV1_0TargetTest.cpp     |   2 +-
 .../functional/VtsHalUsbV1_1TargetTest.cpp    |   2 +-
 .../functional/VtsHalWifiV1_2TargetTest.cpp   |   4 +-
 49 files changed, 745 insertions(+), 238 deletions(-)
 create mode 100644 power/1.3/Android.bp
 create mode 100644 power/1.3/IPower.hal
 create mode 100644 power/1.3/types.hal
 create mode 100644 power/1.3/vts/functional/Android.bp
 create mode 100644 power/1.3/vts/functional/VtsHalPowerV1_3TargetTest.cpp

diff --git a/audio/common/all-versions/default/service/android.hardware.audio@2.0-service.rc b/audio/common/all-versions/default/service/android.hardware.audio@2.0-service.rc
index 8217b946..6e91bccb 100644
--- a/audio/common/all-versions/default/service/android.hardware.audio@2.0-service.rc
+++ b/audio/common/all-versions/default/service/android.hardware.audio@2.0-service.rc
@@ -2,7 +2,8 @@ service vendor.audio-hal-2-0 /vendor/bin/hw/android.hardware.audio@2.0-service
     class hal
     user audioserver
     # media gid needed for /dev/fm (radio) and for /data/misc/media (tee)
-    group audio camera drmrpc inet media mediadrm net_bt net_bt_admin net_bw_acct
+    group audio camera drmrpc inet media mediadrm net_bt net_bt_admin net_bw_acct wakelock
+    capabilities BLOCK_SUSPEND
     ioprio rt 4
     writepid /dev/cpuset/foreground/tasks /dev/stune/foreground/tasks
     # audioflinger restarts itself when it loses connection with the hal
diff --git a/audio/common/all-versions/test/utility/include/utility/EnvironmentTearDown.h b/audio/common/all-versions/test/utility/include/utility/EnvironmentTearDown.h
index a96d06e0..7a08a54f 100644
--- a/audio/common/all-versions/test/utility/include/utility/EnvironmentTearDown.h
+++ b/audio/common/all-versions/test/utility/include/utility/EnvironmentTearDown.h
@@ -37,7 +37,7 @@ namespace utility {
 class Environment : public ::testing::VtsHalHidlTargetTestEnvBase {
    public:
     using TearDownFunc = std::function<void()>;
-    void registerTearDown(TearDownFunc&& tearDown) { tearDowns.push_back(std::move(tearDown)); }
+    void registerTearDown(TearDownFunc&& tearDown) { tearDowns.push_front(std::move(tearDown)); }
 
    private:
     void HidlTearDown() override {
diff --git a/audio/common/all-versions/test/utility/include/utility/ValidateXml.h b/audio/common/all-versions/test/utility/include/utility/ValidateXml.h
index 95080d1c..91adfc12 100644
--- a/audio/common/all-versions/test/utility/include/utility/ValidateXml.h
+++ b/audio/common/all-versions/test/utility/include/utility/ValidateXml.h
@@ -45,29 +45,37 @@ namespace utility {
                         xmlFilePath, xsdFilePath)
 
 /** Validate an XML according to an xsd.
- * The XML file must be in at least one of the provided locations.
- * If multiple are found, all are validated.
+ * All file named xmlFileName in each xmlFileLocations folder must be valid if present.
+ * @tparam atLeastOneRequired If true, at least one file has to be found.
+ *                           If false, no found file is a success.
  */
+template <bool atLeastOneRequired = true>
 ::testing::AssertionResult validateXmlMultipleLocations(
     const char* xmlFileNameExpr, const char* xmlFileLocationsExpr, const char* xsdFilePathExpr,
     const char* xmlFileName, std::vector<const char*> xmlFileLocations, const char* xsdFilePath);
 
-/** ASSERT that an XML is valid according to an xsd.
- * The XML file must be in at least one of the provided locations.
- * If multiple are found, all are validated.
- */
-#define ASSERT_ONE_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath) \
-    ASSERT_PRED_FORMAT3(                                                                    \
-        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations,    \
+/** ASSERT that all found XML are valid according to an xsd. */
+#define ASSERT_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath)         \
+    ASSERT_PRED_FORMAT3(                                                                        \
+        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations<false>, \
         xmlFileName, xmlFileLocations, xsdFilePath)
 
-/** EXPECT an XML to be valid according to an xsd.
- * The XML file must be in at least one of the provided locations.
- * If multiple are found, all are validated.
- */
-#define EXPECT_ONE_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath) \
-    EXPECT_PRED_FORMAT3(                                                                    \
-        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations,    \
+/** EXPECT that all found XML are valid according to an xsd. */
+#define EXPECT_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath)         \
+    EXPECT_PRED_FORMAT3(                                                                        \
+        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations<false>, \
+        xmlFileName, xmlFileLocations, xsdFilePath)
+
+/** ASSERT that all found XML are valid according to an xsd. At least one must be found. */
+#define ASSERT_ONE_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath)    \
+    ASSERT_PRED_FORMAT3(                                                                       \
+        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations<true>, \
+        xmlFileName, xmlFileLocations, xsdFilePath)
+
+/** EXPECT that all found XML are valid according to an xsd. At least one must be found. */
+#define EXPECT_ONE_VALID_XML_MULTIPLE_LOCATIONS(xmlFileName, xmlFileLocations, xsdFilePath)    \
+    EXPECT_PRED_FORMAT3(                                                                       \
+        ::android::hardware::audio::common::test::utility::validateXmlMultipleLocations<true>, \
         xmlFileName, xmlFileLocations, xsdFilePath)
 
 }  // namespace utility
diff --git a/audio/common/all-versions/test/utility/src/ValidateXml.cpp b/audio/common/all-versions/test/utility/src/ValidateXml.cpp
index 5030af50..1a906d66 100644
--- a/audio/common/all-versions/test/utility/src/ValidateXml.cpp
+++ b/audio/common/all-versions/test/utility/src/ValidateXml.cpp
@@ -129,6 +129,7 @@ struct Libxml2Global {
     return ::testing::AssertionSuccess();
 }
 
+template <bool atLeastOneRequired>
 ::testing::AssertionResult validateXmlMultipleLocations(
     const char* xmlFileNameExpr, const char* xmlFileLocationsExpr, const char* xsdFilePathExpr,
     const char* xmlFileName, std::vector<const char*> xmlFileLocations, const char* xsdFilePath) {
@@ -150,7 +151,7 @@ struct Libxml2Global {
         }
     }
 
-    if (foundFiles.empty()) {
+    if (atLeastOneRequired && foundFiles.empty()) {
         errors.push_back("No xml file found in provided locations.\n");
     }
 
@@ -160,9 +161,20 @@ struct Libxml2Global {
            << "     While validating all: " << xmlFileNameExpr
            << "\n                 Which is: " << xmlFileName
            << "\n In the following folders: " << xmlFileLocationsExpr
-           << "\n                 Which is: " << ::testing::PrintToString(xmlFileLocations);
+           << "\n                 Which is: " << ::testing::PrintToString(xmlFileLocations)
+           << (atLeastOneRequired ? "Where at least one file must be found."
+                                  : "Where no file might exist.");
 }
 
+template ::testing::AssertionResult validateXmlMultipleLocations<true>(const char*, const char*,
+                                                                       const char*, const char*,
+                                                                       std::vector<const char*>,
+                                                                       const char*);
+template ::testing::AssertionResult validateXmlMultipleLocations<false>(const char*, const char*,
+                                                                        const char*, const char*,
+                                                                        std::vector<const char*>,
+                                                                        const char*);
+
 }  // namespace utility
 }  // namespace test
 }  // namespace common
diff --git a/audio/core/4.0/vts/functional/AudioPrimaryHidlHalTest.cpp b/audio/core/4.0/vts/functional/AudioPrimaryHidlHalTest.cpp
index c764ea62..0f8996fc 100644
--- a/audio/core/4.0/vts/functional/AudioPrimaryHidlHalTest.cpp
+++ b/audio/core/4.0/vts/functional/AudioPrimaryHidlHalTest.cpp
@@ -106,7 +106,10 @@ using namespace ::android::hardware::audio::common::test::utility;
 static auto okOrNotSupported = {Result::OK, Result::NOT_SUPPORTED};
 static auto okOrNotSupportedOrInvalidArgs = {Result::OK, Result::NOT_SUPPORTED,
                                              Result::INVALID_ARGUMENTS};
+static auto okOrInvalidStateOrNotSupported = {Result::OK, Result::INVALID_STATE,
+                                              Result::NOT_SUPPORTED};
 static auto invalidArgsOrNotSupported = {Result::INVALID_ARGUMENTS, Result::NOT_SUPPORTED};
+static auto invalidStateOrNotSupported = {Result::INVALID_STATE, Result::NOT_SUPPORTED};
 
 class AudioHidlTestEnvironment : public ::Environment {
    public:
@@ -555,11 +558,11 @@ TEST_F(AudioPrimaryHidlTest, SetConnectedState) {
             address.device = deviceType;
             auto ret = device->setConnectedState(address, state);
             ASSERT_TRUE(ret.isOk());
-            if (res == Result::NOT_SUPPORTED) {
+            if (ret == Result::NOT_SUPPORTED) {
                 doc::partialTest("setConnectedState is not supported");
                 return;
             }
-            ASSERT_OK(res);
+            ASSERT_OK(ret);
         }
     }
 }
@@ -949,8 +952,6 @@ TEST_IO_STREAM(RemoveNonExistingEffect, "Removing a non existing effect should f
 TEST_IO_STREAM(standby, "Make sure the stream can be put in stanby",
                ASSERT_OK(stream->standby()))  // can not fail
 
-static constexpr auto invalidStateOrNotSupported = {Result::INVALID_STATE, Result::NOT_SUPPORTED};
-
 TEST_IO_STREAM(startNoMmap, "Starting a mmaped stream before mapping it should fail",
                ASSERT_RESULT(invalidStateOrNotSupported, stream->start()))
 
@@ -1070,11 +1071,15 @@ TEST_P(InputStreamTest, GetInputFramesLost) {
 TEST_P(InputStreamTest, getCapturePosition) {
     doc::test(
         "The capture position of a non prepared stream should not be "
-        "retrievable");
+        "retrievable or 0");
     uint64_t frames;
     uint64_t time;
     ASSERT_OK(stream->getCapturePosition(returnIn(res, frames, time)));
-    ASSERT_RESULT(invalidStateOrNotSupported, res);
+    ASSERT_RESULT(okOrInvalidStateOrNotSupported, res);
+    if (res == Result::OK) {
+        ASSERT_EQ(0U, frames);
+        ASSERT_LE(0U, time);
+    }
 }
 
 TEST_P(InputStreamTest, updateSinkMetadata) {
diff --git a/audio/effect/2.0/vts/functional/ValidateAudioEffectsConfiguration.cpp b/audio/effect/2.0/vts/functional/ValidateAudioEffectsConfiguration.cpp
index d0bc6908..bf080d3e 100644
--- a/audio/effect/2.0/vts/functional/ValidateAudioEffectsConfiguration.cpp
+++ b/audio/effect/2.0/vts/functional/ValidateAudioEffectsConfiguration.cpp
@@ -27,6 +27,6 @@ TEST(CheckConfig, audioEffectsConfigurationValidation) {
     using namespace android::effectsConfig;
 
     std::vector<const char*> locations(std::begin(DEFAULT_LOCATIONS), std::end(DEFAULT_LOCATIONS));
-    EXPECT_ONE_VALID_XML_MULTIPLE_LOCATIONS(DEFAULT_NAME, locations,
-                                            "/data/local/tmp/audio_effects_conf_V2_0.xsd");
+    EXPECT_VALID_XML_MULTIPLE_LOCATIONS(DEFAULT_NAME, locations,
+                                        "/data/local/tmp/audio_effects_conf_V2_0.xsd");
 }
diff --git a/audio/effect/2.0/xml/audio_effects_conf_V2_0.xsd b/audio/effect/2.0/xml/audio_effects_conf_V2_0.xsd
index ca6a7dc6..df281b32 100644
--- a/audio/effect/2.0/xml/audio_effects_conf_V2_0.xsd
+++ b/audio/effect/2.0/xml/audio_effects_conf_V2_0.xsd
@@ -234,7 +234,7 @@
       <xs:field xpath="@library"/>
     </xs:keyref>
     <xs:key name="effectName">
-      <xs:selector xpath="aec:effects/aec:effect"/>
+      <xs:selector xpath="aec:effects/aec:effect|aec:effects/aec:effectProxy"/>
       <xs:field xpath="@name"/>
     </xs:key>
     <xs:keyref name="effectNamePreRef" refer="aec:effectName">
diff --git a/camera/device/3.2/default/CameraDeviceSession.cpp b/camera/device/3.2/default/CameraDeviceSession.cpp
index 69f85356..fd785df1 100644
--- a/camera/device/3.2/default/CameraDeviceSession.cpp
+++ b/camera/device/3.2/default/CameraDeviceSession.cpp
@@ -53,6 +53,7 @@ CameraDeviceSession::CameraDeviceSession(
         camera3_callback_ops({&sProcessCaptureResult, &sNotify}),
         mDevice(device),
         mDeviceVersion(device->common.version),
+        mFreeBufEarly(shouldFreeBufEarly()),
         mIsAELockAvailable(false),
         mDerivePostRawSensKey(false),
         mNumPartialResults(1),
@@ -129,6 +130,10 @@ bool CameraDeviceSession::initialize() {
     return false;
 }
 
+bool CameraDeviceSession::shouldFreeBufEarly() {
+    return property_get_bool("ro.vendor.camera.free_buf_early", 0) == 1;
+}
+
 CameraDeviceSession::~CameraDeviceSession() {
     if (!isClosed()) {
         ALOGE("CameraDeviceSession deleted before close!");
@@ -887,6 +892,24 @@ bool CameraDeviceSession::preProcessConfigurationLocked(
         (*streams)[i] = &mStreamMap[id];
     }
 
+    if (mFreeBufEarly) {
+        // Remove buffers of deleted streams
+        for(auto it = mStreamMap.begin(); it != mStreamMap.end(); it++) {
+            int id = it->first;
+            bool found = false;
+            for (const auto& stream : requestedConfiguration.streams) {
+                if (id == stream.id) {
+                    found = true;
+                    break;
+                }
+            }
+            if (!found) {
+                // Unmap all buffers of deleted stream
+                cleanupBuffersLocked(id);
+            }
+        }
+    }
+
     return true;
 }
 
@@ -908,7 +931,9 @@ void CameraDeviceSession::postProcessConfigurationLocked(
             // Unmap all buffers of deleted stream
             // in case the configuration call succeeds and HAL
             // is able to release the corresponding resources too.
-            cleanupBuffersLocked(id);
+            if (!mFreeBufEarly) {
+                cleanupBuffersLocked(id);
+            }
             it = mStreamMap.erase(it);
         } else {
             ++it;
@@ -927,6 +952,27 @@ void CameraDeviceSession::postProcessConfigurationLocked(
     mResultBatcher.setBatchedStreams(mVideoStreamIds);
 }
 
+
+void CameraDeviceSession::postProcessConfigurationFailureLocked(
+        const StreamConfiguration& requestedConfiguration) {
+    if (mFreeBufEarly) {
+        // Re-build the buf cache entry for deleted streams
+        for(auto it = mStreamMap.begin(); it != mStreamMap.end(); it++) {
+            int id = it->first;
+            bool found = false;
+            for (const auto& stream : requestedConfiguration.streams) {
+                if (id == stream.id) {
+                    found = true;
+                    break;
+                }
+            }
+            if (!found) {
+                mCirculatingBuffers.emplace(id, CirculatingBuffers{});
+            }
+        }
+    }
+}
+
 Return<void> CameraDeviceSession::configureStreams(
         const StreamConfiguration& requestedConfiguration,
         ICameraDeviceSession::configureStreams_cb _hidl_cb)  {
@@ -979,6 +1025,8 @@ Return<void> CameraDeviceSession::configureStreams(
     // the corresponding resources of the deleted streams.
     if (ret == OK) {
         postProcessConfigurationLocked(requestedConfiguration);
+    } else {
+        postProcessConfigurationFailureLocked(requestedConfiguration);
     }
 
     if (ret == -EINVAL) {
diff --git a/camera/device/3.2/default/CameraDeviceSession.h b/camera/device/3.2/default/CameraDeviceSession.h
index af90e5a0..bcee259f 100644
--- a/camera/device/3.2/default/CameraDeviceSession.h
+++ b/camera/device/3.2/default/CameraDeviceSession.h
@@ -120,6 +120,8 @@ protected:
             hidl_vec<camera3_stream_t*> *streams /*out*/);
     void postProcessConfigurationLocked(const StreamConfiguration& requestedConfiguration);
 
+    void postProcessConfigurationFailureLocked(const StreamConfiguration& requestedConfiguration);
+
 protected:
 
     // protecting mClosed/mDisconnected/mInitFail
@@ -142,6 +144,7 @@ protected:
 
     camera3_device_t* mDevice;
     const uint32_t mDeviceVersion;
+    const bool mFreeBufEarly;
     bool mIsAELockAvailable;
     bool mDerivePostRawSensKey;
     uint32_t mNumPartialResults;
@@ -293,6 +296,8 @@ protected:
 
     bool initialize();
 
+    static bool shouldFreeBufEarly();
+
     Status initStatus() const;
 
     // Validate and import request's input buffer and acquire fence
diff --git a/camera/device/3.3/default/CameraDeviceSession.cpp b/camera/device/3.3/default/CameraDeviceSession.cpp
index d36e9ed4..60174fb9 100644
--- a/camera/device/3.3/default/CameraDeviceSession.cpp
+++ b/camera/device/3.3/default/CameraDeviceSession.cpp
@@ -92,6 +92,8 @@ Return<void> CameraDeviceSession::configureStreams_3_3(
     // the corresponding resources of the deleted streams.
     if (ret == OK) {
         postProcessConfigurationLocked(requestedConfiguration);
+    } else {
+        postProcessConfigurationFailureLocked(requestedConfiguration);
     }
 
     if (ret == -EINVAL) {
diff --git a/camera/device/3.4/default/CameraDeviceSession.cpp b/camera/device/3.4/default/CameraDeviceSession.cpp
index 6a18161f..f2e031c6 100644
--- a/camera/device/3.4/default/CameraDeviceSession.cpp
+++ b/camera/device/3.4/default/CameraDeviceSession.cpp
@@ -154,6 +154,8 @@ Return<void> CameraDeviceSession::configureStreams_3_4(
     // the corresponding resources of the deleted streams.
     if (ret == OK) {
         postProcessConfigurationLocked_3_4(requestedConfiguration);
+    } else {
+        postProcessConfigurationFailureLocked_3_4(requestedConfiguration);
     }
 
     if (ret == -EINVAL) {
@@ -215,6 +217,23 @@ bool CameraDeviceSession::preProcessConfigurationLocked_3_4(
         (*streams)[i] = &mStreamMap[id];
     }
 
+    if (mFreeBufEarly) {
+        // Remove buffers of deleted streams
+        for(auto it = mStreamMap.begin(); it != mStreamMap.end(); it++) {
+            int id = it->first;
+            bool found = false;
+            for (const auto& stream : requestedConfiguration.streams) {
+                if (id == stream.v3_2.id) {
+                    found = true;
+                    break;
+                }
+            }
+            if (!found) {
+                // Unmap all buffers of deleted stream
+                cleanupBuffersLocked(id);
+            }
+        }
+    }
     return true;
 }
 
@@ -236,7 +255,9 @@ void CameraDeviceSession::postProcessConfigurationLocked_3_4(
             // Unmap all buffers of deleted stream
             // in case the configuration call succeeds and HAL
             // is able to release the corresponding resources too.
-            cleanupBuffersLocked(id);
+            if (!mFreeBufEarly) {
+                cleanupBuffersLocked(id);
+            }
             it = mStreamMap.erase(it);
         } else {
             ++it;
@@ -255,6 +276,26 @@ void CameraDeviceSession::postProcessConfigurationLocked_3_4(
     mResultBatcher_3_4.setBatchedStreams(mVideoStreamIds);
 }
 
+void CameraDeviceSession::postProcessConfigurationFailureLocked_3_4(
+        const StreamConfiguration& requestedConfiguration) {
+    if (mFreeBufEarly) {
+        // Re-build the buf cache entry for deleted streams
+        for(auto it = mStreamMap.begin(); it != mStreamMap.end(); it++) {
+            int id = it->first;
+            bool found = false;
+            for (const auto& stream : requestedConfiguration.streams) {
+                if (id == stream.v3_2.id) {
+                    found = true;
+                    break;
+                }
+            }
+            if (!found) {
+                mCirculatingBuffers.emplace(id, CirculatingBuffers{});
+            }
+        }
+    }
+}
+
 Return<void> CameraDeviceSession::processCaptureRequest_3_4(
         const hidl_vec<V3_4::CaptureRequest>& requests,
         const hidl_vec<V3_2::BufferCache>& cachesToRemove,
diff --git a/camera/device/3.4/default/include/device_v3_4_impl/CameraDeviceSession.h b/camera/device/3.4/default/include/device_v3_4_impl/CameraDeviceSession.h
index 5d6a112e..fdc8a5af 100644
--- a/camera/device/3.4/default/include/device_v3_4_impl/CameraDeviceSession.h
+++ b/camera/device/3.4/default/include/device_v3_4_impl/CameraDeviceSession.h
@@ -84,6 +84,8 @@ protected:
             camera3_stream_configuration_t *stream_list /*out*/,
             hidl_vec<camera3_stream_t*> *streams /*out*/);
     void postProcessConfigurationLocked_3_4(const StreamConfiguration& requestedConfiguration);
+    void postProcessConfigurationFailureLocked_3_4(
+            const StreamConfiguration& requestedConfiguration);
 
     Return<void> processCaptureRequest_3_4(
             const hidl_vec<V3_4::CaptureRequest>& requests,
diff --git a/camera/provider/2.4/vts/functional/VtsHalCameraProviderV2_4TargetTest.cpp b/camera/provider/2.4/vts/functional/VtsHalCameraProviderV2_4TargetTest.cpp
index 95c7167c..439333d9 100644
--- a/camera/provider/2.4/vts/functional/VtsHalCameraProviderV2_4TargetTest.cpp
+++ b/camera/provider/2.4/vts/functional/VtsHalCameraProviderV2_4TargetTest.cpp
@@ -87,7 +87,6 @@ using ::android::hardware::camera::device::V3_2::ICameraDevice;
 using ::android::hardware::camera::device::V3_2::BufferCache;
 using ::android::hardware::camera::device::V3_2::CaptureRequest;
 using ::android::hardware::camera::device::V3_2::CaptureResult;
-using ::android::hardware::camera::device::V3_2::ICameraDeviceCallback;
 using ::android::hardware::camera::device::V3_2::ICameraDeviceSession;
 using ::android::hardware::camera::device::V3_2::NotifyMsg;
 using ::android::hardware::camera::device::V3_2::RequestTemplate;
@@ -532,7 +531,7 @@ public:
 
  hidl_vec<hidl_string> getCameraDeviceNames(sp<ICameraProvider> provider);
 
- struct EmptyDeviceCb : public ICameraDeviceCallback {
+ struct EmptyDeviceCb : public V3_4::ICameraDeviceCallback {
      virtual Return<void> processCaptureResult(
          const hidl_vec<CaptureResult>& /*results*/) override {
          ALOGI("processCaptureResult callback");
@@ -540,6 +539,13 @@ public:
          return Void();
      }
 
+     virtual Return<void> processCaptureResult_3_4(
+         const hidl_vec<V3_4::CaptureResult>& /*results*/) override {
+         ALOGI("processCaptureResult_3_4 callback");
+         ADD_FAILURE();  // Empty callback should not reach here
+         return Void();
+     }
+
      virtual Return<void> notify(const hidl_vec<NotifyMsg>& /*msgs*/) override {
          ALOGI("notify callback");
          ADD_FAILURE();  // Empty callback should not reach here
@@ -3643,6 +3649,7 @@ TEST_F(CameraHidlTest, processCaptureRequestBurstISO) {
                                         static_cast<int32_t>(PixelFormat::IMPLEMENTATION_DEFINED)};
     uint64_t bufferId = 1;
     uint32_t frameNumber = 1;
+    float isoTol = .03f;
     ::android::hardware::hidl_vec<uint8_t> settings;
 
     for (const auto& name : cameraDeviceNames) {
@@ -3772,7 +3779,8 @@ TEST_F(CameraHidlTest, processCaptureRequestBurstISO) {
             ASSERT_TRUE(inflightReqs[i].collectedResult.exists(ANDROID_SENSOR_SENSITIVITY));
             camera_metadata_entry_t isoResult = inflightReqs[i].collectedResult.find(
                     ANDROID_SENSOR_SENSITIVITY);
-            ASSERT_TRUE(isoResult.data.i32[0] == isoValues[i]);
+            ASSERT_TRUE(std::abs(isoResult.data.i32[0] - isoValues[i]) <=
+                        std::round(isoValues[i]*isoTol));
         }
 
         ret = session->close();
@@ -4038,10 +4046,10 @@ TEST_F(CameraHidlTest, flushPreviewRequest) {
                                << static_cast<uint32_t>(inflightReq.errorCode);
                 }
             }
-
-            ret = session->close();
-            ASSERT_TRUE(ret.isOk());
         }
+
+        ret = session->close();
+        ASSERT_TRUE(ret.isOk());
     }
 }
 
diff --git a/compatibility_matrices/compatibility_matrix.3.xml b/compatibility_matrices/compatibility_matrix.3.xml
index f271642f..9c6b12ad 100644
--- a/compatibility_matrices/compatibility_matrix.3.xml
+++ b/compatibility_matrices/compatibility_matrix.3.xml
@@ -290,7 +290,7 @@
     </hal>
     <hal format="hidl" optional="true">
         <name>android.hardware.power</name>
-        <version>1.0-2</version>
+        <version>1.0-3</version>
         <interface>
             <name>IPower</name>
             <instance>default</instance>
diff --git a/current.txt b/current.txt
index cc15322b..4f574e9e 100644
--- a/current.txt
+++ b/current.txt
@@ -335,7 +335,8 @@ dd83be076b6b3f10ed62ab34d8c8b95f2415961fb785200eb842e7bfb2b0ee92 android.hardwar
 675682dd3007805c985eaaec91612abc88f4c25b3431fb84070b7584a1a741fb android.hardware.health@2.0::IHealth
 434c4c32c00b0e54bb05e40c79503208b40f786a318029a2a4f66e34f10f2a76 android.hardware.health@2.0::IHealthInfoCallback
 c9e498f1ade5e26f00d290b4763a9671ec6720f915e7d592844b62e8cb1f9b5c android.hardware.health@2.0::types
-201f9723353fdbd40bf3705537fb7e015e4c399879425e68688fe0f43606ea4d android.hardware.keymaster@4.0::IKeymasterDevice
+201f9723353fdbd40bf3705537fb7e015e4c399879425e68688fe0f43606ea4d android.hardware.keymaster@4.0::IKeymasterDevice # b/112688384
+6122abe9bc2e7868463d3787db2991c1e47cc01fe3e4cfb7293c5ba421ff8ad9 android.hardware.keymaster@4.0::IKeymasterDevice # b/78104779
 1b7d2090c0a28b229d37c4b96160796b1f0d703950ac6ccc163fccd280830503 android.hardware.keymaster@4.0::types
 6d5c646a83538f0f9d8438c259932509f4353410c6c76e56db0d6ca98b69c3bb android.hardware.media.bufferpool@1.0::IAccessor
 b8c7ed58aa8740361e63d0ce9e7c94227572a629f356958840b34809d2393a7c android.hardware.media.bufferpool@1.0::IClientManager
@@ -348,6 +349,8 @@ e85f566698d2a2c28100e264fcf2c691a066756ddf8dd341d009ff50cfe10614 android.hardwar
 5e278fcaa3287d397d8eebe1c22aaa28150f5caae1cf9381cd6dc32cb37899c5 android.hardware.nfc@1.1::types
 163e115e833fc1d77cdd4a8cf0c833bb8b8d74fe35c880fe693101d17774926f android.hardware.power@1.2::IPower
 7899b9305587b2d5cd74a3cc87e9090f58bf4ae74256ce3ee36e7ec011822840 android.hardware.power@1.2::types
+5a464e6db53fad223986d655028a18185b73db8e2bfa9663f9042c9623eb0aa0 android.hardware.power@1.3::IPower
+a54a28d39b892d27a3cb06829181c038edcdd9e8eef359543b01e4313ae59aa0 android.hardware.power@1.3::types
 ab132c990a62f0aca35871c092c22fb9c85d478e22124ef6a4d0a2302da76a9f android.hardware.radio@1.2::IRadio
 cda752aeabaabc20486a82ac57a3dd107785c006094a349bc5e224e8aa22a17c android.hardware.radio@1.2::IRadioIndication
 da8c6ae991c6a4b284cc6e445332e064e28ee8a09482ed5afff9d159ec6694b7 android.hardware.radio@1.2::IRadioResponse
@@ -380,3 +383,7 @@ e362203b941f18bd4cba29a62adfa02453ed00d6be5b72cdb6c4d7e0bf394a40 android.hardwar
 21757d0e5dd4b7e4bd981a4a20531bca3c32271ad9777b17b74eb5a1ea508384 android.hardware.wifi.supplicant@1.1::ISupplicantStaIface
 cd4330c3196bda1d642a32abfe23a7d64ebfbda721940643af6867af3b3f0aa9 android.hardware.wifi.supplicant@1.1::ISupplicantStaIfaceCallback
 10ff2fae516346b86121368ce5790d5accdfcb73983246b813f3d488b66db45a android.hardware.wifi.supplicant@1.1::ISupplicantStaNetwork
+
+# ABI preserving changes to HALs after Android P
+1d19720d4fd38b1095f0f555a4bd92b3b12c9b1d0f560b0e9a474cd6dcc20db6 android.hardware.radio@1.2::IRadio
+1d4a5776614c08b5d794a5ec5ab04697260cbd4b3441d5935cd53ee71d19da02 android.hardware.radio@1.0::IRadioResponse
diff --git a/drm/1.0/default/DrmFactory.cpp b/drm/1.0/default/DrmFactory.cpp
index 7e5d998e..05951d7c 100644
--- a/drm/1.0/default/DrmFactory.cpp
+++ b/drm/1.0/default/DrmFactory.cpp
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2016 The Android Open Source Project
-` *
+ *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
diff --git a/drm/1.0/default/LegacyPluginPath.cpp b/drm/1.0/default/LegacyPluginPath.cpp
index 369059d2..d0a8f90a 100644
--- a/drm/1.0/default/LegacyPluginPath.cpp
+++ b/drm/1.0/default/LegacyPluginPath.cpp
@@ -16,6 +16,8 @@
 
 #include "LegacyPluginPath.h"
 
+#include <unistd.h>
+
 #include <cutils/properties.h>
 
 namespace android {
@@ -24,12 +26,16 @@ namespace drm {
 namespace V1_0 {
 namespace implementation {
 
+// 64-bit DRM depends on OEM libraries that aren't
+// provided for all devices. If the drm hal service
+// is running as 64-bit use the 64-bit libs, otherwise
+// use the 32-bit libs.
 const char* getDrmPluginPath() {
-    if (property_get_bool("drm.64bit.enabled", false)) {
-        return "/vendor/lib64/mediadrm";
-    } else {
-        return "/vendor/lib/mediadrm";
-    }
+#if defined(__LP64__)
+    return "/vendor/lib64/mediadrm";
+#else
+    return "/vendor/lib/mediadrm";
+#endif
 }
 
 }  // namespace implementation
diff --git a/drm/1.0/default/include/PluginLoader.h b/drm/1.0/default/include/PluginLoader.h
index f387b3cb..0c45fb3e 100644
--- a/drm/1.0/default/include/PluginLoader.h
+++ b/drm/1.0/default/include/PluginLoader.h
@@ -85,7 +85,10 @@ class PluginLoader {
                 libraries.push(library);
                 T* result = createFactoryFunc();
                 return  result;
-           }
+            } else {
+                ALOGE("Failed to lookup symbol %s in library %s: %s",
+                        entry, path, library->lastError());
+            }
         }
         return NULL;
     }
diff --git a/gnss/1.0/vts/functional/VtsHalGnssV1_0TargetTest.cpp b/gnss/1.0/vts/functional/VtsHalGnssV1_0TargetTest.cpp
index 010a46db..c26f60a7 100644
--- a/gnss/1.0/vts/functional/VtsHalGnssV1_0TargetTest.cpp
+++ b/gnss/1.0/vts/functional/VtsHalGnssV1_0TargetTest.cpp
@@ -404,7 +404,11 @@ TEST_F(GnssHalTest, InjectDelete) {
   ASSERT_TRUE(result.isOk());
   EXPECT_TRUE(result);
 
-  auto resultVoid = gnss_hal_->deleteAidingData(IGnss::GnssAidingData::DELETE_ALL);
+  auto resultVoid = gnss_hal_->deleteAidingData(IGnss::GnssAidingData::DELETE_POSITION);
+
+  ASSERT_TRUE(resultVoid.isOk());
+
+  resultVoid = gnss_hal_->deleteAidingData(IGnss::GnssAidingData::DELETE_TIME);
 
   ASSERT_TRUE(resultVoid.isOk());
 
@@ -472,6 +476,16 @@ TEST_F(GnssHalTest, MeasurementCapabilites) {
   }
 }
 
+/*
+ * SchedulingCapabilities:
+ * Verifies that 2018+ hardware supports Scheduling capabilities.
+ */
+TEST_F(GnssHalTest, SchedulingCapabilities) {
+    if (info_called_count_ > 0 && last_info_.yearOfHw >= 2018) {
+        EXPECT_TRUE(last_capabilities_ & IGnssCallback::Capabilities::SCHEDULING);
+    }
+}
+
 int main(int argc, char** argv) {
   ::testing::AddGlobalTestEnvironment(GnssHidlEnvironment::Instance());
   ::testing::InitGoogleTest(&argc, argv);
diff --git a/gnss/1.1/vts/functional/gnss_hal_test.cpp b/gnss/1.1/vts/functional/gnss_hal_test.cpp
index 46d61e54..433f5cb4 100644
--- a/gnss/1.1/vts/functional/gnss_hal_test.cpp
+++ b/gnss/1.1/vts/functional/gnss_hal_test.cpp
@@ -83,6 +83,7 @@ void GnssHalTest::StopAndClearLocations() {
      */
     while (wait(TIMEOUT_SEC) == std::cv_status::no_timeout) {
     }
+    location_called_count_ = 0;
 }
 
 void GnssHalTest::SetPositionMode(const int min_interval_msec, const bool low_power_mode) {
@@ -97,17 +98,17 @@ void GnssHalTest::SetPositionMode(const int min_interval_msec, const bool low_po
     EXPECT_TRUE(result);
 }
 
-bool GnssHalTest::StartAndGetSingleLocation() {
+bool GnssHalTest::StartAndCheckFirstLocation() {
     auto result = gnss_hal_->start();
 
     EXPECT_TRUE(result.isOk());
     EXPECT_TRUE(result);
 
     /*
-     * GPS signals initially optional for this test, so don't expect fast fix,
-     * or no timeout, unless signal is present
+     * GnssLocationProvider support of AGPS SUPL & XtraDownloader is not available in VTS,
+     * so allow time to demodulate ephemeris over the air.
      */
-    const int kFirstGnssLocationTimeoutSeconds = 15;
+    const int kFirstGnssLocationTimeoutSeconds = 75;
 
     wait(kFirstGnssLocationTimeoutSeconds);
     EXPECT_EQ(location_called_count_, 1);
@@ -195,7 +196,7 @@ void GnssHalTest::StartAndCheckLocations(int count) {
 
     SetPositionMode(kMinIntervalMsec, kLowPowerMode);
 
-    EXPECT_TRUE(StartAndGetSingleLocation());
+    EXPECT_TRUE(StartAndCheckFirstLocation());
 
     for (int i = 1; i < count; i++) {
         EXPECT_EQ(std::cv_status::no_timeout, wait(kLocationTimeoutSubsequentSec));
diff --git a/gnss/1.1/vts/functional/gnss_hal_test.h b/gnss/1.1/vts/functional/gnss_hal_test.h
index 269366a9..64478b5b 100644
--- a/gnss/1.1/vts/functional/gnss_hal_test.h
+++ b/gnss/1.1/vts/functional/gnss_hal_test.h
@@ -107,12 +107,15 @@ class GnssHalTest : public ::testing::VtsHalHidlTargetTestBase {
     void SetUpGnssCallback();
 
     /*
-     * StartAndGetSingleLocation:
-     * Helper function to get one Location and check fields
+     * StartAndCheckFirstLocation:
+     *   Helper function to start location, and check the first one.
+     *
+     *   <p> Note this leaves the Location request active, to enable Stop call vs. other call
+     *   reordering tests.
      *
      * returns  true if a location was successfully generated
      */
-    bool StartAndGetSingleLocation();
+    bool StartAndCheckFirstLocation();
 
     /*
      * CheckLocation:
diff --git a/gnss/1.1/vts/functional/gnss_hal_test_cases.cpp b/gnss/1.1/vts/functional/gnss_hal_test_cases.cpp
index cce46f18..c9f840e3 100644
--- a/gnss/1.1/vts/functional/gnss_hal_test_cases.cpp
+++ b/gnss/1.1/vts/functional/gnss_hal_test_cases.cpp
@@ -60,24 +60,46 @@ TEST_F(GnssHalTest, TestGnssMeasurementCallback) {
  */
 TEST_F(GnssHalTest, GetLocationLowPower) {
     const int kMinIntervalMsec = 5000;
-    const int kLocationTimeoutSubsequentSec = (kMinIntervalMsec / 1000) + 1;
-    const int kNoLocationPeriodSec = 2;
+    const int kLocationTimeoutSubsequentSec = (kMinIntervalMsec / 1000) * 2;
+    const int kNoLocationPeriodSec = (kMinIntervalMsec / 1000) / 2;
     const int kLocationsToCheck = 5;
     const bool kLowPowerMode = true;
 
+    // Warmup period - VTS doesn't have AGPS access via GnssLocationProvider
+    StartAndCheckLocations(5);
+    StopAndClearLocations();
+
+    // Start of Low Power Mode test
     SetPositionMode(kMinIntervalMsec, kLowPowerMode);
 
-    EXPECT_TRUE(StartAndGetSingleLocation());
+    // Don't expect true - as without AGPS access
+    if (!StartAndCheckFirstLocation()) {
+        ALOGW("GetLocationLowPower test - no first low power location received.");
+    }
 
     for (int i = 1; i < kLocationsToCheck; i++) {
         // Verify that kMinIntervalMsec is respected by waiting kNoLocationPeriodSec and
         // ensure that no location is received yet
+
         wait(kNoLocationPeriodSec);
-        EXPECT_EQ(location_called_count_, i);
-        EXPECT_EQ(std::cv_status::no_timeout,
-                  wait(kLocationTimeoutSubsequentSec - kNoLocationPeriodSec));
-        EXPECT_EQ(location_called_count_, i + 1);
-        CheckLocation(last_location_, true);
+        // Tolerate (ignore) one extra location right after the first one
+        // to handle startup edge case scheduling limitations in some implementations
+        if ((i == 1) && (location_called_count_ == 2)) {
+            CheckLocation(last_location_, true);
+            continue;  // restart the quiet wait period after this too-fast location
+        }
+        EXPECT_LE(location_called_count_, i);
+        if (location_called_count_ != i) {
+            ALOGW("GetLocationLowPower test - not enough locations received. %d vs. %d expected ",
+                  location_called_count_, i);
+        }
+
+        if (std::cv_status::no_timeout !=
+            wait(kLocationTimeoutSubsequentSec - kNoLocationPeriodSec)) {
+            ALOGW("GetLocationLowPower test - timeout awaiting location %d", i);
+        } else {
+            CheckLocation(last_location_, true);
+        }
     }
 
     StopAndClearLocations();
@@ -177,7 +199,8 @@ TEST_F(GnssHalTest, BlacklistIndividualSatellites) {
 
     StartAndCheckLocations(kLocationsToAwait);
 
-    EXPECT_GE((int)list_gnss_sv_status_.size(), kLocationsToAwait);
+    // Tolerate 1 less sv status to handle edge cases in reporting.
+    EXPECT_GE((int)list_gnss_sv_status_.size() + 1, kLocationsToAwait);
     ALOGD("Observed %d GnssSvStatus, while awaiting %d Locations", (int)list_gnss_sv_status_.size(),
           kLocationsToAwait);
 
@@ -217,7 +240,8 @@ TEST_F(GnssHalTest, BlacklistIndividualSatellites) {
     location_called_count_ = 0;
     StartAndCheckLocations(kLocationsToAwait);
 
-    EXPECT_GE((int)list_gnss_sv_status_.size(), kLocationsToAwait);
+    // Tolerate 1 less sv status to handle edge cases in reporting.
+    EXPECT_GE((int)list_gnss_sv_status_.size() + 1, kLocationsToAwait);
     ALOGD("Observed %d GnssSvStatus, while awaiting %d Locations", (int)list_gnss_sv_status_.size(),
           kLocationsToAwait);
     for (const auto& gnss_sv_status : list_gnss_sv_status_) {
@@ -236,13 +260,13 @@ TEST_F(GnssHalTest, BlacklistIndividualSatellites) {
     ASSERT_TRUE(result.isOk());
     EXPECT_TRUE(result);
 
-    location_called_count_ = 0;
     StopAndClearLocations();
     list_gnss_sv_status_.clear();
 
     StartAndCheckLocations(kLocationsToAwait);
 
-    EXPECT_GE((int)list_gnss_sv_status_.size(), kLocationsToAwait);
+    // Tolerate 1 less sv status to handle edge cases in reporting.
+    EXPECT_GE((int)list_gnss_sv_status_.size() + 1, kLocationsToAwait);
     ALOGD("Observed %d GnssSvStatus, while awaiting %d Locations", (int)list_gnss_sv_status_.size(),
           kLocationsToAwait);
 
@@ -278,7 +302,8 @@ TEST_F(GnssHalTest, BlacklistConstellation) {
 
     StartAndCheckLocations(kLocationsToAwait);
 
-    EXPECT_GE((int)list_gnss_sv_status_.size(), kLocationsToAwait);
+    // Tolerate 1 less sv status to handle edge cases in reporting.
+    EXPECT_GE((int)list_gnss_sv_status_.size() + 1, kLocationsToAwait);
     ALOGD("Observed %d GnssSvStatus, while awaiting %d Locations", (int)list_gnss_sv_status_.size(),
           kLocationsToAwait);
 
@@ -328,7 +353,8 @@ TEST_F(GnssHalTest, BlacklistConstellation) {
     location_called_count_ = 0;
     StartAndCheckLocations(kLocationsToAwait);
 
-    EXPECT_GE((int)list_gnss_sv_status_.size(), kLocationsToAwait);
+    // Tolerate 1 less sv status to handle edge cases in reporting.
+    EXPECT_GE((int)list_gnss_sv_status_.size() + 1, kLocationsToAwait);
     ALOGD("Observed %d GnssSvStatus, while awaiting %d Locations", (int)list_gnss_sv_status_.size(),
           kLocationsToAwait);
     for (const auto& gnss_sv_status : list_gnss_sv_status_) {
@@ -353,23 +379,8 @@ TEST_F(GnssHalTest, BlacklistConstellation) {
  * Ensure successfully injecting a location.
  */
 TEST_F(GnssHalTest, InjectBestLocation) {
-    GnssLocation gnssLocation = {.gnssLocationFlags = 0,  // set below
-                                 .latitudeDegrees = 43.0,
-                                 .longitudeDegrees = -180,
-                                 .altitudeMeters = 1000,
-                                 .speedMetersPerSec = 0,
-                                 .bearingDegrees = 0,
-                                 .horizontalAccuracyMeters = 0.1,
-                                 .verticalAccuracyMeters = 0.1,
-                                 .speedAccuracyMetersPerSecond = 0.1,
-                                 .bearingAccuracyDegrees = 0.1,
-                                 .timestamp = 1534567890123L};
-    gnssLocation.gnssLocationFlags |=
-        GnssLocationFlags::HAS_LAT_LONG | GnssLocationFlags::HAS_ALTITUDE |
-        GnssLocationFlags::HAS_SPEED | GnssLocationFlags::HAS_HORIZONTAL_ACCURACY |
-        GnssLocationFlags::HAS_VERTICAL_ACCURACY | GnssLocationFlags::HAS_SPEED_ACCURACY |
-        GnssLocationFlags::HAS_BEARING | GnssLocationFlags::HAS_BEARING_ACCURACY;
-
+    StartAndCheckLocations(1);
+    GnssLocation gnssLocation = last_location_;
     CheckLocation(gnssLocation, true);
 
     auto result = gnss_hal_->injectBestLocation(gnssLocation);
@@ -377,7 +388,7 @@ TEST_F(GnssHalTest, InjectBestLocation) {
     ASSERT_TRUE(result.isOk());
     EXPECT_TRUE(result);
 
-    auto resultVoid = gnss_hal_->deleteAidingData(IGnss::GnssAidingData::DELETE_ALL);
+    auto resultVoid = gnss_hal_->deleteAidingData(IGnss::GnssAidingData::DELETE_POSITION);
 
     ASSERT_TRUE(resultVoid.isOk());
 }
@@ -428,7 +439,7 @@ TEST_F(GnssHalTest, GnssDebugValuesSanityTest) {
             EXPECT_GE(data.position.ageSeconds, 0);
         }
 
-        EXPECT_GE(data.time.timeEstimate, 1514764800000);  // Jan 01 2018 00:00:00
+        EXPECT_GE(data.time.timeEstimate, 1483228800000);  // Jan 01 2017 00:00:00 GMT.
 
         EXPECT_GT(data.time.timeUncertaintyNs, 0);
 
diff --git a/graphics/composer/2.1/utils/hwc2onfbadapter/HWC2OnFbAdapter.cpp b/graphics/composer/2.1/utils/hwc2onfbadapter/HWC2OnFbAdapter.cpp
index 7c9e6518..0f505775 100644
--- a/graphics/composer/2.1/utils/hwc2onfbadapter/HWC2OnFbAdapter.cpp
+++ b/graphics/composer/2.1/utils/hwc2onfbadapter/HWC2OnFbAdapter.cpp
@@ -32,6 +32,8 @@
 #include <log/log.h>
 #include <sync/sync.h>
 
+using namespace HWC2;
+
 namespace android {
 
 namespace {
@@ -629,9 +631,10 @@ hwc2_function_pointer_t getFunctionHook(hwc2_device_t* /*device*/, int32_t descr
     }
 }
 
-void getCapabilitiesHook(hwc2_device_t* /*device*/, uint32_t* outCount,
-                         int32_t* /*outCapabilities*/) {
-    *outCount = 0;
+void getCapabilitiesHook(hwc2_device_t* device, uint32_t* outCount,
+                         int32_t* outCapabilities) {
+    auto& adapter = HWC2OnFbAdapter::cast(device);
+    adapter.getCapabilities(outCount, outCapabilities);
 }
 
 int closeHook(hw_device_t* device) {
@@ -656,6 +659,10 @@ HWC2OnFbAdapter::HWC2OnFbAdapter(framebuffer_device_t* fbDevice)
     mFbInfo.xdpi_scaled = int(mFbDevice->xdpi * 1000.0f);
     mFbInfo.ydpi_scaled = int(mFbDevice->ydpi * 1000.0f);
 
+    // Present fences aren't supported, always indicate PresentFenceIsNotReliable
+    // for FB devices
+    mCapabilities.insert(Capability::PresentFenceIsNotReliable);
+
     mVsyncThread.start(0, mFbInfo.vsync_period_ns);
 }
 
@@ -791,6 +798,23 @@ void HWC2OnFbAdapter::enableVsync(bool enable) {
     mVsyncThread.enableCallback(enable);
 }
 
+void HWC2OnFbAdapter::getCapabilities(uint32_t* outCount,
+                                      int32_t* outCapabilities) {
+    if (outCapabilities == nullptr) {
+        *outCount = mCapabilities.size();
+        return;
+    }
+
+    auto capabilityIter = mCapabilities.cbegin();
+    for (size_t written = 0; written < *outCount; ++written) {
+        if (capabilityIter == mCapabilities.cend()) {
+            return;
+        }
+        outCapabilities[written] = static_cast<int32_t>(*capabilityIter);
+        ++capabilityIter;
+    }
+}
+
 int64_t HWC2OnFbAdapter::VsyncThread::now() {
     struct timespec ts;
     clock_gettime(CLOCK_MONOTONIC, &ts);
diff --git a/graphics/composer/2.1/utils/hwc2onfbadapter/include/hwc2onfbadapter/HWC2OnFbAdapter.h b/graphics/composer/2.1/utils/hwc2onfbadapter/include/hwc2onfbadapter/HWC2OnFbAdapter.h
index d6272fdb..f1f11ef2 100644
--- a/graphics/composer/2.1/utils/hwc2onfbadapter/include/hwc2onfbadapter/HWC2OnFbAdapter.h
+++ b/graphics/composer/2.1/utils/hwc2onfbadapter/include/hwc2onfbadapter/HWC2OnFbAdapter.h
@@ -23,7 +23,11 @@
 #include <thread>
 #include <unordered_set>
 
+#define HWC2_INCLUDE_STRINGIFICATION
+#define HWC2_USE_CPP11
 #include <hardware/hwcomposer2.h>
+#undef HWC2_INCLUDE_STRINGIFICATION
+#undef HWC2_USE_CPP11
 
 struct framebuffer_device_t;
 
@@ -75,6 +79,7 @@ public:
 
     void setVsyncCallback(HWC2_PFN_VSYNC callback, hwc2_callback_data_t data);
     void enableVsync(bool enable);
+    void getCapabilities(uint32_t* outCount, int32_t* outCapabilities);
 
 private:
     framebuffer_device_t* mFbDevice{nullptr};
@@ -90,6 +95,8 @@ private:
 
     buffer_handle_t mBuffer{nullptr};
 
+    std::unordered_set<HWC2::Capability> mCapabilities;
+
     class VsyncThread {
     public:
         static int64_t now();
diff --git a/graphics/composer/2.2/default/android.hardware.graphics.composer@2.2-service.rc b/graphics/composer/2.2/default/android.hardware.graphics.composer@2.2-service.rc
index a41d902c..efe6dadb 100644
--- a/graphics/composer/2.2/default/android.hardware.graphics.composer@2.2-service.rc
+++ b/graphics/composer/2.2/default/android.hardware.graphics.composer@2.2-service.rc
@@ -4,3 +4,4 @@ service vendor.hwcomposer-2-2 /vendor/bin/hw/android.hardware.graphics.composer@
     group graphics drmrpc
     capabilities SYS_NICE
     onrestart restart surfaceflinger
+    writepid /dev/cpuset/system-background/tasks
diff --git a/health/2.0/README b/health/2.0/README
index 11e6a7aa..dfd965aa 100644
--- a/health/2.0/README
+++ b/health/2.0/README
@@ -6,12 +6,7 @@ Upgrading from health@1.0 HAL
 1. If the device does not have a vendor-specific libhealthd AND does not
    implement storage-related APIs, just do the following:
 
-    1.1 (recommended) To remove healthd from the build,
-        PRODUCT_PACKAGES += android.hardware.health@2.0-service.override
-        DEVICE_FRAMEWORK_MANIFEST_FILE += \
-            system/libhidl/vintfdata/manifest_healthd_exclude.xml
-    1.2 To keep healthd in the build,
-        PRODUCT_PACKAGES += android.hardware.health@2.0-service
+    PRODUCT_PACKAGES += android.hardware.health@2.0-service
 
    Otherwise, continue to Step 2.
 
diff --git a/keymaster/4.0/IKeymasterDevice.hal b/keymaster/4.0/IKeymasterDevice.hal
index 74d13d8b..85a25c6d 100644
--- a/keymaster/4.0/IKeymasterDevice.hal
+++ b/keymaster/4.0/IKeymasterDevice.hal
@@ -753,7 +753,7 @@ interface IKeymasterDevice {
      *     attestationIdManufacturer  [716] EXPLICIT OCTET_STRING OPTIONAL,
      *     attestationIdModel         [717] EXPLICIT OCTET_STRING OPTIONAL,
      *     vendorPatchLevel           [718] EXPLICIT INTEGER OPTIONAL,
-     *     bootPatchLevel             [718] EXPLICIT INTEGER OPTIONAL,
+     *     bootPatchLevel             [719] EXPLICIT INTEGER OPTIONAL,
      * }
      *
      * The above schema is mostly a straightforward translation of the IKeymasterDevice tag/value
diff --git a/keymaster/4.0/support/Keymaster.cpp b/keymaster/4.0/support/Keymaster.cpp
index 444298b5..9325cc06 100644
--- a/keymaster/4.0/support/Keymaster.cpp
+++ b/keymaster/4.0/support/Keymaster.cpp
@@ -164,10 +164,10 @@ static void computeHmac(const Keymaster::KeymasterSet& keymasters,
                     sharingCheck = curSharingCheck;
                     firstKeymaster = false;
                 }
-                CHECK(curSharingCheck == sharingCheck)
-                    << "HMAC computation failed for " << *keymaster  //
-                    << " Expected: " << sharingCheck                 //
-                    << " got: " << curSharingCheck;
+                if (curSharingCheck != sharingCheck)
+                    LOG(WARNING) << "HMAC computation failed for " << *keymaster  //
+                                 << " Expected: " << sharingCheck                 //
+                                 << " got: " << curSharingCheck;
             });
         CHECK(rc.isOk()) << "Failed to communicate with " << *keymaster
                          << " error: " << rc.description();
diff --git a/keymaster/4.0/support/attestation_record.cpp b/keymaster/4.0/support/attestation_record.cpp
index 8f37d9c8..6de0c1c6 100644
--- a/keymaster/4.0/support/attestation_record.cpp
+++ b/keymaster/4.0/support/attestation_record.cpp
@@ -49,12 +49,14 @@ typedef struct km_root_of_trust {
     ASN1_OCTET_STRING* verified_boot_key;
     ASN1_BOOLEAN* device_locked;
     ASN1_ENUMERATED* verified_boot_state;
+    ASN1_OCTET_STRING* verified_boot_hash;
 } KM_ROOT_OF_TRUST;
 
 ASN1_SEQUENCE(KM_ROOT_OF_TRUST) = {
     ASN1_SIMPLE(KM_ROOT_OF_TRUST, verified_boot_key, ASN1_OCTET_STRING),
     ASN1_SIMPLE(KM_ROOT_OF_TRUST, device_locked, ASN1_BOOLEAN),
     ASN1_SIMPLE(KM_ROOT_OF_TRUST, verified_boot_state, ASN1_ENUMERATED),
+    ASN1_SIMPLE(KM_ROOT_OF_TRUST, verified_boot_hash, ASN1_OCTET_STRING),
 } ASN1_SEQUENCE_END(KM_ROOT_OF_TRUST);
 IMPLEMENT_ASN1_FUNCTIONS(KM_ROOT_OF_TRUST);
 
@@ -77,11 +79,16 @@ typedef struct km_auth_list {
     ASN1_OCTET_STRING* application_id;
     ASN1_INTEGER* creation_date_time;
     ASN1_INTEGER* origin;
-    ASN1_NULL* rollback_resistant;
+    ASN1_NULL* rollback_resistance;
     KM_ROOT_OF_TRUST* root_of_trust;
     ASN1_INTEGER* os_version;
     ASN1_INTEGER* os_patchlevel;
     ASN1_OCTET_STRING* attestation_application_id;
+    ASN1_NULL* trusted_user_presence_required;
+    ASN1_NULL* trusted_confirmation_required;
+    ASN1_NULL* unlocked_device_required;
+    ASN1_INTEGER* vendor_patchlevel;
+    ASN1_INTEGER* boot_patchlevel;
 } KM_AUTH_LIST;
 
 ASN1_SEQUENCE(KM_AUTH_LIST) = {
@@ -93,6 +100,7 @@ ASN1_SEQUENCE(KM_AUTH_LIST) = {
     ASN1_EXP_OPT(KM_AUTH_LIST, ec_curve, ASN1_INTEGER, TAG_EC_CURVE.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, rsa_public_exponent, ASN1_INTEGER,
                  TAG_RSA_PUBLIC_EXPONENT.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, rollback_resistance, ASN1_NULL, TAG_ROLLBACK_RESISTANCE.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, active_date_time, ASN1_INTEGER, TAG_ACTIVE_DATETIME.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, origination_expire_date_time, ASN1_INTEGER,
                  TAG_ORIGINATION_EXPIRE_DATETIME.maskedTag()),
@@ -102,13 +110,19 @@ ASN1_SEQUENCE(KM_AUTH_LIST) = {
     ASN1_EXP_OPT(KM_AUTH_LIST, user_auth_type, ASN1_INTEGER, TAG_USER_AUTH_TYPE.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, auth_timeout, ASN1_INTEGER, TAG_AUTH_TIMEOUT.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, allow_while_on_body, ASN1_NULL, TAG_ALLOW_WHILE_ON_BODY.maskedTag()),
-    ASN1_EXP_OPT(KM_AUTH_LIST, application_id, ASN1_OCTET_STRING, TAG_APPLICATION_ID.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, trusted_user_presence_required, ASN1_NULL,
+                 TAG_TRUSTED_USER_PRESENCE_REQUIRED.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, trusted_confirmation_required, ASN1_NULL,
+                 TAG_TRUSTED_CONFIRMATION_REQUIRED.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, unlocked_device_required, ASN1_NULL,
+                 TAG_UNLOCKED_DEVICE_REQUIRED.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, creation_date_time, ASN1_INTEGER, TAG_CREATION_DATETIME.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, origin, ASN1_INTEGER, TAG_ORIGIN.maskedTag()),
-    ASN1_EXP_OPT(KM_AUTH_LIST, rollback_resistant, ASN1_NULL, TAG_ROLLBACK_RESISTANCE.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, root_of_trust, KM_ROOT_OF_TRUST, TAG_ROOT_OF_TRUST.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, os_version, ASN1_INTEGER, TAG_OS_VERSION.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, os_patchlevel, ASN1_INTEGER, TAG_OS_PATCHLEVEL.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, vendor_patchlevel, ASN1_INTEGER, TAG_VENDOR_PATCHLEVEL.maskedTag()),
+    ASN1_EXP_OPT(KM_AUTH_LIST, boot_patchlevel, ASN1_INTEGER, TAG_BOOT_PATCHLEVEL.maskedTag()),
     ASN1_EXP_OPT(KM_AUTH_LIST, attestation_application_id, ASN1_OCTET_STRING,
                  TAG_ATTESTATION_APPLICATION_ID.maskedTag()),
 } ASN1_SEQUENCE_END(KM_AUTH_LIST);
@@ -237,11 +251,18 @@ static ErrorCode extract_auth_list(const KM_AUTH_LIST* record, AuthorizationSet*
     copyAuthTag(record->os_version, TAG_OS_VERSION, auth_list);
     copyAuthTag(record->padding, TAG_PADDING, auth_list);
     copyAuthTag(record->purpose, TAG_PURPOSE, auth_list);
-    copyAuthTag(record->rollback_resistant, TAG_ROLLBACK_RESISTANCE, auth_list);
+    copyAuthTag(record->rollback_resistance, TAG_ROLLBACK_RESISTANCE, auth_list);
     copyAuthTag(record->rsa_public_exponent, TAG_RSA_PUBLIC_EXPONENT, auth_list);
     copyAuthTag(record->usage_expire_date_time, TAG_USAGE_EXPIRE_DATETIME, auth_list);
     copyAuthTag(record->user_auth_type, TAG_USER_AUTH_TYPE, auth_list);
     copyAuthTag(record->attestation_application_id, TAG_ATTESTATION_APPLICATION_ID, auth_list);
+    copyAuthTag(record->vendor_patchlevel, TAG_VENDOR_PATCHLEVEL, auth_list);
+    copyAuthTag(record->boot_patchlevel, TAG_BOOT_PATCHLEVEL, auth_list);
+    copyAuthTag(record->trusted_user_presence_required, TAG_TRUSTED_USER_PRESENCE_REQUIRED,
+                auth_list);
+    copyAuthTag(record->trusted_confirmation_required, TAG_TRUSTED_CONFIRMATION_REQUIRED,
+                auth_list);
+    copyAuthTag(record->unlocked_device_required, TAG_UNLOCKED_DEVICE_REQUIRED, auth_list);
 
     return ErrorCode::OK;
 }
diff --git a/keymaster/4.0/support/include/keymasterV4_0/key_param_output.h b/keymaster/4.0/support/include/keymasterV4_0/key_param_output.h
index 74be3436..6e2b691c 100644
--- a/keymaster/4.0/support/include/keymasterV4_0/key_param_output.h
+++ b/keymaster/4.0/support/include/keymasterV4_0/key_param_output.h
@@ -53,6 +53,10 @@ inline ::std::ostream& operator<<(::std::ostream& os, PaddingMode value) {
     return os << toString(value);
 }
 
+inline ::std::ostream& operator<<(::std::ostream& os, SecurityLevel value) {
+    return os << toString(value);
+}
+
 template <typename ValueT>
 ::std::ostream& operator<<(::std::ostream& os, const NullOr<ValueT>& value) {
     if (!value.isOk()) {
diff --git a/keymaster/4.0/support/include/keymasterV4_0/keymaster_tags.h b/keymaster/4.0/support/include/keymasterV4_0/keymaster_tags.h
index 7c6b2895..0836e76d 100644
--- a/keymaster/4.0/support/include/keymasterV4_0/keymaster_tags.h
+++ b/keymaster/4.0/support/include/keymasterV4_0/keymaster_tags.h
@@ -119,6 +119,7 @@ DECLARE_TYPED_TAG(AUTH_TIMEOUT);
 DECLARE_TYPED_TAG(BLOB_USAGE_REQUIREMENTS);
 DECLARE_TYPED_TAG(BLOCK_MODE);
 DECLARE_TYPED_TAG(BOOTLOADER_ONLY);
+DECLARE_TYPED_TAG(BOOT_PATCHLEVEL);
 DECLARE_TYPED_TAG(CALLER_NONCE);
 DECLARE_TYPED_TAG(CONFIRMATION_TOKEN);
 DECLARE_TYPED_TAG(CREATION_DATETIME);
@@ -144,12 +145,14 @@ DECLARE_TYPED_TAG(ROLLBACK_RESISTANCE);
 DECLARE_TYPED_TAG(ROOT_OF_TRUST);
 DECLARE_TYPED_TAG(RSA_PUBLIC_EXPONENT);
 DECLARE_TYPED_TAG(TRUSTED_CONFIRMATION_REQUIRED);
+DECLARE_TYPED_TAG(TRUSTED_USER_PRESENCE_REQUIRED);
 DECLARE_TYPED_TAG(UNIQUE_ID);
 DECLARE_TYPED_TAG(UNLOCKED_DEVICE_REQUIRED);
 DECLARE_TYPED_TAG(USAGE_EXPIRE_DATETIME);
 DECLARE_TYPED_TAG(USER_AUTH_TYPE);
 DECLARE_TYPED_TAG(USER_ID);
 DECLARE_TYPED_TAG(USER_SECURE_ID);
+DECLARE_TYPED_TAG(VENDOR_PATCHLEVEL);
 
 template <typename... Elems>
 struct MetaList {};
@@ -166,7 +169,8 @@ using all_tags_t =
              TAG_OS_VERSION_t, TAG_OS_PATCHLEVEL_t, TAG_UNIQUE_ID_t, TAG_ATTESTATION_CHALLENGE_t,
              TAG_ATTESTATION_APPLICATION_ID_t, TAG_RESET_SINCE_ID_ROTATION_t, TAG_PURPOSE_t,
              TAG_ALGORITHM_t, TAG_BLOCK_MODE_t, TAG_DIGEST_t, TAG_PADDING_t,
-             TAG_BLOB_USAGE_REQUIREMENTS_t, TAG_ORIGIN_t, TAG_USER_AUTH_TYPE_t, TAG_EC_CURVE_t>;
+             TAG_BLOB_USAGE_REQUIREMENTS_t, TAG_ORIGIN_t, TAG_USER_AUTH_TYPE_t, TAG_EC_CURVE_t,
+             TAG_BOOT_PATCHLEVEL_t, TAG_VENDOR_PATCHLEVEL_t, TAG_TRUSTED_USER_PRESENCE_REQUIRED_t>;
 
 template <typename TypedTagType>
 struct TypedTag2ValueType;
diff --git a/keymaster/4.0/vts/functional/VerificationTokenTest.cpp b/keymaster/4.0/vts/functional/VerificationTokenTest.cpp
index 6afba0c4..3876b16f 100644
--- a/keymaster/4.0/vts/functional/VerificationTokenTest.cpp
+++ b/keymaster/4.0/vts/functional/VerificationTokenTest.cpp
@@ -111,8 +111,9 @@ TEST_F(VerificationTokenTest, TestCreation) {
 
     EXPECT_GE(host_time_delta, time_to_sleep)
         << "We slept for " << time_to_sleep << " ms, the clock must have advanced by that much";
-    EXPECT_LE(host_time_delta, time_to_sleep + 10)
-        << "The verifyAuthorization call took more than 10 ms?  That's awful!";
+    EXPECT_LE(host_time_delta, time_to_sleep + 20)
+        << "The verifyAuthorization call took " << (host_time_delta - time_to_sleep)
+        << " ms?  That's awful!";
 
     auto km_time_delta = result2.token.timestamp - result1.token.timestamp;
 
diff --git a/keymaster/4.0/vts/functional/keymaster_hidl_hal_test.cpp b/keymaster/4.0/vts/functional/keymaster_hidl_hal_test.cpp
index 450b3eb4..3919a69d 100644
--- a/keymaster/4.0/vts/functional/keymaster_hidl_hal_test.cpp
+++ b/keymaster/4.0/vts/functional/keymaster_hidl_hal_test.cpp
@@ -182,7 +182,7 @@ X509* parse_cert_blob(const hidl_vec<uint8_t>& blob) {
 }
 
 bool verify_chain(const hidl_vec<hidl_vec<uint8_t>>& chain) {
-    for (size_t i = 0; i < chain.size() - 1; ++i) {
+    for (size_t i = 0; i < chain.size(); ++i) {
         X509_Ptr key_cert(parse_cert_blob(chain[i]));
         X509_Ptr signing_cert;
         if (i < chain.size() - 1) {
@@ -198,7 +198,8 @@ bool verify_chain(const hidl_vec<hidl_vec<uint8_t>>& chain) {
         if (!signing_pubkey.get()) return false;
 
         EXPECT_EQ(1, X509_verify(key_cert.get(), signing_pubkey.get()))
-            << "Verification of certificate " << i << " failed";
+            << "Verification of certificate " << i << " failed "
+            << "OpenSSL error string: " << ERR_error_string(ERR_get_error(), NULL);
 
         char* cert_issuer =  //
             X509_NAME_oneline(X509_get_issuer_name(key_cert.get()), nullptr, 0);
@@ -246,8 +247,7 @@ bool tag_in_list(const KeyParameter& entry) {
     // Attestations don't contain everything in key authorization lists, so we need to filter
     // the key lists to produce the lists that we expect to match the attestations.
     auto tag_list = {
-        Tag::INCLUDE_UNIQUE_ID, Tag::BLOB_USAGE_REQUIREMENTS,
-        Tag::EC_CURVE /* Tag::EC_CURVE will be included by KM2 implementations */,
+        Tag::INCLUDE_UNIQUE_ID, Tag::BLOB_USAGE_REQUIREMENTS, Tag::EC_CURVE, Tag::HARDWARE_TYPE,
     };
     return std::find(tag_list.begin(), tag_list.end(), entry.tag) != tag_list.end();
 }
@@ -271,7 +271,7 @@ std::string make_string(const uint8_t (&a)[N]) {
 
 bool verify_attestation_record(const string& challenge, const string& app_id,
                                AuthorizationSet expected_sw_enforced,
-                               AuthorizationSet expected_tee_enforced,
+                               AuthorizationSet expected_tee_enforced, SecurityLevel security_level,
                                const hidl_vec<uint8_t>& attestation_cert) {
     X509_Ptr cert(parse_cert_blob(attestation_cert));
     EXPECT_TRUE(!!cert.get());
@@ -290,29 +290,27 @@ bool verify_attestation_record(const string& challenge, const string& app_id,
     HidlBuf att_challenge;
     HidlBuf att_unique_id;
     HidlBuf att_app_id;
-    EXPECT_EQ(ErrorCode::OK,
-              parse_attestation_record(attest_rec->data,                 //
-                                       attest_rec->length,               //
-                                       &att_attestation_version,         //
-                                       &att_attestation_security_level,  //
-                                       &att_keymaster_version,           //
-                                       &att_keymaster_security_level,    //
-                                       &att_challenge,                   //
-                                       &att_sw_enforced,                 //
-                                       &att_tee_enforced,                //
-                                       &att_unique_id));
-
-    EXPECT_TRUE(att_attestation_version == 1 || att_attestation_version == 2);
+
+    auto error = parse_attestation_record(attest_rec->data,                 //
+                                          attest_rec->length,               //
+                                          &att_attestation_version,         //
+                                          &att_attestation_security_level,  //
+                                          &att_keymaster_version,           //
+                                          &att_keymaster_security_level,    //
+                                          &att_challenge,                   //
+                                          &att_sw_enforced,                 //
+                                          &att_tee_enforced,                //
+                                          &att_unique_id);
+    EXPECT_EQ(ErrorCode::OK, error);
+    if (error != ErrorCode::OK) return false;
+
+    EXPECT_TRUE(att_attestation_version == 3);
 
     expected_sw_enforced.push_back(TAG_ATTESTATION_APPLICATION_ID, HidlBuf(app_id));
 
-    EXPECT_GE(att_keymaster_version, 3U);
-    EXPECT_EQ(KeymasterHidlTest::IsSecure() ? SecurityLevel::TRUSTED_ENVIRONMENT
-                                            : SecurityLevel::SOFTWARE,
-              att_keymaster_security_level);
-    EXPECT_EQ(KeymasterHidlTest::IsSecure() ? SecurityLevel::TRUSTED_ENVIRONMENT
-                                            : SecurityLevel::SOFTWARE,
-              att_attestation_security_level);
+    EXPECT_EQ(att_keymaster_version, 4U);
+    EXPECT_EQ(security_level, att_keymaster_security_level);
+    EXPECT_EQ(security_level, att_attestation_security_level);
 
     EXPECT_EQ(challenge.length(), att_challenge.size());
     EXPECT_EQ(0, memcmp(challenge.data(), att_challenge.data(), challenge.length()));
@@ -538,10 +536,16 @@ TEST_F(NewKeyGenerationTest, EcdsaAllValidSizes) {
  * Verifies that keymaster does not support any curve designated as unsupported.
  */
 TEST_F(NewKeyGenerationTest, EcdsaAllValidCurves) {
+    Digest digest;
+    if (SecLevel() == SecurityLevel::STRONGBOX) {
+        digest = Digest::SHA_2_256;
+    } else {
+        digest = Digest::SHA_2_512;
+    }
     for (auto curve : ValidCurves()) {
         EXPECT_EQ(
             ErrorCode::OK,
-            GenerateKey(AuthorizationSetBuilder().EcdsaSigningKey(curve).Digest(Digest::SHA_2_512)))
+            GenerateKey(AuthorizationSetBuilder().EcdsaSigningKey(curve).Digest(digest)))
             << "Failed to generate key on curve: " << curve;
         CheckCharacteristics(key_blob_, key_characteristics_);
         CheckedDeleteKey();
@@ -831,6 +835,7 @@ TEST_F(SigningOperationsTest, RsaPkcs1NoDigestTooLong) {
  * 1024-bit key.
  */
 TEST_F(SigningOperationsTest, RsaPssSha512TooSmallKey) {
+    if (SecLevel() == SecurityLevel::STRONGBOX) return;
     ASSERT_EQ(ErrorCode::OK, GenerateKey(AuthorizationSetBuilder()
                                              .RsaSigningKey(1024, 65537)
                                              .Digest(Digest::SHA_2_512)
@@ -1188,10 +1193,12 @@ TEST_F(SigningOperationsTest, HmacRfc4231TestCase3) {
         0xbe, 0xe8, 0x94, 0x26, 0x74, 0x27, 0x88, 0x59, 0xe1, 0x32, 0x92, 0xfb,
     };
 
-    CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
     CheckHmacTestVector(key, message, Digest::SHA_2_256, make_string(sha_256_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    if (SecLevel() != SecurityLevel::STRONGBOX) {
+        CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    }
 }
 
 /*
@@ -1220,10 +1227,12 @@ TEST_F(SigningOperationsTest, HmacRfc4231TestCase5) {
         0x1d, 0x41, 0x79, 0xbc, 0x89, 0x1d, 0x87, 0xa6,
     };
 
-    CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
     CheckHmacTestVector(key, message, Digest::SHA_2_256, make_string(sha_256_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    if (SecLevel() != SecurityLevel::STRONGBOX) {
+        CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    }
 }
 
 /*
@@ -1258,10 +1267,12 @@ TEST_F(SigningOperationsTest, HmacRfc4231TestCase6) {
         0xf6, 0x3f, 0x0a, 0xec, 0x8b, 0x91, 0x5a, 0x98, 0x5d, 0x78, 0x65, 0x98,
     };
 
-    CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
     CheckHmacTestVector(key, message, Digest::SHA_2_256, make_string(sha_256_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    if (SecLevel() != SecurityLevel::STRONGBOX) {
+        CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    }
 }
 
 /*
@@ -1299,10 +1310,12 @@ TEST_F(SigningOperationsTest, HmacRfc4231TestCase7) {
         0x6d, 0xe0, 0x44, 0x60, 0x65, 0xc9, 0x74, 0x40, 0xfa, 0x8c, 0x6a, 0x58,
     };
 
-    CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
     CheckHmacTestVector(key, message, Digest::SHA_2_256, make_string(sha_256_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
-    CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    if (SecLevel() != SecurityLevel::STRONGBOX) {
+        CheckHmacTestVector(key, message, Digest::SHA_2_224, make_string(sha_224_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_384, make_string(sha_384_expected));
+        CheckHmacTestVector(key, message, Digest::SHA_2_512, make_string(sha_512_expected));
+    }
 }
 
 typedef KeymasterHidlTest VerificationOperationsTest;
@@ -1514,7 +1527,7 @@ TEST_F(VerificationOperationsTest, HmacSigningKeyCannotVerify) {
                             .Authorization(TAG_NO_AUTH_REQUIRED)
                             .Authorization(TAG_ALGORITHM, Algorithm::HMAC)
                             .Authorization(TAG_PURPOSE, KeyPurpose::SIGN)
-                            .Digest(Digest::SHA1)
+                            .Digest(Digest::SHA_2_256)
                             .Authorization(TAG_MIN_MAC_LENGTH, 160),
                         KeyFormat::RAW, key_material, &signing_key, &signing_key_chars));
     EXPECT_EQ(ErrorCode::OK,
@@ -1522,24 +1535,24 @@ TEST_F(VerificationOperationsTest, HmacSigningKeyCannotVerify) {
                             .Authorization(TAG_NO_AUTH_REQUIRED)
                             .Authorization(TAG_ALGORITHM, Algorithm::HMAC)
                             .Authorization(TAG_PURPOSE, KeyPurpose::VERIFY)
-                            .Digest(Digest::SHA1)
+                            .Digest(Digest::SHA_2_256)
                             .Authorization(TAG_MIN_MAC_LENGTH, 160),
                         KeyFormat::RAW, key_material, &verification_key, &verification_key_chars));
 
     string message = "This is a message.";
     string signature = SignMessage(
         signing_key, message,
-        AuthorizationSetBuilder().Digest(Digest::SHA1).Authorization(TAG_MAC_LENGTH, 160));
+        AuthorizationSetBuilder().Digest(Digest::SHA_2_256).Authorization(TAG_MAC_LENGTH, 160));
 
     // Signing key should not work.
     AuthorizationSet out_params;
     EXPECT_EQ(ErrorCode::INCOMPATIBLE_PURPOSE,
-              Begin(KeyPurpose::VERIFY, signing_key, AuthorizationSetBuilder().Digest(Digest::SHA1),
+              Begin(KeyPurpose::VERIFY, signing_key, AuthorizationSetBuilder().Digest(Digest::SHA_2_256),
                     &out_params, &op_handle_));
 
     // Verification key should work.
     VerifyMessage(verification_key, message, signature,
-                  AuthorizationSetBuilder().Digest(Digest::SHA1));
+                  AuthorizationSetBuilder().Digest(Digest::SHA_2_256));
 
     CheckedDeleteKey(&signing_key);
     CheckedDeleteKey(&verification_key);
@@ -2143,11 +2156,13 @@ TEST_F(EncryptionOperationsTest, RsaOaepInvalidDigest) {
  * different digest than was used to encrypt.
  */
 TEST_F(EncryptionOperationsTest, RsaOaepDecryptWithWrongDigest) {
+    if (SecLevel() == SecurityLevel::STRONGBOX) return;
+
     ASSERT_EQ(ErrorCode::OK, GenerateKey(AuthorizationSetBuilder()
                                              .Authorization(TAG_NO_AUTH_REQUIRED)
                                              .RsaEncryptionKey(1024, 65537)
                                              .Padding(PaddingMode::RSA_OAEP)
-                                             .Digest(Digest::SHA_2_256, Digest::SHA_2_224)));
+                                             .Digest(Digest::SHA_2_224, Digest::SHA_2_256)));
     string message = "Hello World!";
     string ciphertext = EncryptMessage(
         message,
@@ -2173,13 +2188,13 @@ TEST_F(EncryptionOperationsTest, RsaOaepTooLarge) {
                                              .Authorization(TAG_NO_AUTH_REQUIRED)
                                              .RsaEncryptionKey(1024, 65537)
                                              .Padding(PaddingMode::RSA_OAEP)
-                                             .Digest(Digest::SHA1)));
-    constexpr size_t digest_size = 160 /* SHA1 */ / 8;
+                                             .Digest(Digest::SHA_2_256)));
+    constexpr size_t digest_size = 256 /* SHA_2_256 */ / 8;
     constexpr size_t oaep_overhead = 2 * digest_size + 2;
     string message(1024 / 8 - oaep_overhead + 1, 'a');
     EXPECT_EQ(ErrorCode::OK,
               Begin(KeyPurpose::ENCRYPT,
-                    AuthorizationSetBuilder().Padding(PaddingMode::RSA_OAEP).Digest(Digest::SHA1)));
+                    AuthorizationSetBuilder().Padding(PaddingMode::RSA_OAEP).Digest(Digest::SHA_2_256)));
     string result;
     EXPECT_EQ(ErrorCode::INVALID_ARGUMENT, Finish(message, &result));
     EXPECT_EQ(0U, result.size());
@@ -3008,6 +3023,7 @@ TEST_F(EncryptionOperationsTest, AesGcmAadNoData) {
  * Verifies that AES GCM mode works when provided additional authenticated data in multiple chunks.
  */
 TEST_F(EncryptionOperationsTest, AesGcmMultiPartAad) {
+    const size_t tag_bits = 128;
     ASSERT_EQ(ErrorCode::OK, GenerateKey(AuthorizationSetBuilder()
                                              .Authorization(TAG_NO_AUTH_REQUIRED)
                                              .AesEncryptionKey(128)
@@ -3019,7 +3035,7 @@ TEST_F(EncryptionOperationsTest, AesGcmMultiPartAad) {
     auto begin_params = AuthorizationSetBuilder()
                             .BlockMode(BlockMode::GCM)
                             .Padding(PaddingMode::NONE)
-                            .Authorization(TAG_MAC_LENGTH, 128);
+                            .Authorization(TAG_MAC_LENGTH, tag_bits);
     AuthorizationSet begin_out_params;
 
     auto update_params =
@@ -3041,10 +3057,11 @@ TEST_F(EncryptionOperationsTest, AesGcmMultiPartAad) {
     EXPECT_EQ(ErrorCode::OK, Update(op_handle_, update_params, message, &update_out_params,
                                     &ciphertext, &input_consumed));
     EXPECT_EQ(message.size(), input_consumed);
-    EXPECT_EQ(message.size(), ciphertext.size());
     EXPECT_TRUE(update_out_params.empty());
 
     EXPECT_EQ(ErrorCode::OK, Finish("" /* input */, &ciphertext));
+    // Expect 128-bit (16-byte) tag appended to ciphertext.
+    EXPECT_EQ(message.size() + (tag_bits >> 3), ciphertext.size());
 
     // Grab nonce.
     begin_params.push_back(begin_out_params);
@@ -3100,7 +3117,6 @@ TEST_F(EncryptionOperationsTest, AesGcmAadOutOfOrder) {
     EXPECT_EQ(ErrorCode::OK, Update(op_handle_, update_params, message, &update_out_params,
                                     &ciphertext, &input_consumed));
     EXPECT_EQ(message.size(), input_consumed);
-    EXPECT_EQ(message.size(), ciphertext.size());
     EXPECT_TRUE(update_out_params.empty());
 
     // More AAD
@@ -3827,7 +3843,7 @@ TEST_F(AttestationTest, RsaAttestation) {
     EXPECT_TRUE(verify_attestation_record("challenge", "foo",                     //
                                           key_characteristics_.softwareEnforced,  //
                                           key_characteristics_.hardwareEnforced,  //
-                                          cert_chain[0]));
+                                          SecLevel(), cert_chain[0]));
 }
 
 /*
@@ -3874,7 +3890,7 @@ TEST_F(AttestationTest, EcAttestation) {
     EXPECT_TRUE(verify_attestation_record("challenge", "foo",                     //
                                           key_characteristics_.softwareEnforced,  //
                                           key_characteristics_.hardwareEnforced,  //
-                                          cert_chain[0]));
+                                          SecLevel(), cert_chain[0]));
 }
 
 /*
diff --git a/media/omx/1.0/vts/functional/audio/VtsHalMediaOmxV1_0TargetAudioDecTest.cpp b/media/omx/1.0/vts/functional/audio/VtsHalMediaOmxV1_0TargetAudioDecTest.cpp
index 725e2904..e851a7c1 100644
--- a/media/omx/1.0/vts/functional/audio/VtsHalMediaOmxV1_0TargetAudioDecTest.cpp
+++ b/media/omx/1.0/vts/functional/audio/VtsHalMediaOmxV1_0TargetAudioDecTest.cpp
@@ -151,6 +151,15 @@ class AudioDecHidlTest : public ::testing::VtsHalHidlTargetTestBase {
         framesReceived = 0;
         timestampUs = 0;
         timestampDevTest = false;
+        isSecure = false;
+        size_t suffixLen = strlen(".secure");
+        if (strlen(gEnv->getComponent().c_str()) >= suffixLen) {
+            isSecure =
+                !strcmp(gEnv->getComponent().c_str() +
+                            strlen(gEnv->getComponent().c_str()) - suffixLen,
+                        ".secure");
+        }
+        if (isSecure) disableTest = true;
         if (disableTest) std::cout << "[   WARN   ] Test Disabled \n";
     }
 
@@ -247,6 +256,7 @@ class AudioDecHidlTest : public ::testing::VtsHalHidlTargetTestBase {
     OMX_AUDIO_CODINGTYPE eEncoding;
     bool disableTest;
     bool eosFlag;
+    bool isSecure;
     uint32_t framesReceived;
     uint64_t timestampUs;
     ::android::List<uint64_t> timestampUslist;
diff --git a/power/1.3/Android.bp b/power/1.3/Android.bp
new file mode 100644
index 00000000..65b75977
--- /dev/null
+++ b/power/1.3/Android.bp
@@ -0,0 +1,21 @@
+// This file is autogenerated by hidl-gen -Landroidbp.
+
+hidl_interface {
+    name: "android.hardware.power@1.3",
+    root: "android.hardware",
+    srcs: [
+        "types.hal",
+        "IPower.hal",
+    ],
+    interfaces: [
+        "android.hardware.power@1.0",
+        "android.hardware.power@1.1",
+        "android.hardware.power@1.2",
+        "android.hidl.base@1.0",
+    ],
+    types: [
+        "PowerHint",
+    ],
+    gen_java: true,
+}
+
diff --git a/power/1.3/IPower.hal b/power/1.3/IPower.hal
new file mode 100644
index 00000000..18b00a30
--- /dev/null
+++ b/power/1.3/IPower.hal
@@ -0,0 +1,33 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package android.hardware.power@1.3;
+
+import @1.2::IPower;
+
+interface IPower extends @1.2::IPower {
+    /**
+     * Called to pass hints on power requirements which
+     * may result in adjustment of power/performance parameters of the
+     * cpufreq governor and other controls.
+     *
+     * A particular platform may choose to ignore any hint.
+     *
+     * @param hint PowerHint which is passed
+     * @param data contains additional information about the hint
+     *     and is described along with the comments for each of the hints.
+     */
+    oneway powerHintAsync_1_3(PowerHint hint, int32_t data);
+};
diff --git a/power/1.3/types.hal b/power/1.3/types.hal
new file mode 100644
index 00000000..658495cf
--- /dev/null
+++ b/power/1.3/types.hal
@@ -0,0 +1,28 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package android.hardware.power@1.3;
+
+import @1.2::PowerHint;
+
+/** Power hint identifiers passed to powerHintAsync_1_3() */
+enum PowerHint : @1.2::PowerHint {
+   /**
+    * This hint indicates that the device is about to enter a period of expensive rendering, and
+    * the GPU should be configured accordingly. The data parameter is always 1 when entering this
+    * state and 0 when leaving it.
+    */
+    EXPENSIVE_RENDERING,
+};
diff --git a/power/1.3/vts/functional/Android.bp b/power/1.3/vts/functional/Android.bp
new file mode 100644
index 00000000..34cdb607
--- /dev/null
+++ b/power/1.3/vts/functional/Android.bp
@@ -0,0 +1,27 @@
+//
+// Copyright (C) 2018 The Android Open Source Project
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+//
+
+cc_test {
+    name: "VtsHalPowerV1_3TargetTest",
+    defaults: ["VtsHalTargetTestDefaults"],
+    srcs: ["VtsHalPowerV1_3TargetTest.cpp"],
+    static_libs: [
+        "android.hardware.power@1.0",
+        "android.hardware.power@1.1",
+        "android.hardware.power@1.2",
+        "android.hardware.power@1.3",
+    ],
+}
diff --git a/power/1.3/vts/functional/VtsHalPowerV1_3TargetTest.cpp b/power/1.3/vts/functional/VtsHalPowerV1_3TargetTest.cpp
new file mode 100644
index 00000000..af1a1d86
--- /dev/null
+++ b/power/1.3/vts/functional/VtsHalPowerV1_3TargetTest.cpp
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#define LOG_TAG "power_hidl_hal_test"
+#include <android-base/logging.h>
+#include <android/hardware/power/1.3/IPower.h>
+
+#include <VtsHalHidlTargetTestBase.h>
+#include <VtsHalHidlTargetTestEnvBase.h>
+
+using ::android::sp;
+using ::android::hardware::hidl_vec;
+using ::android::hardware::Return;
+using ::android::hardware::power::V1_3::IPower;
+using ::android::hardware::power::V1_3::PowerHint;
+
+// Test environment for Power HIDL HAL.
+class PowerHidlEnvironment : public ::testing::VtsHalHidlTargetTestEnvBase {
+   public:
+    // get the test environment singleton
+    static PowerHidlEnvironment* Instance() {
+        static PowerHidlEnvironment* instance = new PowerHidlEnvironment;
+        return instance;
+    }
+
+    virtual void registerTestServices() override { registerTestService<IPower>(); }
+};
+
+class PowerHidlTest : public ::testing::VtsHalHidlTargetTestBase {
+   public:
+    virtual void SetUp() override {
+        power = ::testing::VtsHalHidlTargetTestBase::getService<IPower>(
+            PowerHidlEnvironment::Instance()->getServiceName<IPower>());
+        ASSERT_NE(power, nullptr);
+    }
+
+    sp<IPower> power;
+};
+
+TEST_F(PowerHidlTest, PowerHintAsync_1_3) {
+    ASSERT_TRUE(power->powerHintAsync_1_3(PowerHint::EXPENSIVE_RENDERING, 0).isOk());
+}
+
+int main(int argc, char** argv) {
+    ::testing::AddGlobalTestEnvironment(PowerHidlEnvironment::Instance());
+    ::testing::InitGoogleTest(&argc, argv);
+    PowerHidlEnvironment::Instance()->init(&argc, argv);
+    int status = RUN_ALL_TESTS();
+    LOG(INFO) << "Test result = " << status;
+    return status;
+}
diff --git a/radio/1.0/IRadioResponse.hal b/radio/1.0/IRadioResponse.hal
index 27945cb0..c1b16b7b 100644
--- a/radio/1.0/IRadioResponse.hal
+++ b/radio/1.0/IRadioResponse.hal
@@ -88,6 +88,7 @@ interface IRadioResponse {
      *   RadioError:INVALID_ARGUMENTS
      *   RadioError:INVALID_SIM_STATE
      *   RadioError:REQUEST_NOT_SUPPORTED
+     *   RadioError:SIM_PUK2
      */
     oneway supplyIccPin2ForAppResponse(RadioResponseInfo info, int32_t remainingRetries);
 
@@ -141,6 +142,7 @@ interface IRadioResponse {
      *   RadioError:INVALID_ARGUMENTS
      *   RadioError:INVALID_SIM_STATE
      *   RadioError:REQUEST_NOT_SUPPORTED
+     *   RadioError:SIM_PUK2
      */
     oneway changeIccPin2ForAppResponse(RadioResponseInfo info, int32_t remainingRetries);
 
diff --git a/radio/1.0/vts/functional/radio_hidl_hal_icc.cpp b/radio/1.0/vts/functional/radio_hidl_hal_icc.cpp
index 73e26d2d..2670d96c 100644
--- a/radio/1.0/vts/functional/radio_hidl_hal_icc.cpp
+++ b/radio/1.0/vts/functional/radio_hidl_hal_icc.cpp
@@ -44,7 +44,9 @@ TEST_F(RadioHidlTest, supplyIccPinForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
-            EXPECT_EQ(RadioError::PASSWORD_INCORRECT, radioRsp->rspInfo.error);
+            ASSERT_TRUE(CheckAnyOfErrors(
+                radioRsp->rspInfo.error,
+                {RadioError::PASSWORD_INCORRECT, RadioError::REQUEST_NOT_SUPPORTED}));
         }
     }
 }
@@ -67,7 +69,8 @@ TEST_F(RadioHidlTest, supplyIccPukForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
-            EXPECT_EQ(RadioError::PASSWORD_INCORRECT, radioRsp->rspInfo.error);
+            ASSERT_TRUE(CheckAnyOfErrors(radioRsp->rspInfo.error, {RadioError::PASSWORD_INCORRECT,
+                                                                   RadioError::INVALID_SIM_STATE}));
         }
     }
 }
@@ -90,7 +93,10 @@ TEST_F(RadioHidlTest, supplyIccPin2ForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
-            EXPECT_EQ(RadioError::PASSWORD_INCORRECT, radioRsp->rspInfo.error);
+            ASSERT_TRUE(
+                CheckAnyOfErrors(radioRsp->rspInfo.error,
+                                 {RadioError::PASSWORD_INCORRECT, RadioError::REQUEST_NOT_SUPPORTED,
+                                  RadioError::SIM_PUK2}));
         }
     }
 }
@@ -113,7 +119,8 @@ TEST_F(RadioHidlTest, supplyIccPuk2ForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
-            EXPECT_EQ(RadioError::PASSWORD_INCORRECT, radioRsp->rspInfo.error);
+            ASSERT_TRUE(CheckAnyOfErrors(radioRsp->rspInfo.error, {RadioError::PASSWORD_INCORRECT,
+                                                                   RadioError::INVALID_SIM_STATE}));
         }
     }
 }
@@ -161,9 +168,10 @@ TEST_F(RadioHidlTest, changeIccPin2ForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
-            ASSERT_TRUE(CheckAnyOfErrors(
-                radioRsp->rspInfo.error,
-                {RadioError::PASSWORD_INCORRECT, RadioError::REQUEST_NOT_SUPPORTED}));
+            ASSERT_TRUE(
+                CheckAnyOfErrors(radioRsp->rspInfo.error,
+                                 {RadioError::PASSWORD_INCORRECT, RadioError::REQUEST_NOT_SUPPORTED,
+                                  RadioError::SIM_PUK2}));
         }
     }
 }
@@ -184,7 +192,8 @@ TEST_F(RadioHidlTest, getImsiForApp) {
             EXPECT_EQ(std::cv_status::no_timeout, wait());
             EXPECT_EQ(RadioResponseType::SOLICITED, radioRsp->rspInfo.type);
             EXPECT_EQ(serial, radioRsp->rspInfo.serial);
-            EXPECT_EQ(RadioError::NONE, radioRsp->rspInfo.error);
+            ASSERT_TRUE(
+                CheckAnyOfErrors(radioRsp->rspInfo.error, {RadioError::NONE}, CHECK_GENERAL_ERROR));
 
             // IMSI (MCC+MNC+MSIN) is at least 6 digits, but not more than 15
             if (radioRsp->rspInfo.error == RadioError::NONE) {
diff --git a/radio/1.0/vts/functional/radio_hidl_hal_misc.cpp b/radio/1.0/vts/functional/radio_hidl_hal_misc.cpp
index bc03cf19..34997625 100644
--- a/radio/1.0/vts/functional/radio_hidl_hal_misc.cpp
+++ b/radio/1.0/vts/functional/radio_hidl_hal_misc.cpp
@@ -694,9 +694,10 @@ TEST_F(RadioHidlTest, startLceService) {
     EXPECT_EQ(serial, radioRsp->rspInfo.serial);
 
     if (cardStatus.cardState == CardState::ABSENT) {
-        ASSERT_TRUE(CheckAnyOfErrors(radioRsp->rspInfo.error,
-                                     {RadioError::INTERNAL_ERR, RadioError::LCE_NOT_SUPPORTED,
-                                      RadioError::RADIO_NOT_AVAILABLE, RadioError::SIM_ABSENT}));
+        ASSERT_TRUE(CheckAnyOfErrors(
+            radioRsp->rspInfo.error,
+            {RadioError::INTERNAL_ERR, RadioError::LCE_NOT_SUPPORTED,
+             RadioError::RADIO_NOT_AVAILABLE, RadioError::SIM_ABSENT, RadioError::NONE}));
     }
 }
 
@@ -730,10 +731,10 @@ TEST_F(RadioHidlTest, pullLceData) {
     EXPECT_EQ(serial, radioRsp->rspInfo.serial);
 
     if (cardStatus.cardState == CardState::ABSENT) {
-        ASSERT_TRUE(CheckAnyOfErrors(
-            radioRsp->rspInfo.error,
-            {RadioError::NONE, RadioError::INTERNAL_ERR, RadioError::RADIO_NOT_AVAILABLE},
-            CHECK_OEM_ERROR));
+        ASSERT_TRUE(CheckAnyOfErrors(radioRsp->rspInfo.error,
+                                     {RadioError::NONE, RadioError::INTERNAL_ERR,
+                                      RadioError::RADIO_NOT_AVAILABLE, RadioError::SIM_ABSENT},
+                                     CHECK_OEM_ERROR));
     }
 }
 
@@ -778,20 +779,27 @@ TEST_F(RadioHidlTest, setAllowedCarriers) {
                                      {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 
-    /* Setting to carrier restriction needs some time */
-    updateSimCardStatus();
-    auto startTime = std::chrono::system_clock::now();
-    while (cardStatus.cardState != CardState::RESTRICTED &&
-           std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() - startTime)
-                   .count() < 10) {
-        /* Set 2 seconds as interval to check card status */
-        sleep(2);
+    if (radioRsp->rspInfo.error == RadioError::NONE) {
+        /* Setting to carrier restriction needs some time */
         updateSimCardStatus();
+        auto startTime = std::chrono::system_clock::now();
+        while (cardStatus.cardState != CardState::RESTRICTED &&
+               std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() -
+                                                           startTime)
+                       .count() < 10) {
+            /* Set 2 seconds as interval to check card status */
+            sleep(2);
+            updateSimCardStatus();
+        }
+        EXPECT_EQ(CardState::RESTRICTED, cardStatus.cardState);
     }
-    EXPECT_EQ(CardState::RESTRICTED, cardStatus.cardState);
     sleep(10);
 
-    /* Reset back to no carrier restriction */
+    /** 
+     * Another test case of the API to cover to allow carrier.
+     * If the API is supported, this is also used to reset to no carrier restriction
+     * status for cardStatus. 
+     */
     memset(&carriers, 0, sizeof(carriers));
     carriers.allowedCarriers.resize(0);
     carriers.excludedCarriers.resize(0);
@@ -807,18 +815,21 @@ TEST_F(RadioHidlTest, setAllowedCarriers) {
                                      {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 
-    /* Resetting back to no carrier restriction needs some time */
-    updateSimCardStatus();
-    startTime = std::chrono::system_clock::now();
-    while (cardStatus.cardState == CardState::RESTRICTED &&
-           std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() - startTime)
-                   .count() < 10) {
-        /* Set 2 seconds as interval to check card status */
-        sleep(2);
+    if (radioRsp->rspInfo.error == RadioError::NONE) {
+        /* Resetting back to no carrier restriction needs some time */
         updateSimCardStatus();
+        auto startTime = std::chrono::system_clock::now();
+        while (cardStatus.cardState == CardState::RESTRICTED &&
+               std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() -
+                                                           startTime)
+                       .count() < 10) {
+            /* Set 2 seconds as interval to check card status */
+            sleep(2);
+            updateSimCardStatus();
+        }
+        EXPECT_NE(CardState::RESTRICTED, cardStatus.cardState);
+        sleep(10);
     }
-    EXPECT_NE(CardState::RESTRICTED, cardStatus.cardState);
-    sleep(10);
 }
 
 /*
diff --git a/radio/1.1/vts/functional/radio_hidl_hal_api.cpp b/radio/1.1/vts/functional/radio_hidl_hal_api.cpp
index 90077dcf..33347c5d 100644
--- a/radio/1.1/vts/functional/radio_hidl_hal_api.cpp
+++ b/radio/1.1/vts/functional/radio_hidl_hal_api.cpp
@@ -33,17 +33,19 @@ TEST_F(RadioHidlTest_v1_1, setSimCardPower_1_1) {
     ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_1->rspInfo.error,
                                  {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED,
                                   RadioError::INVALID_ARGUMENTS, RadioError::RADIO_NOT_AVAILABLE}));
-    /* Wait some time for setting sim power down and then verify it */
-    updateSimCardStatus();
-    auto startTime = std::chrono::system_clock::now();
-    while (cardStatus.cardState != CardState::ABSENT &&
+    if (radioRsp_v1_1->rspInfo.error == RadioError::NONE) {
+        /* Wait some time for setting sim power down and then verify it */
+        updateSimCardStatus();
+        auto startTime = std::chrono::system_clock::now();
+        while (cardStatus.cardState != CardState::ABSENT &&
            std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() - startTime)
                    .count() < 80) {
-        /* Set 2 seconds as interval to check card status */
-        sleep(2);
-        updateSimCardStatus();
+            /* Set 2 seconds as interval to check card status */
+            sleep(2);
+            updateSimCardStatus();
+        }
+        EXPECT_EQ(CardState::ABSENT, cardStatus.cardState);
     }
-    EXPECT_EQ(CardState::ABSENT, cardStatus.cardState);
 
     /* Test setSimCardPower power up */
     serial = GetRandomSerialNumber();
@@ -59,10 +61,11 @@ TEST_F(RadioHidlTest_v1_1, setSimCardPower_1_1) {
      * If the sim card status for the testing environment is PRESENT,
      * verify if sim status is reset back.
      */
-    if (cardStateForTest == CardState::PRESENT) {
+    if (cardStateForTest == CardState::PRESENT &&
+        radioRsp_v1_1->rspInfo.error == RadioError::NONE) {
         /* Wait some time for resetting back to sim power on and then verify it */
         updateSimCardStatus();
-        startTime = std::chrono::system_clock::now();
+        auto startTime = std::chrono::system_clock::now();
         while (cardStatus.cardState != CardState::PRESENT &&
                std::chrono::duration_cast<chrono::seconds>(std::chrono::system_clock::now() -
                                                            startTime)
diff --git a/radio/1.2/IRadio.hal b/radio/1.2/IRadio.hal
index 6463b0fc..87b0add5 100644
--- a/radio/1.2/IRadio.hal
+++ b/radio/1.2/IRadio.hal
@@ -59,19 +59,30 @@ interface IRadio extends @1.1::IRadio {
     /**
      * Sets the signal strength reporting criteria.
      *
-     * The resulting reporting criteria are the AND of all the supplied criteria.
+     * The resulting reporting rules are the AND of all the supplied criteria. For each RAN
+     * The thresholdsDbm and hysteresisDb apply to only the following measured quantities:
+     * -GERAN    - RSSI
+     * -CDMA2000 - RSSI
+     * -UTRAN    - RSCP
+     * -EUTRAN   - RSRP
      *
-     * Note: Reporting criteria must be individually set for each RAN. If unset, reporting criteria
-     * for that RAN are implementation-defined.
+     * Note: Reporting criteria must be individually set for each RAN. For any unset reporting
+     * criteria, the value is implementation-defined.
      *
-     * Response callback is IRadioResponse.setSignalStrengthReportingCriteriaResponse().
+     * Note: As this mechanism generally only constrains reports based on one measured quantity per
+     * RAN, if multiple measured quantities must be used to trigger a report for a given RAN, the
+     * only valid field may be hysteresisMs: hysteresisDb and thresholdsDbm must be set to zero and
+     * length zero respectively. If either hysteresisDb or thresholdsDbm is set, then reports shall
+     * only be triggered by the respective measured quantity, subject to the applied constraints.
+     *
+     * Response callback is IRadioResponse.setSignalStrengthReportingCriteriaResponse()
      *
      * @param serial Serial number of request.
      * @param hysteresisMs A hysteresis time in milliseconds to prevent flapping. A value of 0
      *     disables hysteresis.
      * @param hysteresisDb An interval in dB defining the required magnitude change between reports.
-     *     hysteresisDb must be smaller than the smallest threshold delta. An
-     *     interval value of 0 disables hysteresis.
+     *     hysteresisDb must be smaller than the smallest threshold delta. An interval value of 0
+     *     disables hysteresis.
      * @param thresholdsDbm A vector of trigger thresholds in dBm. A vector size of 0 disables the
      *     use of thresholds for reporting.
      * @param accessNetwork The type of network for which to apply these thresholds.
diff --git a/radio/1.2/vts/functional/radio_hidl_hal_api.cpp b/radio/1.2/vts/functional/radio_hidl_hal_api.cpp
index 9284fd8f..35101637 100644
--- a/radio/1.2/vts/functional/radio_hidl_hal_api.cpp
+++ b/radio/1.2/vts/functional/radio_hidl_hal_api.cpp
@@ -43,7 +43,16 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan) {
     if (cardStatus.base.cardState == CardState::ABSENT) {
         ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::SIM_ABSENT}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
-        ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::NONE}));
+        // REQUEST_NOT_SUPPORTED should not be allowed as it is not an optional API. However, the
+        // comments in the hal were not updated to indicate that, hence allowing it as a valid
+        // error for now. This should be fixed correctly, possibly in a future version of the hal
+        // (b/110421924). This is being allowed because some vendors do not support
+        // this request on dual sim devices.
+        // OPERATION_NOT_ALLOWED should not be allowed; however, some vendors do not support the
+        // required manual GSM search functionality. This is tracked in b/112206766.
+        ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                                     {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED,
+                                      RadioError::OPERATION_NOT_ALLOWED}));
     }
 }
 
@@ -69,7 +78,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidArgument) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -105,7 +115,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidInterval1) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -141,7 +152,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidInterval2) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -177,7 +189,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidMaxSearchTime1) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -213,7 +226,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidMaxSearchTime2) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -249,7 +263,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidPeriodicity1) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -285,7 +300,8 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_InvalidPeriodicity2) {
                                      {RadioError::SIM_ABSENT, RadioError::INVALID_ARGUMENTS}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
         ASSERT_TRUE(
-            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+            CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                             {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -304,7 +320,9 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_GoodRequest1) {
         .type = ScanType::ONE_SHOT,
         .interval = 60,
         .specifiers = {specifier},
-        .maxSearchTime = 600,
+        // Some vendor may not support max search time of 360s.
+        // This issue is tracked in b/112205669.
+        .maxSearchTime = 300,
         .incrementalResults = false,
         .incrementalResultsPeriodicity = 10};
 
@@ -320,7 +338,9 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_GoodRequest1) {
         ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
                                      {RadioError::NONE, RadioError::SIM_ABSENT}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
-        ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::NONE}));
+        ASSERT_TRUE(CheckAnyOfErrors(
+            radioRsp_v1_2->rspInfo.error,
+            {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -339,7 +359,9 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_GoodRequest2) {
         .type = ScanType::ONE_SHOT,
         .interval = 60,
         .specifiers = {specifier},
-        .maxSearchTime = 600,
+        // Some vendor may not support max search time of 360s.
+        // This issue is tracked in b/112205669.
+        .maxSearchTime = 300,
         .incrementalResults = false,
         .incrementalResultsPeriodicity = 10,
         .mccMncs = {"310410"}};
@@ -356,7 +378,9 @@ TEST_F(RadioHidlTest_v1_2, startNetworkScan_GoodRequest2) {
         ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
                                      {RadioError::NONE, RadioError::SIM_ABSENT}));
     } else if (cardStatus.base.cardState == CardState::PRESENT) {
-        ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::NONE}));
+        ASSERT_TRUE(CheckAnyOfErrors(
+            radioRsp_v1_2->rspInfo.error,
+            {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
     }
 }
 
@@ -510,7 +534,11 @@ TEST_F(RadioHidlTest_v1_2, setLinkCapacityReportingCriteria_invalidHysteresisDlK
 
     ALOGI("setLinkCapacityReportingCriteria_invalidHysteresisDlKbps, rspInfo.error = %s\n",
           toString(radioRsp_v1_2->rspInfo.error).c_str());
-    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+    // Allow REQUEST_NOT_SUPPORTED as setLinkCapacityReportingCriteria() may not be supported for
+    // GERAN
+    ASSERT_TRUE(
+        CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                         {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
 }
 
 /*
@@ -531,7 +559,11 @@ TEST_F(RadioHidlTest_v1_2, setLinkCapacityReportingCriteria_invalidHysteresisUlK
 
     ALOGI("setLinkCapacityReportingCriteria_invalidHysteresisUlKbps, rspInfo.error = %s\n",
           toString(radioRsp_v1_2->rspInfo.error).c_str());
-    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::INVALID_ARGUMENTS}));
+    // Allow REQUEST_NOT_SUPPORTED as setLinkCapacityReportingCriteria() may not be supported for
+    // GERAN
+    ASSERT_TRUE(
+        CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                         {RadioError::INVALID_ARGUMENTS, RadioError::REQUEST_NOT_SUPPORTED}));
 }
 
 /*
@@ -549,7 +581,10 @@ TEST_F(RadioHidlTest_v1_2, setLinkCapacityReportingCriteria_emptyParams) {
 
     ALOGI("setLinkCapacityReportingCriteria_emptyParams, rspInfo.error = %s\n",
           toString(radioRsp_v1_2->rspInfo.error).c_str());
-    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::NONE}));
+    // Allow REQUEST_NOT_SUPPORTED as setLinkCapacityReportingCriteria() may not be supported for
+    // GERAN
+    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                                 {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
 }
 
 /*
@@ -568,7 +603,10 @@ TEST_F(RadioHidlTest_v1_2, setLinkCapacityReportingCriteria_Geran) {
 
     ALOGI("setLinkCapacityReportingCriteria_invalidHysteresisUlKbps, rspInfo.error = %s\n",
           toString(radioRsp_v1_2->rspInfo.error).c_str());
-    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error, {RadioError::NONE}));
+    // Allow REQUEST_NOT_SUPPORTED as setLinkCapacityReportingCriteria() may not be supported for
+    // GERAN
+    ASSERT_TRUE(CheckAnyOfErrors(radioRsp_v1_2->rspInfo.error,
+                                 {RadioError::NONE, RadioError::REQUEST_NOT_SUPPORTED}));
 }
 
 /*
@@ -666,7 +704,7 @@ TEST_F(RadioHidlTest_v1_2, deactivateDataCall_1_2) {
  * Test IRadio.getCellInfoList() for the response returned.
  */
 TEST_F(RadioHidlTest_v1_2, getCellInfoList_1_2) {
-    int serial = GetRandomSerialNumber();
+    serial = GetRandomSerialNumber();
 
     Return<void> res = radio_v1_2->getCellInfoList(serial);
     ASSERT_OK(res);
@@ -684,7 +722,7 @@ TEST_F(RadioHidlTest_v1_2, getCellInfoList_1_2) {
  * Test IRadio.getVoiceRegistrationState() for the response returned.
  */
 TEST_F(RadioHidlTest_v1_2, getVoiceRegistrationState) {
-    int serial = GetRandomSerialNumber();
+    serial = GetRandomSerialNumber();
 
     Return<void> res = radio_v1_2->getVoiceRegistrationState(serial);
     ASSERT_OK(res);
@@ -702,7 +740,7 @@ TEST_F(RadioHidlTest_v1_2, getVoiceRegistrationState) {
  * Test IRadio.getDataRegistrationState() for the response returned.
  */
 TEST_F(RadioHidlTest_v1_2, getDataRegistrationState) {
-    int serial = GetRandomSerialNumber();
+    serial = GetRandomSerialNumber();
 
     Return<void> res = radio_v1_2->getDataRegistrationState(serial);
     ASSERT_OK(res);
@@ -721,7 +759,7 @@ TEST_F(RadioHidlTest_v1_2, getDataRegistrationState) {
  * Test IRadio.getAvailableBandModes() for the response returned.
  */
 TEST_F(RadioHidlTest_v1_2, getAvailableBandModes) {
-    int serial = GetRandomSerialNumber();
+    serial = GetRandomSerialNumber();
 
     Return<void> res = radio_v1_2->getAvailableBandModes(serial);
     ASSERT_OK(res);
diff --git a/radio/1.2/vts/functional/radio_response.cpp b/radio/1.2/vts/functional/radio_response.cpp
index dab63a35..c5c7b14f 100644
--- a/radio/1.2/vts/functional/radio_response.cpp
+++ b/radio/1.2/vts/functional/radio_response.cpp
@@ -653,7 +653,9 @@ Return<void> RadioResponse_v1_2::sendDeviceStateResponse(const RadioResponseInfo
     return Void();
 }
 
-Return<void> RadioResponse_v1_2::setIndicationFilterResponse(const RadioResponseInfo& /*info*/) {
+Return<void> RadioResponse_v1_2::setIndicationFilterResponse(const RadioResponseInfo& info) {
+    rspInfo = info;
+    parent_v1_2.notify(info.serial);
     return Void();
 }
 
diff --git a/secure_element/1.0/vts/functional/VtsHalSecureElementV1_0TargetTest.cpp b/secure_element/1.0/vts/functional/VtsHalSecureElementV1_0TargetTest.cpp
index 3ea3e8dc..671923a6 100644
--- a/secure_element/1.0/vts/functional/VtsHalSecureElementV1_0TargetTest.cpp
+++ b/secure_element/1.0/vts/functional/VtsHalSecureElementV1_0TargetTest.cpp
@@ -173,7 +173,7 @@ TEST_F(SecureElementHidlTest, openBasicChannel) {
         se_->closeChannel(0);
         return;
     }
-    EXPECT_EQ(SecureElementStatus::UNSUPPORTED_OPERATION, statusReturned);
+    EXPECT_EQ(SecureElementStatus::CHANNEL_NOT_AVAILABLE, statusReturned);
 }
 
 /*
diff --git a/usb/1.1/vts/functional/VtsHalUsbV1_1TargetTest.cpp b/usb/1.1/vts/functional/VtsHalUsbV1_1TargetTest.cpp
index c990b237..caf9c695 100644
--- a/usb/1.1/vts/functional/VtsHalUsbV1_1TargetTest.cpp
+++ b/usb/1.1/vts/functional/VtsHalUsbV1_1TargetTest.cpp
@@ -31,8 +31,8 @@
 #include <condition_variable>
 #include <mutex>
 
+using ::android::hardware::usb::V1_1::IUsb;
 using ::android::hardware::usb::V1_1::IUsbCallback;
-using ::android::hardware::usb::V1_0::IUsb;
 using ::android::hardware::usb::V1_0::PortDataRole;
 using ::android::hardware::usb::V1_0::PortMode;
 using ::android::hardware::usb::V1_1::PortMode_1_1;
diff --git a/wifi/1.2/vts/functional/VtsHalWifiV1_2TargetTest.cpp b/wifi/1.2/vts/functional/VtsHalWifiV1_2TargetTest.cpp
index cfad2082..c765cdcc 100644
--- a/wifi/1.2/vts/functional/VtsHalWifiV1_2TargetTest.cpp
+++ b/wifi/1.2/vts/functional/VtsHalWifiV1_2TargetTest.cpp
@@ -17,14 +17,12 @@
 #include <android-base/logging.h>
 #include <android/hardware/wifi/1.2/IWifi.h>
 
-#include <VtsHalHidlTargetTestEnvBase.h>
-
 #include "wifi_hidl_test_utils.h"
 
 using ::android::hardware::wifi::V1_2::IWifi;
 
 // Test environment for Wifi HIDL HAL.
-class WifiHidlEnvironment_1_2 : public ::testing::VtsHalHidlTargetTestEnvBase {
+class WifiHidlEnvironment_1_2 : public WifiHidlEnvironment {
    public:
     // get the test environment singleton
     static WifiHidlEnvironment_1_2* Instance() {
-- 
2.17.1

