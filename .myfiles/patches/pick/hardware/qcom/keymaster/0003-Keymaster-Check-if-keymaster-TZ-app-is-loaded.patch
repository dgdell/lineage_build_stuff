From a8d7bf98d60022d8105cb5b21905cd7c9e90a51e Mon Sep 17 00:00:00 2001
From: Jyoti Wadhwani <jyotiw@codeaurora.org>
Date: Wed, 14 Jan 2015 15:59:33 -0800
Subject: [PATCH 3/8] Keymaster: Check if keymaster TZ app is loaded

qseecomd sets a property to indicate that it has successfully loaded
keymaster TZ app. This change checks waits until that property is set

Change-Id: I3533ba7489ab2d7d85473821557e4ddf0119cf6f
---
 Android.mk         |  3 ++-
 keymaster_qcom.cpp | 26 ++++++++++++++++++++++++++
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/Android.mk b/Android.mk
index 39fe7da..5035fab 100644
--- a/Android.mk
+++ b/Android.mk
@@ -32,7 +32,8 @@ LOCAL_SHARED_LIBRARIES := \
         libcrypto \
         liblog \
         libc \
-        libdl
+        libdl \
+        libcutils
 
 LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk
 
diff --git a/keymaster_qcom.cpp b/keymaster_qcom.cpp
index 4219317..b18bb04 100644
--- a/keymaster_qcom.cpp
+++ b/keymaster_qcom.cpp
@@ -44,6 +44,8 @@
 #include <sys/stat.h>
 #include <dlfcn.h>
 
+#include <cutils/properties.h>
+
 #include "QSEEComAPI.h"
 #include "keymaster_qcom.h"
 
@@ -53,6 +55,8 @@
 #define LOG_TAG "QCOMKeyMaster"
 #define UNUSED(x) (void)(x)
 #define KM_SB_LENGTH (4096 * 2)
+#define MAX_PROPERTY_GET_ATTEMPTS 60
+#define PROPERTY_GET_SLEEP_INTERVAL 1
 
 #include <cutils/log.h>
 struct qcom_km_ion_info_t {
@@ -738,6 +742,8 @@ static int qcom_km_open(const hw_module_t* module, const char* name,
         hw_device_t** device)
 {
     int ret = 0;
+    unsigned int attempt_num = 0;
+    char property_val[PROPERTY_VALUE_MAX] = {0};
     qcom_keymaster_handle_t* km_handle;
     if (strcmp(name, KEYSTORE_KEYMASTER) != 0)
         return -EINVAL;
@@ -760,6 +766,26 @@ static int qcom_km_open(const hw_module_t* module, const char* name,
         return -ENOMEM;
     }
     dev->context = (void *)km_handle;
+    while (attempt_num < MAX_PROPERTY_GET_ATTEMPTS)
+    {
+        property_get("sys.keymaster.loaded", property_val, "");
+        if (strncmp(property_val, "true", sizeof(property_val)) == 0)
+        {
+            ALOGD("keymaster app is loaded");
+            break;
+        }
+        if (attempt_num == 0)
+            ALOGE("keymaster app is not loaded, attempt number %d", attempt_num);
+        attempt_num++;
+        sleep(PROPERTY_GET_SLEEP_INTERVAL);
+    }
+    if (attempt_num == MAX_PROPERTY_GET_ATTEMPTS)
+    {
+        ALOGE("Keymaster app not loaded: Max attempts reached");
+        free(km_handle);
+        return -1;
+    }
+    ALOGD("keymaster app got loaded at attempt number %d", attempt_num);
     ret = (*km_handle->QSEECom_start_app)((struct QSEECom_handle **)&km_handle->qseecom,
                         "/vendor/firmware/keymaster", "keymaster", KM_SB_LENGTH);
     if(ret)
-- 
2.17.1

