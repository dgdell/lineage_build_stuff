From 911078e739982236b807f45f742bb0e599d572be Mon Sep 17 00:00:00 2001
From: Deepak Verma <dverma@codeaurora.org>
Date: Mon, 21 Oct 2013 15:49:31 +0530
Subject: [PATCH 4/6] mm-video: venc: Correct a typo in variable name

A kernel variable was to be defined as unsigned long but
it is mistakenly defined as unsigned only, the space is
missing after long. This bug is silent because unsigned
is also a valid data type by itself.
Corresponding to kernel fix, similar correction is done
in userspace code.

Change-Id: Ie58f275149dc9c85553f75e02594113b1a03ddcf
CRs-fixed: 556771
---
 .../vidc/venc/inc/video_encoder_device_copper.h      |  2 +-
 .../vidc/venc/src/video_encoder_device.cpp           |  8 ++++----
 .../vidc/venc/src/video_encoder_device_copper.cpp    | 12 ++++++------
 .../vidc/venc/inc/video_encoder_device_v4l2.h        |  2 +-
 .../vidc/venc/src/video_encoder_device.cpp           |  8 ++++----
 .../vidc/venc/src/video_encoder_device_v4l2.cpp      |  6 +++---
 6 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/msm8974/mm-video-legacy/vidc/venc/inc/video_encoder_device_copper.h b/msm8974/mm-video-legacy/vidc/venc/inc/video_encoder_device_copper.h
index 95f0a1bba..830c56dbf 100644
--- a/msm8974/mm-video-legacy/vidc/venc/inc/video_encoder_device_copper.h
+++ b/msm8974/mm-video-legacy/vidc/venc/inc/video_encoder_device_copper.h
@@ -106,7 +106,7 @@ struct msm_venc_capability{
 };
 
 struct msm_venc_entropycfg{
-	unsigned longentropysel;
+	unsigned long entropysel;
 	unsigned long	cabacmodel;
 };
 
diff --git a/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device.cpp b/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device.cpp
index 49927804a..c299c02a9 100644
--- a/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device.cpp
+++ b/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device.cpp
@@ -1425,7 +1425,7 @@ void venc_dev::venc_config_print()
                    multislice.mslice_size);
 
   DEBUG_PRINT_HIGH("\nENC_CONFIG: EntropyMode: %d, CabacModel: %d",
-                   entropy.longentropysel, entropy.cabacmodel);
+                   entropy.entropysel, entropy.cabacmodel);
 
   DEBUG_PRINT_HIGH("\nENC_CONFIG: DB-Mode: %d, alpha: %d, Beta: %d\n",
                    dbkfilter.db_mode, dbkfilter.slicealpha_offset,
@@ -2170,7 +2170,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
   DEBUG_PRINT_LOW("\n venc_set_entropy_config: CABAC = %u level: %u", enable, i_cabac_level);
 
   if(enable &&(codec_profile.profile != VEN_PROFILE_H264_BASELINE)){
-    entropy_cfg.longentropysel = VEN_ENTROPY_MODEL_CABAC;
+    entropy_cfg.entropysel = VEN_ENTROPY_MODEL_CABAC;
       if (i_cabac_level == 0) {
          entropy_cfg.cabacmodel = VEN_CABAC_MODEL_0;
       }
@@ -2190,7 +2190,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
 #endif
   }
   else if(!enable){
-    entropy_cfg.longentropysel = VEN_ENTROPY_MODEL_CAVLC;
+    entropy_cfg.entropysel = VEN_ENTROPY_MODEL_CAVLC;
     }
   else{
     DEBUG_PRINT_ERROR("\nInvalid Entropy mode for Baseline Profile");
@@ -2204,7 +2204,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
     DEBUG_PRINT_ERROR("\nERROR: Request for setting entropy config failed");
     return false;
   }
-  entropy.longentropysel = entropy_cfg.longentropysel;
+  entropy.entropysel = entropy_cfg.entropysel;
   entropy.cabacmodel  = entropy_cfg.cabacmodel;
   return true;
 }
diff --git a/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device_copper.cpp b/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device_copper.cpp
index 230ddefa8..7e8c6adc0 100644
--- a/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device_copper.cpp
+++ b/msm8974/mm-video-legacy/vidc/venc/src/video_encoder_device_copper.cpp
@@ -1378,7 +1378,7 @@ void venc_dev::venc_config_print()
                    multislice.mslice_size);
 
   DEBUG_PRINT_HIGH("\nENC_CONFIG: EntropyMode: %d, CabacModel: %d",
-                   entropy.longentropysel, entropy.cabacmodel);
+                   entropy.entropysel, entropy.cabacmodel);
 
   DEBUG_PRINT_HIGH("\nENC_CONFIG: DB-Mode: %d, alpha: %d, Beta: %d\n",
                    dbkfilter.db_mode, dbkfilter.slicealpha_offset,
@@ -2140,7 +2140,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
 		return false;
 	}
 	printf("Success IOCTL set control for id=%d, value=%d\n", control.id, control.value);
-	entropy.longentropysel = control.value;
+	entropy.entropysel = control.value;
 	  if (i_cabac_level == 0) {
          control.value = V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_0;
       }
@@ -2160,7 +2160,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
 		return false;
 	}
 	printf("Success IOCTL set control for id=%d, value=%d\n", control.id, control.value);
-	entropy.longentropysel=control.value;
+	entropy.entropysel=control.value;
   }
   else if(!enable){
     control.value =  V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC;
@@ -2172,8 +2172,8 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
 		return false;
 	}
 	printf("Success IOCTL set control for id=%d, value=%d\n", control.id, control.value);
-	entropy.longentropysel=control.value;
-	//entropy_cfg.longentropysel = control.value;
+	entropy.entropysel=control.value;
+	//entropy_cfg.entropysel = control.value;
     }
   else{
     DEBUG_PRINT_ERROR("\nInvalid Entropy mode for Baseline Profile");
@@ -2185,7 +2185,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
     DEBUG_PRINT_ERROR("\nERROR: Request for setting entropy config failed");
     return false;
   }
-  //entropy.longentropysel = entropy_cfg.longentropysel;
+  //entropy.entropysel = entropy_cfg.entropysel;
   //entropy.cabacmodel  = entropy_cfg.cabacmodel;
   return true;
 }
diff --git a/msm8974/mm-video-v4l2/vidc/venc/inc/video_encoder_device_v4l2.h b/msm8974/mm-video-v4l2/vidc/venc/inc/video_encoder_device_v4l2.h
index 94d68ee7e..a97872fb5 100644
--- a/msm8974/mm-video-v4l2/vidc/venc/inc/video_encoder_device_v4l2.h
+++ b/msm8974/mm-video-v4l2/vidc/venc/inc/video_encoder_device_v4l2.h
@@ -121,7 +121,7 @@ struct msm_venc_capability {
 };
 
 struct msm_venc_entropycfg {
-    unsigned longentropysel;
+    unsigned long entropysel;
     unsigned long    cabacmodel;
 };
 
diff --git a/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device.cpp b/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device.cpp
index 4b6177a35..98274cb8c 100755
--- a/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device.cpp
+++ b/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device.cpp
@@ -1636,7 +1636,7 @@ void venc_dev::venc_config_print()
             multislice.mslice_size);
 
     DEBUG_PRINT_HIGH("ENC_CONFIG: EntropyMode: %d, CabacModel: %d",
-            entropy.longentropysel, entropy.cabacmodel);
+            entropy.entropysel, entropy.cabacmodel);
 
     DEBUG_PRINT_HIGH("ENC_CONFIG: DB-Mode: %d, alpha: %d, Beta: %d",
             dbkfilter.db_mode, dbkfilter.slicealpha_offset,
@@ -2391,7 +2391,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
     DEBUG_PRINT_LOW("venc_set_entropy_config: CABAC = %u level: %u", enable, i_cabac_level);
 
     if (enable &&(codec_profile.profile != VEN_PROFILE_H264_BASELINE)) {
-        entropy_cfg.longentropysel = VEN_ENTROPY_MODEL_CABAC;
+        entropy_cfg.entropysel = VEN_ENTROPY_MODEL_CABAC;
 
         if (i_cabac_level == 0) {
             entropy_cfg.cabacmodel = VEN_CABAC_MODEL_0;
@@ -2412,7 +2412,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
 
 #endif
     } else if (!enable) {
-        entropy_cfg.longentropysel = VEN_ENTROPY_MODEL_CAVLC;
+        entropy_cfg.entropysel = VEN_ENTROPY_MODEL_CAVLC;
     } else {
         DEBUG_PRINT_ERROR("Invalid Entropy mode for Baseline Profile");
         return false;
@@ -2426,7 +2426,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
         return false;
     }
 
-    entropy.longentropysel = entropy_cfg.longentropysel;
+    entropy.entropysel = entropy_cfg.entropysel;
     entropy.cabacmodel  = entropy_cfg.cabacmodel;
     return true;
 }
diff --git a/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device_v4l2.cpp b/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device_v4l2.cpp
index ed49aa4a1..a77a7d3aa 100644
--- a/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device_v4l2.cpp
+++ b/msm8974/mm-video-v4l2/vidc/venc/src/video_encoder_device_v4l2.cpp
@@ -2422,7 +2422,7 @@ void venc_dev::venc_config_print()
             multislice.mslice_size);
 
     DEBUG_PRINT_HIGH("ENC_CONFIG: EntropyMode: %d, CabacModel: %ld",
-            entropy.longentropysel, entropy.cabacmodel);
+            entropy.entropysel, entropy.cabacmodel);
 
     DEBUG_PRINT_HIGH("ENC_CONFIG: DB-Mode: %ld, alpha: %ld, Beta: %ld",
             dbkfilter.db_mode, dbkfilter.slicealpha_offset,
@@ -3807,7 +3807,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
         }
 
         DEBUG_PRINT_LOW("Success IOCTL set control for id=%d, value=%d", control.id, control.value);
-        entropy.longentropysel = control.value;
+        entropy.entropysel = control.value;
 
         if (i_cabac_level == 0) {
             control.value = V4L2_CID_MPEG_VIDC_VIDEO_H264_CABAC_MODEL_0;
@@ -3841,7 +3841,7 @@ bool venc_dev::venc_set_entropy_config(OMX_BOOL enable, OMX_U32 i_cabac_level)
         }
 
         DEBUG_PRINT_LOW("Success IOCTL set control for id=%d, value=%d", control.id, control.value);
-        entropy.longentropysel=control.value;
+        entropy.entropysel=control.value;
     } else {
         DEBUG_PRINT_ERROR("Invalid Entropy mode for Baseline Profile");
         return false;
-- 
2.17.1

