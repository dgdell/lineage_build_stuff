From 72a4df147199c0252bbed8c30862483916841229 Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Wed, 26 Feb 2014 07:43:28 +0100
Subject: [PATCH 027/211] camera: Make some parameter lookups safer

 * Unsupported parameters that return int values will throw an exception
   at the framework level if they aren't supported. Handle this
   better and prevent crashes.

Change-Id: If5a3807dba33167ef95e4ec9e9cbeb15ed4ed591
---
 src/com/android/camera/PhotoModule.java | 66 +++++++++++++++++--------
 1 file changed, 45 insertions(+), 21 deletions(-)

diff --git a/src/com/android/camera/PhotoModule.java b/src/com/android/camera/PhotoModule.java
index d015ccfa5..40c9ea59e 100644
--- a/src/com/android/camera/PhotoModule.java
+++ b/src/com/android/camera/PhotoModule.java
@@ -1826,9 +1826,9 @@ public class PhotoModule
             overrideCameraSettings(flashMode, null, null,
                                    exposureCompensation, touchAfAec,
                                    ParametersWrapper.getAutoExposure(mParameters),
-                                   Integer.toString(ParametersWrapper.getSaturation(mParameters)),
-                                   Integer.toString(ParametersWrapper.getContrast(mParameters)),
-                                   Integer.toString(ParametersWrapper.getSharpness(mParameters)),
+                                   getSaturationSafe(),
+                                   getContrastSafe(),
+                                   getSharpnessSafe(),
                                    colorEffect,
                                    mSceneMode, redeyeReduction, aeBracketing);
             mUI.overrideSettings(CameraSettings.KEY_LONGSHOT,
@@ -1989,9 +1989,9 @@ public class PhotoModule
             overrideCameraSettings(null, whiteBalance, focusMode,
                     exposureCompensation, touchAfAec,
                     ParametersWrapper.getAutoExposure(mParameters),
-                    Integer.toString(ParametersWrapper.getSaturation(mParameters)),
-                    Integer.toString(ParametersWrapper.getContrast(mParameters)),
-                    Integer.toString(ParametersWrapper.getSharpness(mParameters)),
+                    getSaturationSafe(),
+                    getContrastSafe(),
+                    getSharpnessSafe(),
                     colorEffect,
                     sceneMode, redeyeReduction, aeBracketing);
         } else if (mFocusManager.isZslEnabled()) {
@@ -3066,6 +3066,39 @@ public class PhotoModule
         }
     }
 
+    private String getSaturationSafe() {
+        String ret = null;
+        if (CameraUtil.isSupported(mParameters, "saturation") &&
+                CameraUtil.isSupported(mParameters, "max-saturation")) {
+            ret = mPreferences.getString(
+                    CameraSettings.KEY_SATURATION,
+                    mActivity.getString(R.string.pref_camera_saturation_default));
+        }
+        return ret;
+    }
+
+    private String getContrastSafe() {
+        String ret = null;
+        if (CameraUtil.isSupported(mParameters, "contrast") &&
+                CameraUtil.isSupported(mParameters, "max-contrast")) {
+            ret = mPreferences.getString(
+                    CameraSettings.KEY_CONTRAST,
+                    mActivity.getString(R.string.pref_camera_contrast_default));
+        }
+        return ret;
+    }
+
+    private String getSharpnessSafe() {
+        String ret = null;
+        if (CameraUtil.isSupported(mParameters, "sharpness") &&
+                CameraUtil.isSupported(mParameters, "max-sharpness")) {
+            ret = mPreferences.getString(
+                    CameraSettings.KEY_SHARPNESS,
+                    mActivity.getString(R.string.pref_camera_sharpness_default));
+        }
+        return ret;
+    }
+
     /** This can run on a background thread, so don't do UI updates here.*/
     private void qcomUpdateCameraParametersPreference() {
         //qcom Related Parameter update
@@ -3190,11 +3223,8 @@ public class PhotoModule
         }
 
         //Set Saturation
-        if (CameraUtil.isSupported(mParameters, "saturation") &&
-                CameraUtil.isSupported(mParameters, "max-saturation")) {
-            String saturationStr = mPreferences.getString(
-                    CameraSettings.KEY_SATURATION,
-                    mActivity.getString(R.string.pref_camera_saturation_default));
+        String saturationStr = getSaturationSafe();
+        if (saturationStr != null) {
             int saturation = Integer.parseInt(saturationStr);
             Log.v(TAG, "Saturation value =" + saturation);
             if((0 <= saturation) && (saturation <= ParametersWrapper.getMaxSaturation(mParameters))){
@@ -3202,11 +3232,8 @@ public class PhotoModule
             }
         }
         // Set contrast parameter.
-        if (CameraUtil.isSupported(mParameters, "contrast") &&
-                CameraUtil.isSupported(mParameters, "max-contrast")) {
-            String contrastStr = mPreferences.getString(
-                    CameraSettings.KEY_CONTRAST,
-                    mActivity.getString(R.string.pref_camera_contrast_default));
+        String contrastStr = getContrastSafe();
+        if (contrastStr != null) {
             int contrast = Integer.parseInt(contrastStr);
             Log.v(TAG, "Contrast value =" + contrast);
             if((0 <= contrast) && (contrast <= ParametersWrapper.getMaxContrast(mParameters))){
@@ -3214,11 +3241,8 @@ public class PhotoModule
             }
         }
         // Set sharpness parameter
-        if (CameraUtil.isSupported(mParameters, "sharpness") &&
-                CameraUtil.isSupported(mParameters, "max-sharpness")) {
-            String sharpnessStr = mPreferences.getString(
-                    CameraSettings.KEY_SHARPNESS,
-                    mActivity.getString(R.string.pref_camera_sharpness_default));
+        String sharpnessStr = getSharpnessSafe();
+        if (sharpnessStr != null) {
             int sharpness = Integer.parseInt(sharpnessStr) *
                     (ParametersWrapper.getMaxSharpness(mParameters)/MAX_SHARPNESS_LEVEL);
             Log.v(TAG, "Sharpness value =" + sharpness);
-- 
2.17.1

