From 32c6299ffa11d07022bcd0879ccd09016cae41ac Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Wed, 25 Dec 2013 15:10:58 -0800
Subject: [PATCH 049/172] Snap: Remove touch AF/AEC option

Author: Steve Kondik <shade@chemlab.org>
Date:   Wed Dec 25 15:10:58 2013 -0800

    Snap: Remove touch AF/AEC option

     * Drop the use of the touchaf-aec parameter entirely. No camera needs
       this anymore.

    Change-Id: I83154a75e5375901dc6c0fc93aef23637cfdf425

Author: Steve Kondik <steve@cyngn.com>
Date:   Sun Jul 31 19:09:37 2016 -0700

    snap: Always turn touch-af-aec on

     * Most cameras do this by default, but on at least one device
       it starts with the option disabled. This stops AEC from
       updating during touch focus.

    Change-Id: I4bdb6cdbad86f3798c0288d6a32b7e8062e297f3

Change-Id: Ia3f4a312af1b4b7b6e4c0d3f76c09efe798c730c
---
 res/values/qcomarrays.xml                  | 12 -----
 res/values/qcomstrings.xml                 | 10 ----
 res/xml/camera_preferences.xml             |  6 ---
 src/com/android/camera/CameraSettings.java |  7 ---
 src/com/android/camera/PhotoMenu.java      |  3 --
 src/com/android/camera/PhotoModule.java    | 63 ++++++----------------
 6 files changed, 15 insertions(+), 86 deletions(-)

diff --git a/res/values/qcomarrays.xml b/res/values/qcomarrays.xml
index f3b4e1d9e..4285c5097 100755
--- a/res/values/qcomarrays.xml
+++ b/res/values/qcomarrays.xml
@@ -286,18 +286,6 @@
         <item>AE-Bracket</item>
     </string-array>
 
-    <!-- Camera Preferences Touch AF/AEC dialog box entries -->
-    <string-array name="pref_camera_touchafaec_entries">
-        <item>@string/pref_camera_touchafaec_entry_off</item>
-        <item>@string/pref_camera_touchafaec_entry_on</item>
-    </string-array>
-
-    <!-- Do not localize entryvalues -->
-    <string-array name="pref_camera_touchafaec_entryvalues">
-        <item>touch-off</item>
-        <item>touch-on</item>
-    </string-array>
-
     <!-- DIS dialog box entries -->
     <string-array name="pref_camera_dis_entries">
         <item>@string/pref_camera_dis_entry_off</item>
diff --git a/res/values/qcomstrings.xml b/res/values/qcomstrings.xml
index 2ca6731eb..550b59439 100755
--- a/res/values/qcomstrings.xml
+++ b/res/values/qcomstrings.xml
@@ -560,16 +560,6 @@
     <string name="pref_camera_coloreffect_entry_bluetint">Blue tint</string>
     <string name="pref_camera_coloreffect_entry_greentint">Green tint</string>
 
-    <!-- Default Touch AF/AEC setting. Do not translate. -->
-    <string name="pref_camera_touchafaec_default">touch-on</string>
-
-    <!-- Settings screen, Select Touch AF/AEC title -->
-    <string name="pref_camera_touchafaec_title">Touch AF/AEC</string>
-
-    <!-- Settings screen, Touch AF/AEC dialog radio button choices -->
-    <string name="pref_camera_touchafaec_entry_off">Off</string>
-    <string name="pref_camera_touchafaec_entry_on">On</string>
-
     <!-- Select IS title -->
     <string name="pref_camera_dis_title">Image Stabilization</string>
 
diff --git a/res/xml/camera_preferences.xml b/res/xml/camera_preferences.xml
index f62711332..5990ae8ef 100755
--- a/res/xml/camera_preferences.xml
+++ b/res/xml/camera_preferences.xml
@@ -178,12 +178,6 @@
             camera:singleIcon="@drawable/ic_settings_quality"
             camera:entries="@array/pref_camera_jpegquality_entries"
             camera:entryValues="@array/pref_camera_jpegquality_entryvalues" />
-    <ListPreference
-            camera:key="pref_camera_touchafaec_key"
-            camera:defaultValue="@string/pref_camera_touchafaec_default"
-            camera:title="@string/pref_camera_touchafaec_title"
-            camera:entries="@array/pref_camera_touchafaec_entries"
-            camera:entryValues="@array/pref_camera_touchafaec_entryvalues" />
     <IconListPreference
             camera:key="pref_camera_iso_key"
             camera:defaultValue="@string/pref_camera_iso_default"
diff --git a/src/com/android/camera/CameraSettings.java b/src/com/android/camera/CameraSettings.java
index 199cfe74a..2b521a14a 100755
--- a/src/com/android/camera/CameraSettings.java
+++ b/src/com/android/camera/CameraSettings.java
@@ -95,7 +95,6 @@ public class CameraSettings {
     public static final String KEY_COLOR_EFFECT = "pref_camera_coloreffect_key";
     public static final String KEY_VIDEOCAMERA_COLOR_EFFECT = "pref_camera_video_coloreffect_key";
     public static final String KEY_FACE_DETECTION = "pref_camera_facedetection_key";
-    public static final String KEY_TOUCH_AF_AEC = "pref_camera_touchafaec_key";
     public static final String KEY_SELECTABLE_ZONE_AF = "pref_camera_selectablezoneaf_key";
     public static final String KEY_SATURATION = "pref_camera_saturation_key";
     public static final String KEY_CONTRAST = "pref_camera_contrast_key";
@@ -820,7 +819,6 @@ public class CameraSettings {
         ListPreference colorEffect = group.findPreference(KEY_COLOR_EFFECT);
         ListPreference camcorderColorEffect = group.findPreference(KEY_VIDEOCAMERA_COLOR_EFFECT);
         ListPreference faceDetection = group.findPreference(KEY_FACE_DETECTION);
-        ListPreference touchAfAec = group.findPreference(KEY_TOUCH_AF_AEC);
         ListPreference selectableZoneAf = group.findPreference(KEY_SELECTABLE_ZONE_AF);
         ListPreference saturation = group.findPreference(KEY_SATURATION);
         ListPreference contrast = group.findPreference(KEY_CONTRAST);
@@ -915,11 +913,6 @@ public class CameraSettings {
 
         ListPreference videoRotation = group.findPreference(KEY_VIDEO_ROTATION);
 
-        if (touchAfAec != null) {
-            filterUnsupportedOptions(group,
-                    touchAfAec, ParametersWrapper.getSupportedTouchAfAec(mParameters));
-        }
-
         if (!ParametersWrapper.isPowerModeSupported(mParameters) && powerMode != null) {
             removePreference(group, powerMode.getKey());
         }
diff --git a/src/com/android/camera/PhotoMenu.java b/src/com/android/camera/PhotoMenu.java
index 2ff841562..716a8a6d7 100644
--- a/src/com/android/camera/PhotoMenu.java
+++ b/src/com/android/camera/PhotoMenu.java
@@ -232,7 +232,6 @@ public class PhotoMenu extends MenuController
                 CameraSettings.KEY_ZSL,
                 CameraSettings.KEY_TIMER_SOUND_EFFECTS,
                 CameraSettings.KEY_FACE_RECOGNITION,
-                CameraSettings.KEY_TOUCH_AF_AEC,
                 CameraSettings.KEY_SELECTABLE_ZONE_AF,
                 CameraSettings.KEY_PICTURE_FORMAT,
                 CameraSettings.KEY_SATURATION,
@@ -702,7 +701,6 @@ public class PhotoMenu extends MenuController
                 || ((autohdr != null) && autohdr.equals("enable"))) {
             popup1.setPreferenceEnabled(CameraSettings.KEY_FOCUS_MODE, false);
             popup1.setPreferenceEnabled(CameraSettings.KEY_AUTOEXPOSURE, false);
-            popup1.setPreferenceEnabled(CameraSettings.KEY_TOUCH_AF_AEC, false);
             popup1.setPreferenceEnabled(CameraSettings.KEY_SATURATION, false);
             popup1.setPreferenceEnabled(CameraSettings.KEY_CONTRAST, false);
             popup1.setPreferenceEnabled(CameraSettings.KEY_SHARPNESS, false);
@@ -765,7 +763,6 @@ public class PhotoMenu extends MenuController
                 popup1.setPreferenceEnabled(CameraSettings.KEY_REDEYE_REDUCTION, false);
                 popup1.setPreferenceEnabled(CameraSettings.KEY_EXPOSURE, false);
                 popup1.setPreferenceEnabled(CameraSettings.KEY_COLOR_EFFECT, false);
-                popup1.setPreferenceEnabled(CameraSettings.KEY_TOUCH_AF_AEC, false);
                 popup1.setPreferenceEnabled(CameraSettings.KEY_SCENE_MODE, false);
                 popup1.setPreferenceEnabled(CameraSettings.KEY_INSTANT_CAPTURE, false);
                 setPreference(CameraSettings.KEY_CAMERA_HDR, mSettingOff);
diff --git a/src/com/android/camera/PhotoModule.java b/src/com/android/camera/PhotoModule.java
index 60d6b454d..7f95d9b88 100644
--- a/src/com/android/camera/PhotoModule.java
+++ b/src/com/android/camera/PhotoModule.java
@@ -203,7 +203,6 @@ public class PhotoModule
     private boolean mAeLockSupported;
     private boolean mAwbLockSupported;
     private boolean mContinuousFocusSupported;
-    private boolean mTouchAfAecFlag;
     private boolean mLongshotSave = false;
     private boolean mRefocus = false;
     private boolean mLastPhotoTakenWithRefocus = false;
@@ -341,7 +340,6 @@ public class PhotoModule
     private FocusOverlayManager mFocusManager;
 
     private String mSceneMode;
-    private String mCurrTouchAfAec = ParametersWrapper.TOUCH_AF_AEC_ON;
     private String mSavedFlashMode = null;
 
     private final Handler mHandler = new MainHandler();
@@ -868,8 +866,6 @@ public class PhotoModule
             mUI.setPreference(CameraSettings.KEY_ZSL, ParametersWrapper.ZSL_OFF);
             mUI.setPreference(CameraSettings.KEY_FACE_DETECTION,
                     ParametersWrapper.FACE_DETECTION_OFF);
-            mUI.setPreference(CameraSettings.KEY_TOUCH_AF_AEC,
-                    ParametersWrapper.TOUCH_AF_AEC_OFF);
             mUI.setPreference(CameraSettings.KEY_FOCUS_MODE,
                     Parameters.FOCUS_MODE_AUTO);
             mUI.setPreference(CameraSettings.KEY_FLASH_MODE,
@@ -1874,7 +1870,6 @@ public class PhotoModule
     }
 
     private void updateCommonManual3ASettings() {
-        String touchAfAec = ParametersWrapper.TOUCH_AF_AEC_OFF;
         mSceneMode = Parameters.SCENE_MODE_AUTO;
         String flashMode = Parameters.FLASH_MODE_OFF;
         String redeyeReduction = mActivity.getString(R.string.
@@ -1886,7 +1881,7 @@ public class PhotoModule
         String exposureCompensation = CameraSettings.EXPOSURE_DEFAULT_VALUE;
         if (mManual3AEnabled > 0) {
             overrideCameraSettings(flashMode, null, null,
-                                   exposureCompensation, touchAfAec,
+                                   exposureCompensation,
                                    ParametersWrapper.getAutoExposure(mParameters),
                                    getSaturationSafe(),
                                    getContrastSafe(),
@@ -1897,10 +1892,8 @@ public class PhotoModule
                         mActivity.getString(R.string.setting_off_value));
         } else {
             //enable all
-            touchAfAec = mActivity.getString(
-                    R.string.pref_camera_touchafaec_default);
             overrideCameraSettings(null, null, null,
-                                   null, touchAfAec, null,
+                                   null, null,
                                    null, null, null, null,
                                    null, null, null);
             mUI.overrideSettings(CameraSettings.KEY_LONGSHOT, null);
@@ -1934,7 +1927,6 @@ public class PhotoModule
         String focusMode = null;
         String colorEffect = null;
         String exposureCompensation = null;
-        String touchAfAec = null;
         boolean disableLongShot = false;
 
         String ubiFocusOn = mActivity.getString(R.string.
@@ -2017,7 +2009,7 @@ public class PhotoModule
             exposureCompensation = CameraSettings.EXPOSURE_DEFAULT_VALUE;
 
             overrideCameraSettings(null, null, focusMode,
-                                   exposureCompensation, touchAfAec, null,
+                                   exposureCompensation, null,
                                    null, null, null, colorEffect,
                                    sceneMode, redeyeReduction, aeBracketing);
             disableLongShot = true;
@@ -2046,10 +2038,9 @@ public class PhotoModule
             }
             exposureCompensation =
                 Integer.toString(mParameters.getExposureCompensation());
-            touchAfAec = mCurrTouchAfAec;
 
             overrideCameraSettings(null, whiteBalance, focusMode,
-                    exposureCompensation, touchAfAec,
+                    exposureCompensation,
                     ParametersWrapper.getAutoExposure(mParameters),
                     getSaturationSafe(),
                     getContrastSafe(),
@@ -2059,7 +2050,7 @@ public class PhotoModule
         } else if (mFocusManager.isZslEnabled()) {
             focusMode = mParameters.getFocusMode();
             overrideCameraSettings(null, null, focusMode,
-                                   exposureCompensation, touchAfAec, null,
+                                   exposureCompensation, null,
                                    null, null, null, colorEffect,
                                    sceneMode, redeyeReduction, aeBracketing);
         } else {
@@ -2067,7 +2058,7 @@ public class PhotoModule
                 updateCommonManual3ASettings();
             } else {
                 overrideCameraSettings(null, null, focusMode,
-                                       exposureCompensation, touchAfAec, null,
+                                       exposureCompensation, null,
                                        null, null, null, colorEffect,
                                        sceneMode, redeyeReduction, aeBracketing);
             }
@@ -2128,17 +2119,16 @@ public class PhotoModule
 
     private void overrideCameraSettings(final String flashMode,
             final String whiteBalance, final String focusMode,
-            final String exposureMode, final String touchMode,
-            final String autoExposure, final String saturation,
-            final String contrast, final String sharpness,
-            final String coloreffect, final String sceneMode,
-            final String redeyeReduction, final String aeBracketing) {
+            final String exposureMode, final String autoExposure,
+            final String saturation, final String contrast,
+            final String sharpness, final String coloreffect,
+            final String sceneMode, final String redeyeReduction,
+            final String aeBracketing) {
         mUI.overrideSettings(
                 CameraSettings.KEY_FLASH_MODE, flashMode,
                 CameraSettings.KEY_WHITE_BALANCE, whiteBalance,
                 CameraSettings.KEY_FOCUS_MODE, focusMode,
                 CameraSettings.KEY_EXPOSURE, exposureMode,
-                CameraSettings.KEY_TOUCH_AF_AEC, touchMode,
                 CameraSettings.KEY_AUTOEXPOSURE, autoExposure,
                 CameraSettings.KEY_SATURATION, saturation,
                 CameraSettings.KEY_CONTRAST, contrast,
@@ -2845,10 +2835,6 @@ public class PhotoModule
                 || mCameraState == PREVIEW_STOPPED) {
             return;
         }
-        //If Touch AF/AEC is disabled in UI, return
-        if(this.mTouchAfAecFlag == false) {
-            return;
-        }
         // Check if metering area or focus area is supported.
         if (!mFocusAreaSupported && !mMeteringAreaSupported) return;
         if (! mFocusManager.getPreviewRect().contains(x, y)) return;
@@ -3219,29 +3205,10 @@ public class PhotoModule
         String optizoomOn = mActivity.getString(R.string
                 .pref_camera_advanced_feature_value_optizoom_on);
 
-        if (Parameters.SCENE_MODE_AUTO.equals(mSceneMode) ||
-            CameraUtil.SCENE_MODE_HDR.equals(mSceneMode) ||
-            optizoomOn.equals(mSceneMode)) {
-            // Set Touch AF/AEC parameter.
-            String touchAfAec = mPreferences.getString(
-                 CameraSettings.KEY_TOUCH_AF_AEC,
-                 mActivity.getString(R.string.pref_camera_touchafaec_default));
-            if (CameraUtil.isSupported(touchAfAec,
-                    ParametersWrapper.getSupportedTouchAfAec(mParameters))) {
-                mCurrTouchAfAec = touchAfAec;
-                ParametersWrapper.setTouchAfAec(mParameters, touchAfAec);
-            }
-        } else {
-            ParametersWrapper.setTouchAfAec(mParameters, ParametersWrapper.TOUCH_AF_AEC_OFF);
-            mFocusManager.resetTouchFocus();
-        }
-        try {
-            if(ParametersWrapper.getTouchAfAec(mParameters).equals(ParametersWrapper.TOUCH_AF_AEC_ON))
-                this.mTouchAfAecFlag = true;
-            else
-                this.mTouchAfAecFlag = false;
-        } catch(Exception e){
-            Log.e(TAG, "Handled NULL pointer Exception");
+        // Set Touch AF/AEC parameter.
+        if (CameraUtil.isSupported(mParameters.TOUCH_AF_AEC_ON,
+                mParameters.getSupportedTouchAfAec())) {
+            mParameters.setTouchAfAec(mParameters.TOUCH_AF_AEC_ON);
         }
 
         // Set Picture Format
-- 
2.17.1

