From 2aaf68cca7cd791ee78419b6e61f6b12a3c251da Mon Sep 17 00:00:00 2001
From: Emilian Peev <epeevs@codeaurora.org>
Date: Wed, 3 Jun 2015 16:34:59 +0300
Subject: [PATCH 121/173] Snapdragon Camera: Use consistent API for preview fps
 reset

 Instead of using preview fps range API during
 preview framerate reset use the fixed fps API.
 This is to avoid any inconsistent behavior that
 can be triggered when using both APIs from
 MediaRecorder and Snapdragon application side.

Change-Id: Ib5251d8ea4d697db9bdea4e5ebf20606b286f54f
---
 src/com/android/camera/VideoModule.java     | 8 +++-----
 src/com/android/camera/util/CameraUtil.java | 9 +++++++++
 2 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/src/com/android/camera/VideoModule.java b/src/com/android/camera/VideoModule.java
index b6f1531af..1968ca870 100644
--- a/src/com/android/camera/VideoModule.java
+++ b/src/com/android/camera/VideoModule.java
@@ -2261,11 +2261,9 @@ public class VideoModule implements CameraModule,
                 startPreview();
             } else {
                 if (is4KEnabled()) {
-                    int[] fpsRange = CameraUtil.getMaxPreviewFpsRange(mParameters);
-                    if (fpsRange.length > 0) {
-                        mParameters.setPreviewFpsRange(
-                                fpsRange[Parameters.PREVIEW_FPS_MIN_INDEX],
-                                fpsRange[Parameters.PREVIEW_FPS_MAX_INDEX]);
+                    int fps = CameraUtil.getMaxPreviewFps(mParameters);
+                    if (fps > 0) {
+                        mParameters.setPreviewFrameRate(fps);
                     } else {
                         mParameters.setPreviewFrameRate(30);
                     }
diff --git a/src/com/android/camera/util/CameraUtil.java b/src/com/android/camera/util/CameraUtil.java
index 1813b11a7..490087537 100755
--- a/src/com/android/camera/util/CameraUtil.java
+++ b/src/com/android/camera/util/CameraUtil.java
@@ -1226,6 +1226,15 @@ public class CameraUtil {
         return new int[0];
     }
 
+    public static int getMaxPreviewFps(Parameters params) {
+        List<Integer> frameRates = params.getSupportedPreviewFrameRates();
+        if (frameRates != null && frameRates.size() > 0) {
+            // The list is sorted. Return the last element.
+            return frameRates.get(frameRates.size() - 1).intValue();
+        }
+        return -1;
+    }
+
     private static class ImageFileNamer {
         private final SimpleDateFormat mFormat;
 
-- 
2.17.1

