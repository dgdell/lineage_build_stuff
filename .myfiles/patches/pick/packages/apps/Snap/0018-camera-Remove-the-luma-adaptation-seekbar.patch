From 5f7c7b237a14defb34dd62853427d48fcf779744 Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Sat, 7 Dec 2013 06:27:51 -0800
Subject: [PATCH 018/206] camera: Remove the luma-adaptation seekbar

 * Not useful for any hardware I have encountered.

Change-Id: I93cca2b3bf907cc01946a55111de9eb883475d24
---
 res/layout/photo_module.xml             | 10 ---
 src/com/android/camera/PhotoModule.java | 83 -------------------------
 2 files changed, 93 deletions(-)

diff --git a/res/layout/photo_module.xml b/res/layout/photo_module.xml
index 11c07d5d2..9d767a126 100755
--- a/res/layout/photo_module.xml
+++ b/res/layout/photo_module.xml
@@ -45,16 +45,6 @@
         android:orientation="vertical"
         android:layout_width="match_parent"
         android:layout_height="match_parent">
-        <ProgressBar
-            style="?android:attr/progressBarStyleHorizontal"
-            android:id="@+id/progress"
-            android:orientation="vertical"
-            android:layout_width="200dip"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="14dip"
-            android:layout_marginBottom="14dip"
-            android:layout_marginLeft="30dip"
-            android:layout_marginRight="30dip" />
         <com.android.camera.GraphView
             android:id="@+id/graph_view"
             android:layout_width="200dip"
diff --git a/src/com/android/camera/PhotoModule.java b/src/com/android/camera/PhotoModule.java
index 8494d08c0..a0b3400d0 100644
--- a/src/com/android/camera/PhotoModule.java
+++ b/src/com/android/camera/PhotoModule.java
@@ -64,7 +64,6 @@ import android.view.SurfaceHolder;
 import android.view.View;
 import android.view.WindowManager;
 import android.widget.Toast;
-import android.widget.ProgressBar;
 import android.widget.SeekBar;
 import android.widget.SeekBar.OnSeekBarChangeListener;
 import android.widget.LinearLayout;
@@ -118,8 +117,6 @@ import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.os.SystemProperties;
-import java.util.Collections;
-import java.util.Formatter;
 
 public class PhotoModule
         implements CameraModule,
@@ -135,7 +132,6 @@ public class PhotoModule
     private static final String TAG = "CAM_PhotoModule";
 
    //QCom data members
-    public static boolean mBrightnessVisible = false;
     private static final int MAX_SHARPNESS_LEVEL = 6;
     private boolean mRestartPreview = false;
     private int mSnapshotMode;
@@ -242,12 +238,6 @@ public class PhotoModule
     private static final String PERSISI_BOKEH_DEBUG = "persist.camera.bokeh.debug";
     private static final boolean PERSIST_BOKEH_DEBUG_CHECK =
             android.os.SystemProperties.getBoolean(PERSISI_BOKEH_DEBUG, false);
-    private static final int MINIMUM_BRIGHTNESS = 0;
-    private static final int MAXIMUM_BRIGHTNESS = 6;
-    private static final int DEFAULT_BRIGHTNESS = 3;
-    private int mbrightness = 3;
-    private int mbrightness_step = 1;
-    private ProgressBar brightnessProgressBar;
     // Constant from android.hardware.Camera.Parameters
     private static final String KEY_PICTURE_FORMAT = "picture-format";
     private static final String KEY_QC_RAW_PICUTRE_SIZE = "raw-size";
@@ -617,20 +607,8 @@ public class PhotoModule
         mLocationManager = new LocationManager(mActivity, this);
         mSensorManager = (SensorManager)(mActivity.getSystemService(Context.SENSOR_SERVICE));
 
-        brightnessProgressBar = (ProgressBar)mRootView.findViewById(R.id.progress);
-
         mBokehTipText = (TextView) mRootView.findViewById(R.id.bokeh_tip_text);
 
-        if (brightnessProgressBar instanceof SeekBar) {
-            SeekBar seeker = (SeekBar) brightnessProgressBar;
-            seeker.setOnSeekBarChangeListener(mSeekListener);
-        }
-        brightnessProgressBar.setMax(MAXIMUM_BRIGHTNESS);
-        mbrightness = mPreferences.getInt(
-                 CameraSettings.KEY_BRIGHTNESS,
-                 DEFAULT_BRIGHTNESS);
-        brightnessProgressBar.setProgress(mbrightness);
-        brightnessProgressBar.setVisibility(View.INVISIBLE);
         Storage.setSaveSDCard(
             mPreferences.getString(CameraSettings.KEY_CAMERA_SAVEPATH, "0").equals("1"));
     }
@@ -1680,16 +1658,6 @@ public class PhotoModule
         }
     }
 
-    private OnSeekBarChangeListener mSeekListener = new OnSeekBarChangeListener() {
-        public void onStartTrackingTouch(SeekBar bar) {
-            // no support
-        }
-        public void onProgressChanged(SeekBar bar, int progress, boolean fromtouch) {
-        }
-        public void onStopTrackingTouch(SeekBar bar) {
-        }
-    };
-
     private OnSeekBarChangeListener mBlurDegreeListener = new OnSeekBarChangeListener() {
         public void onStartTrackingTouch(SeekBar bar) {
         }
@@ -2989,54 +2957,6 @@ public class PhotoModule
                     onShutterButtonClick();
                 }
                 return true;
-        case KeyEvent.KEYCODE_DPAD_LEFT:
-            if (!CameraUtil.isSupported(mParameters, "luma-adaptation")) {
-                break;
-            }
-            if ( (mCameraState != PREVIEW_STOPPED) && (mFocusManager != null) &&
-                  (mFocusManager.getCurrentFocusState() != mFocusManager.STATE_FOCUSING) &&
-                  (mFocusManager.getCurrentFocusState() != mFocusManager.STATE_FOCUSING_SNAP_ON_FINISH) ) {
-                if (mbrightness > MINIMUM_BRIGHTNESS) {
-                    mbrightness-=mbrightness_step;
-                    synchronized (mCameraDevice) {
-                        /* Set the "luma-adaptation" parameter */
-                        mParameters = mCameraDevice.getParameters();
-                        mParameters.set("luma-adaptation", String.valueOf(mbrightness));
-                        mCameraDevice.setParameters(mParameters);
-                    }
-                }
-                brightnessProgressBar.setProgress(mbrightness);
-                Editor editor = mPreferences.edit();
-                editor.putInt(CameraSettings.KEY_BRIGHTNESS, mbrightness);
-                editor.apply();
-                brightnessProgressBar.setVisibility(View.INVISIBLE);
-                mBrightnessVisible = true;
-            }
-            break;
-           case KeyEvent.KEYCODE_DPAD_RIGHT:
-            if (!CameraUtil.isSupported(mParameters, "luma-adaptation")) {
-                break;
-            }
-            if ( (mCameraState != PREVIEW_STOPPED) && (mFocusManager != null) &&
-                  (mFocusManager.getCurrentFocusState() != mFocusManager.STATE_FOCUSING) &&
-                  (mFocusManager.getCurrentFocusState() != mFocusManager.STATE_FOCUSING_SNAP_ON_FINISH) ) {
-                if (mbrightness < MAXIMUM_BRIGHTNESS) {
-                    mbrightness+=mbrightness_step;
-                    synchronized (mCameraDevice) {
-                        /* Set the "luma-adaptation" parameter */
-                        mParameters = mCameraDevice.getParameters();
-                        mParameters.set("luma-adaptation", String.valueOf(mbrightness));
-                        mCameraDevice.setParameters(mParameters);
-                    }
-                }
-                brightnessProgressBar.setProgress(mbrightness);
-                Editor editor = mPreferences.edit();
-                editor.putInt(CameraSettings.KEY_BRIGHTNESS, mbrightness);
-                editor.apply();
-                brightnessProgressBar.setVisibility(View.INVISIBLE);
-                mBrightnessVisible = true;
-            }
-            break;
             case KeyEvent.KEYCODE_DPAD_CENTER:
                 // If we get a dpad center event without any focused view, move
                 // the focus to the shutter button and press it.
@@ -3303,9 +3223,6 @@ public class PhotoModule
     /** This can run on a background thread, so don't do UI updates here.*/
     private void qcomUpdateCameraParametersPreference() {
         //qcom Related Parameter update
-        //Set Brightness.
-        mParameters.set("luma-adaptation", String.valueOf(mbrightness));
-
         String longshot_enable = mPreferences.getString(
                 CameraSettings.KEY_LONGSHOT,
                 mActivity.getString(R.string.pref_camera_longshot_default));
-- 
2.17.1

