From 17c99f0faf778c7fc991fd8dc44348cd552286e8 Mon Sep 17 00:00:00 2001
From: Michael Bestas <mikeioannina@gmail.com>
Date: Tue, 28 Jan 2014 00:44:30 +0200
Subject: [PATCH 040/206] Camera: Handle keys only while in app

Thanks to Lars Greiss (SlimRoms)

Change-Id: I63f757d25260fba4683f494f8b4daf178a2b4e13
---
 src/com/android/camera/CameraActivity.java      | 11 ++++++++++-
 src/com/android/camera/PhotoModule.java         | 17 +++++++----------
 .../android/camera/WideAnglePanoramaModule.java |  8 ++++++++
 3 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/src/com/android/camera/CameraActivity.java b/src/com/android/camera/CameraActivity.java
index 66198cfe3..53c3f0223 100755
--- a/src/com/android/camera/CameraActivity.java
+++ b/src/com/android/camera/CameraActivity.java
@@ -221,6 +221,7 @@ public class CameraActivity extends Activity
     private final Object mStorageSpaceLock = new Object();
     private long mStorageSpaceBytes = Storage.LOW_STORAGE_THRESHOLD_BYTES;
     private boolean mSecureCamera;
+    private boolean mInCameraApp = true;
     // Keep track of powershutter state
     public static boolean mPowerShutter = false;
     private int mLastRawOrientation;
@@ -2014,7 +2015,7 @@ public class CameraActivity extends Activity
         if (!CameraUtil.hasCameraKey()) {
             mPowerShutter = val.equals(CameraSettings.VALUE_ON);
         }
-        if (mPowerShutter /*TODO: && mShowCameraAppView*/) {
+        if (mPowerShutter && mInCameraApp) {
             getWindow().addPrivateFlags(
                     WindowManager.LayoutParams.PRIVATE_FLAG_PREVENT_POWER_KEY);
         } else {
@@ -2081,6 +2082,10 @@ public class CameraActivity extends Activity
         return mForceReleaseCamera;
     }
 
+    public boolean isInCameraApp() {
+        return mInCameraApp;
+    }
+
     @Override
     public void onModuleSelected(int moduleIndex) {
         boolean cam2on = PersistUtil.getCamera2Mode();
@@ -2368,6 +2373,10 @@ public class CameraActivity extends Activity
      */
     private void setPreviewControlsVisibility(boolean showControls) {
         mCurrentModule.onPreviewFocusChanged(showControls);
+
+        // controls are only shown when the camera app is active
+        // so we can assume to fetch this information from here
+        mInCameraApp = showControls;
     }
 
     // Accessor methods for getting latency times used in performance testing
diff --git a/src/com/android/camera/PhotoModule.java b/src/com/android/camera/PhotoModule.java
index 60137188c..9855332d2 100644
--- a/src/com/android/camera/PhotoModule.java
+++ b/src/com/android/camera/PhotoModule.java
@@ -2949,13 +2949,14 @@ public class PhotoModule
 
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
-        /*TODO: if (!mActivity.mShowCameraAppView) {
+        // Do not handle any key if the activity is
+        // not in active camera/video mode
+        if (!mActivity.isInCameraApp()) {
             return false;
-        }*/
+        }
         switch (keyCode) {
             case KeyEvent.KEYCODE_VOLUME_UP:
-                if (/*TODO: mActivity.isInCameraApp() &&*/ mFirstTimeInitialized
-                    && (mUI.mMenuInitialized)) {
+                if (mFirstTimeInitialized && (mUI.mMenuInitialized)) {
                     if (!CameraActivity.mPowerShutter && !CameraUtil.hasCameraKey()) {
                         onShutterButtonFocus(true);
                     } else {
@@ -2964,8 +2965,7 @@ public class PhotoModule
                 }
                 return true;
             case KeyEvent.KEYCODE_VOLUME_DOWN:
-                if (/*TODO: mActivity.isInCameraApp() &&*/ mFirstTimeInitialized
-                    && (mUI.mMenuInitialized)) {
+                if (mFirstTimeInitialized && (mUI.mMenuInitialized)) {
                     if (!CameraActivity.mPowerShutter && !CameraUtil.hasCameraKey()) {
                         onShutterButtonFocus(true);
                     } else {
@@ -2974,7 +2974,7 @@ public class PhotoModule
                 }
                 return true;
             case KeyEvent.KEYCODE_FOCUS:
-                if (/*TODO: mActivity.isInCameraApp() &&*/ mFirstTimeInitialized) {
+                if (mFirstTimeInitialized) {
                     if (event.getRepeatCount() == 0) {
                         onShutterButtonFocus(true);
                     }
@@ -3009,9 +3009,6 @@ public class PhotoModule
 
     @Override
     public boolean onKeyUp(int keyCode, KeyEvent event) {
-        /*TODO: if (!mActivity.mShowCameraAppView) {
-            return false;
-        }*/
         switch (keyCode) {
             case KeyEvent.KEYCODE_VOLUME_UP:
             case KeyEvent.KEYCODE_VOLUME_DOWN:
diff --git a/src/com/android/camera/WideAnglePanoramaModule.java b/src/com/android/camera/WideAnglePanoramaModule.java
index 65e18a17d..d3c4ff163 100644
--- a/src/com/android/camera/WideAnglePanoramaModule.java
+++ b/src/com/android/camera/WideAnglePanoramaModule.java
@@ -1244,6 +1244,14 @@ public class WideAnglePanoramaModule
 
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
+        // Do not handle any key if the activity is paused
+        // or not in active camera/video mode
+        if (mPaused) {
+            return true;
+        } else if (!mActivity.isInCameraApp()) {
+            return false;
+        }
+
         switch (keyCode) {
             case KeyEvent.KEYCODE_VOLUME_UP:
             case KeyEvent.KEYCODE_VOLUME_DOWN:
-- 
2.17.1

