From 44c145e0f3d0736d52b7e61bd57fb4ea0e078503 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca020400@lineageos.org>
Date: Sat, 7 Oct 2017 18:33:53 +0200
Subject: [PATCH 59/67] Gallery: Kill media effect dialog on movies

* It doesn't work and we have an external app for that

Change-Id: I90d4f548d76b7e73815bb811de0377de7c23708e
---
 res/drawable-hdpi/knob.png                    | Bin 5435 -> 0 bytes
 res/drawable-hdpi/knob_toggle_off.png         | Bin 3071 -> 0 bytes
 res/drawable-hdpi/knob_toggle_on.png          | Bin 3218 -> 0 bytes
 res/drawable-hdpi/switch_thumb_activated.png  | Bin 2594 -> 0 bytes
 .../switch_thumb_activated_holo_dark.9.png    | Bin 549 -> 0 bytes
 res/drawable-hdpi/switch_thumb_off.png        | Bin 2549 -> 0 bytes
 .../switch_thumb_activated_holo_dark.9.png    | Bin 351 -> 0 bytes
 .../switch_thumb_activated_holo_dark.9.png    | Bin 653 -> 0 bytes
 res/drawable/switch_inner_holo_dark.xml       |  22 --
 res/layout/audio_effects_dialog.xml           |  98 -----
 res/layout/audio_effects_title.xml            |  62 ----
 res/layout/knob.xml                           |  75 ----
 res/values/attrs.xml                          |   4 -
 res/values/codeaurora_strings.xml             |   8 -
 .../android/gallery3d/app/MovieActivity.java  | 285 +--------------
 .../android/gallery3d/app/MoviePlayer.java    |   4 -
 src/com/android/gallery3d/ui/Knob.java        | 338 ------------------
 17 files changed, 1 insertion(+), 895 deletions(-)
 delete mode 100755 res/drawable-hdpi/knob.png
 delete mode 100644 res/drawable-hdpi/knob_toggle_off.png
 delete mode 100644 res/drawable-hdpi/knob_toggle_on.png
 delete mode 100755 res/drawable-hdpi/switch_thumb_activated.png
 delete mode 100644 res/drawable-hdpi/switch_thumb_activated_holo_dark.9.png
 delete mode 100755 res/drawable-hdpi/switch_thumb_off.png
 delete mode 100644 res/drawable-mdpi/switch_thumb_activated_holo_dark.9.png
 delete mode 100644 res/drawable-xhdpi/switch_thumb_activated_holo_dark.9.png
 delete mode 100644 res/drawable/switch_inner_holo_dark.xml
 delete mode 100644 res/layout/audio_effects_dialog.xml
 delete mode 100644 res/layout/audio_effects_title.xml
 delete mode 100644 res/layout/knob.xml
 delete mode 100644 src/com/android/gallery3d/ui/Knob.java

diff --git a/res/drawable-hdpi/knob.png b/res/drawable-hdpi/knob.png
deleted file mode 100755
index 213c2001097b68e32b1299f7b24cf5b392b0d117..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5435
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

diff --git a/res/drawable-hdpi/knob_toggle_off.png b/res/drawable-hdpi/knob_toggle_off.png
deleted file mode 100644
index a89595e2b2a9bff076c918128770645a75f3b147..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3071
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
N002ovPDHLkV1kSixj6s;

diff --git a/res/drawable-hdpi/knob_toggle_on.png b/res/drawable-hdpi/knob_toggle_on.png
deleted file mode 100644
index ab8d3d7e399086f1b6ba2bcc4f2c0e74a6ef92e1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3218
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
Eg1;pF{{R30

diff --git a/res/drawable-hdpi/switch_thumb_activated.png b/res/drawable-hdpi/switch_thumb_activated.png
deleted file mode 100755
index 5d6c7d8ebdcb5d12b5155a9d1e2fecc37f7247cb..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2594
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
S`d7!&Uz-cj-Qf&AB;{}H&`SLP

diff --git a/res/drawable-hdpi/switch_thumb_activated_holo_dark.9.png b/res/drawable-hdpi/switch_thumb_activated_holo_dark.9.png
deleted file mode 100644
index 9c5147efc96653173a7a2c46864144a5486c678a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 549
zcmeAS@N?(olHy`uVBq!ia0vp^0YI$7!3HEheY6(`QY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`y+R7>|3pIEG|2zP-KMi#br>*vI!do7|eWv%0zluTZ%0Q)Jt+4V-pu
z`46ijR<E7gJJnT6diDY#6%V~P$5g5<({-8@ntC6v;XJqAXX4F2H|O{o8oIC~^QiIE
ze*WbWt8uY>`pPM@lzzGXv()nPUlDh$yPKQ)blpY+ZQIwIO*St!=&G82wb`er@8AzU
zk;+}Ub7Ox@oqPB2&!Cqo%wd|#m#>h#FS-7&g<Za#*}D0D{Xq)@H<c$?y9%^>o~_EO
zpJ4gCsOnAiu>~<-!fevB^ObioUzjvYRjNRuwRrJTiw6GL?;X86)^7HA+^}fgi;IfY
zY-yc}&;LC+uFu#|%oeF-b$@cr=l>4OMwt$3yeF10&NNY&%$9Pg!AEL>C-H)23pO_t
zABbObNT@g6THDI4Y^!pPI>&86hu0sxTlSP~>})VG<FFPy<fmlmWtQ-FS+~wkrwwI2
zGj}o^JH1@N(#hz}qRYDu{ml(8n)0GffuZ@-JsY!a=7AqhHx=(wx>3?F-A(vBf9;9f
zhm%SU@T;{;#tS~VKE2d7YURr`mjACzGoK$`U+<xG$hs|fZbeB%hc+;t89ZJ6T-G@y
GGywpXV&x?O

diff --git a/res/drawable-hdpi/switch_thumb_off.png b/res/drawable-hdpi/switch_thumb_off.png
deleted file mode 100755
index 733cef674883b1ee95f511d573511fb232ad2a9a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2549
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

diff --git a/res/drawable-mdpi/switch_thumb_activated_holo_dark.9.png b/res/drawable-mdpi/switch_thumb_activated_holo_dark.9.png
deleted file mode 100644
index 3d7c236abb742d7a9d7cb1e72d17bcf30890c82e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 351
zcmeAS@N?(olHy`uVBq!ia0vp^W<V^*!3HGLcfD-`QY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`y+R7#TfX977^n-_9`fJM19fdf%dNDa%n_QS}8&AB$uL9?9LoBjmfT
zam5OUM=UERI0<b!DP?2g;P~>U%NkSvsNC;==a=2#S#?VAg8lOi^45KmC(p6lH+$N(
zmeaeBfBuzHb62Uf%Z+tcRPN!ohp!&(Rz0qzcK-BVpZld!_Lu)`yz1aGYsCTHwoIe$
zwTIWWZ8ClKM<_b<P#zNp+eW3(h5y^SpJGRq&ksJ+HPC1+nz4ZI!^Hz>l4}gZ44=NN
zJNNQtN22M*X^aaxv*W~zdv0%@zqd)kh--n;-H7cDfA;OZbbM;kdBITEC7)H~ex0-y
d4G!JMu=K3o%<rm&|9~OH;OXk;vd$@?2>_**ngRd-

diff --git a/res/drawable-xhdpi/switch_thumb_activated_holo_dark.9.png b/res/drawable-xhdpi/switch_thumb_activated_holo_dark.9.png
deleted file mode 100644
index ca48bd866c2de51b9266bb8ed99a48f0a7257713..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 653
zcmeAS@N?(olHy`uVBq!ia0vp^SwL*X!3HEF)}KiLQY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`y+RnDjke978JRyuGu(OE^&E_{aNmXXco-_=+Vvh;ScGl6KUVKX53C
z)qDPdOVc-gW7T0jSSHB5H86rDG1c01gLTp**~e%87V89ca_^q{T<%ZpEtB+5sn5=d
ze76#8Eap3QQgZ+7eGU^h>-BeZc!-Cu`s2CKmT|8CQriQ6)AQSJi>q1xjVl%8Tl&qW
zUf{^J_Q&$~U;FFJ-ODs_FO0DN6|&EGoo(gL(x0cUx;NLocNFkRnxr)S`3B|yF}+Z}
zudBYE-(UOp)0Yn)_qJZLSXAXMdpv7-_Mg0rM->l~#e?JG%TgcSSrOi+ed3+bwDpX8
zF3)l`4%wJf=NHawKW!0@;d-}h&n4ZHV!9p|T=HQQVVHDGV^{W+{M7=Bn@>OM{61ZS
z>Bx%*(O16)|6Hqo+iv-Vxl`9acQcqG$dk(AEO{`1>dajWo5WlAJhXmKKd-K;P|^M%
z^n2T@ylv~!i*s`3C1h8({4-d1;tiWWXU1%%(?6NM=B%^qO4B&_Z#DCgJpRQeV{`b9
zYpmYG=g{N$VfD=9!1oUy&t}$mw<FAUC#wU$d0zaXud}ybkoPIJNn(HdilhCv{D+@^
zc^a<Ia<LZKuy3_F!<19SbKDqQ7-Sn3*tD-aEcY)w$Hm3vW|0^BmFRex|1ag$lz#Aj
Yu-f9b_?h=YV0vQkboFyt=akR{00j*acmMzZ

diff --git a/res/drawable/switch_inner_holo_dark.xml b/res/drawable/switch_inner_holo_dark.xml
deleted file mode 100644
index c0b00bb83..000000000
--- a/res/drawable/switch_inner_holo_dark.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2012 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_enabled="false" android:drawable="@drawable/switch_thumb_disabled_holo_dark" />
-    <item android:state_pressed="true"  android:drawable="@drawable/switch_thumb_pressed_holo_dark" />
-    <item android:state_checked="true"  android:drawable="@drawable/switch_thumb_activated_holo_dark" />
-    <item                               android:drawable="@drawable/switch_thumb_holo_dark" />
-</selector>
diff --git a/res/layout/audio_effects_dialog.xml b/res/layout/audio_effects_dialog.xml
deleted file mode 100644
index ac7c85b82..000000000
--- a/res/layout/audio_effects_dialog.xml
+++ /dev/null
@@ -1,98 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-Copyright (c) 2013, 2016, The Linux Foundation. All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above
-      copyright notice, this list of conditions and the following
-      disclaimer in the documentation and/or other materials provided
-      with the distribution.
-    * Neither the name of The Linux Foundation nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
-WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
-BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
-BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
-WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
-IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:custom="http://schemas.android.com/apk/res/org.codeaurora.gallery"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical"
-    android:gravity="center">
-
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:gravity="center_horizontal"
-        android:layout_marginStart="12dp"
-        android:layout_marginEnd="12dp">
-
-        <RelativeLayout
-            android:id="@+id/aEffectsPanel"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="12dp"
-            android:layout_marginBottom="10dp"
-            android:gravity="center_vertical">
-
-            <RelativeLayout
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginStart="24dp"
-                android:layout_weight="1">
-                <com.android.gallery3d.ui.Knob
-                    android:id="@+id/bBStrengthKnob"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_centerHorizontal="true"
-                    custom:foreground="@drawable/knob"/>
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_centerHorizontal="true"
-                    android:layout_below="@id/bBStrengthKnob"
-                    android:layout_marginTop="12dp"
-                    android:textColor="@android:color/black"
-                    android:text="@string/bass_boost_strength"/>
-            </RelativeLayout>
-
-            <RelativeLayout
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginEnd="12dp"
-                android:layout_alignParentRight="true"
-                android:layout_weight="1">
-                <com.android.gallery3d.ui.Knob
-                    android:id="@+id/vIStrengthKnob"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_centerHorizontal="true"
-                    custom:foreground="@drawable/knob"/>
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_below="@id/vIStrengthKnob"
-                    android:layout_marginTop="12dp"
-                    android:layout_centerHorizontal="true"
-                    android:textColor="@android:color/black"
-                    android:text="@string/virtualizer_strength"/>
-            </RelativeLayout>
-        </RelativeLayout>
-    </LinearLayout>
-</LinearLayout>
diff --git a/res/layout/audio_effects_title.xml b/res/layout/audio_effects_title.xml
deleted file mode 100644
index 6822fdf2b..000000000
--- a/res/layout/audio_effects_title.xml
+++ /dev/null
@@ -1,62 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-Copyright (c) 2014, 2016, The Linux Foundation. All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above
-      copyright notice, this list of conditions and the following
-      disclaimer in the documentation and/or other materials provided
-      with the distribution.
-    * Neither the name of The Linux Foundation nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
-WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
-BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
-BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
-WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
-IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:custom="http://schemas.android.com/apk/res/com.android.gallery3d"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="horizontal"
-    android:gravity="left|center_vertical">
-
-    <TextView
-        android:text="@string/audio_effects"
-        android:gravity="left|center_vertical"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="24dp"
-        android:layout_marginTop="10dp"
-        android:layout_marginBottom="10dp"
-        android:textColor="@android:color/black"
-        android:textSize="20dp" />
-
-    <View
-        android:layout_width="0dp"
-        android:layout_height="match_parent"
-        android:layout_weight="1" />
-
-    <ToggleButton
-        android:id="@+id/audio_effects_switch"
-        android:textOn=""
-        android:textOff=""
-        android:background="@null"
-        android:gravity="center_vertical|right"
-        android:layout_width="72dp"
-        android:layout_height="34dp"/>
-</LinearLayout>
diff --git a/res/layout/knob.xml b/res/layout/knob.xml
deleted file mode 100644
index d504774e7..000000000
--- a/res/layout/knob.xml
+++ /dev/null
@@ -1,75 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-Copyright (c) 2013, The Linux Foundation. All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above
-      copyright notice, this list of conditions and the following
-      disclaimer in the documentation and/or other materials provided
-      with the distribution.
-    * Neither the name of The Linux Foundation nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
-WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
-BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
-BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
-WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
-IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--->
-
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content">
-
-    <ImageView
-        android:id="@+id/knob_foreground"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" />
-    <ImageView
-        android:id="@+id/knob_toggle_on"
-        android:layout_gravity="center_horizontal|center_vertical"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/knob_toggle_on"
-        android:visibility="gone" />
-    <ImageView
-        android:id="@+id/knob_toggle_off"
-        android:layout_gravity="center_horizontal|center_vertical"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/knob_toggle_off"
-        android:visibility="gone" />
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_gravity="center_horizontal"
-        android:orientation="vertical"
-        android:gravity="center_horizontal">
-
-        <TextView
-            android:id="@+id/knob_value"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:visibility="gone" />
-        <TextView
-            android:id="@+id/knob_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:ellipsize="marquee"
-            android:visibility="gone" />
-    </LinearLayout>
-
-</FrameLayout>
diff --git a/res/values/attrs.xml b/res/values/attrs.xml
index 52ac78ff9..7dde02172 100644
--- a/res/values/attrs.xml
+++ b/res/values/attrs.xml
@@ -37,10 +37,6 @@
         <attr name="largeIcons" format="reference" />
         <attr name="images" format="reference" />
     </declare-styleable>
-    <declare-styleable name="Knob">
-        <attr name="label" format="string" />
-        <attr name="foreground" format="integer" />
-    </declare-styleable>
     <declare-styleable name="FillColor">
         <attr name="fillColorSelector" format="color" />
     </declare-styleable>
diff --git a/res/values/codeaurora_strings.xml b/res/values/codeaurora_strings.xml
index 4aa1ba275..b6f5a739c 100644
--- a/res/values/codeaurora_strings.xml
+++ b/res/values/codeaurora_strings.xml
@@ -92,17 +92,9 @@ IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
         <item quantity="other">%1$d videos</item>
     </plurals>
 
-    <!-- The label for the bass boost knob of the audio effects dialog. -->
-    <string name="bass_boost_strength">Bass boost</string>
 
-    <!-- The label for the 3d effect knob of the audio effects dialog. -->
-    <string name="virtualizer_strength">3D effect</string>
 
-    <!-- The label for the audio effects menu. -->
-    <string name="audio_effects">Audio effects</string>
 
-    <!-- Toast if user attempts to control audio effects without headphones plugged in. -->
-    <string name="headset_plug">Plug in headphones for these effects.</string>
 
     <!-- Toast message for share items -->
     <string name="cannot_share_items">Max selected items for share is 300</string>
diff --git a/src/com/android/gallery3d/app/MovieActivity.java b/src/com/android/gallery3d/app/MovieActivity.java
index ca6eeffcf..4bfc13a7a 100755
--- a/src/com/android/gallery3d/app/MovieActivity.java
+++ b/src/com/android/gallery3d/app/MovieActivity.java
@@ -19,19 +19,14 @@ package com.android.gallery3d.app;
 import android.annotation.TargetApi;
 import android.app.ActionBar;
 import android.app.ActionBar.OnMenuVisibilityListener;
-import android.app.AlertDialog;
 import android.app.KeyguardManager;
-import android.bluetooth.BluetoothClass;
-import android.bluetooth.BluetoothDevice;
 import android.content.AsyncQueryHandler;
 import android.content.BroadcastReceiver;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.res.Configuration;
-import android.content.SharedPreferences;
 import android.content.pm.ActivityInfo;
 import android.database.Cursor;
 //import android.drm.DrmHelper;
@@ -39,44 +34,30 @@ import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.ColorDrawable;
-import android.media.AudioManager;
-import android.media.audiofx.AudioEffect;
-import android.media.audiofx.AudioEffect.Descriptor;
-import android.media.audiofx.BassBoost;
-import android.media.audiofx.Virtualizer;
 import android.media.MediaPlayer;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
-import android.os.SystemProperties;
 import android.provider.MediaStore;
 import android.provider.OpenableColumns;
-import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
-import android.widget.CompoundButton;
 import android.widget.ImageView;
-import android.widget.ToggleButton;
-import android.widget.Toast;
 
 import org.codeaurora.gallery.R;
 import com.android.gallery3d.common.ApiHelper;
 import com.android.gallery3d.common.Utils;
-import com.android.gallery3d.ui.Knob;
 import org.codeaurora.gallery3d.ext.IActivityHooker;
 import org.codeaurora.gallery3d.ext.IMovieItem;
 import org.codeaurora.gallery3d.ext.MovieItem;
 import org.codeaurora.gallery3d.ext.MovieUtils;
 import org.codeaurora.gallery3d.video.ExtensionHelper;
 import org.codeaurora.gallery3d.video.MovieTitleHelper;
-import android.bluetooth.BluetoothAdapter;
-import android.bluetooth.BluetoothProfile;
 
 /**
  * This activity plays a video from a specified URI.
@@ -101,27 +82,8 @@ public class MovieActivity extends AbstractPermissionActivity {
     private boolean     mFinishOnCompletion;
     private Uri         mUri;
     private ImageView   mLiveImg;
+    private boolean     mUserPresentReceived = false;
 
-    private static final short BASSBOOST_MAX_STRENGTH   = 1000;
-    private static final short VIRTUALIZER_MAX_STRENGTH = 1000;
-
-    private boolean mIsHeadsetOn = false;
-    private boolean mVirtualizerSupported = false;
-    private boolean mBassBoostSupported = false;
-    private boolean mUserPresentReceived = false;
-
-    static enum Key {
-        global_enabled, bb_strength, virt_strength
-    };
-
-    private BassBoost   mBassBoostEffect;
-    private Virtualizer mVirtualizerEffect;
-    private AlertDialog mEffectDialog;
-    private ToggleButton mSwitch;
-    private Knob        mBassBoostKnob;
-    private Knob        mVirtualizerKnob;
-
-    private SharedPreferences   mPrefs;
     private IMovieItem          mMovieItem;
     private IActivityHooker     mMovieHooker;
     private KeyguardManager     mKeyguardManager;
@@ -132,39 +94,6 @@ public class MovieActivity extends AbstractPermissionActivity {
 
     private Intent mShareIntent;
 
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(final Context context, final Intent intent) {
-            final String action = intent.getAction();
-            final AudioManager audioManager =
-                (AudioManager) getSystemService(Context.AUDIO_SERVICE);
-            if (action.equals(Intent.ACTION_HEADSET_PLUG)) {
-                mIsHeadsetOn = (intent.getIntExtra("state", 0) == 1)
-                        || audioManager.isBluetoothA2dpOn();
-            } else if (action.equals(BluetoothDevice.ACTION_ACL_CONNECTED)
-                    || action.equals(BluetoothDevice.ACTION_ACL_DISCONNECTED)) {
-                final BluetoothClass bc =  ((BluetoothDevice)
-                        intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE))
-                        .getBluetoothClass();
-                if (bc == null) return;
-                final int deviceClass = bc.getDeviceClass();
-                if ((deviceClass == BluetoothClass.Device.AUDIO_VIDEO_HEADPHONES)
-                        || (deviceClass == BluetoothClass.Device.AUDIO_VIDEO_WEARABLE_HEADSET)) {
-                    mIsHeadsetOn = action.equals(BluetoothDevice.ACTION_ACL_CONNECTED)
-                            || audioManager.isWiredHeadsetOn();
-                }
-            } else if (action.equals(AudioManager.ACTION_AUDIO_BECOMING_NOISY)) {
-                mIsHeadsetOn = false;
-            }
-            if (mEffectDialog != null) {
-                if (!mIsHeadsetOn && !isBtHeadsetConnected() && mEffectDialog.isShowing()) {
-                    mEffectDialog.dismiss();
-                    showHeadsetPlugToast();
-                }
-            }
-        }
-    };
-
     @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
     private void setSystemUiVisibility(View rootView) {
         if (ApiHelper.HAS_VIEW_SYSTEM_UI_FLAG_LAYOUT_STABLE) {
@@ -193,8 +122,6 @@ public class MovieActivity extends AbstractPermissionActivity {
         initializeActionBar(intent);
         mFinishOnCompletion = intent.getBooleanExtra(
                 MediaStore.EXTRA_FINISH_ON_COMPLETION, true);
-        mPrefs = getSharedPreferences(getApplicationContext().getPackageName(),
-                Context.MODE_PRIVATE);
         mSavedInstanceState = savedInstanceState;
         if (isPermissionGranted()) {
             init(intent, rootView, savedInstanceState);
@@ -243,23 +170,11 @@ public class MovieActivity extends AbstractPermissionActivity {
         // But for the performance (and battery), we remove the background here.
         win.setBackgroundDrawable(null);
         initMovieHooker(intent, savedInstanceState);
-        if (!SystemProperties.getBoolean("persist.sys.galley.disable_audioeffects", false)) {
-            // Determine available/supported effects
-            final Descriptor[] effects = AudioEffect.queryEffects();
-            for (final Descriptor effect : effects) {
-                if (effect.type.equals(AudioEffect.EFFECT_TYPE_VIRTUALIZER)) {
-                    mVirtualizerSupported = true;
-                } else if (effect.type.equals(AudioEffect.EFFECT_TYPE_BASS_BOOST)) {
-                    mBassBoostSupported = true;
-                }
-            }
-        }
 
         mPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
             @Override
             public void onPrepared(MediaPlayer mp) {
                 mPlayer.onPrepared(mp);
-                initEffects(mp.getAudioSessionId());
             }
         });
     }
@@ -374,14 +289,6 @@ public class MovieActivity extends AbstractPermissionActivity {
             });
         }
 
-        final MenuItem mi = menu.add(R.string.audio_effects);
-        mi.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
-            @Override
-            public boolean onMenuItemClick(MenuItem item) {
-                onAudioEffectsMenuItemClick();
-                return true;
-            }
-        });
         if (isPermissionGranted()) {
             refreshShareProvider(mMovieItem);
             mMovieHooker.onCreateOptionsMenu(menu);
@@ -405,159 +312,6 @@ public class MovieActivity extends AbstractPermissionActivity {
         return true;
     }
 
-    private void onAudioEffectsMenuItemClick() {
-        if (!mIsHeadsetOn && !isBtHeadsetConnected()) {
-            showHeadsetPlugToast();
-        } else {
-            LayoutInflater factory = LayoutInflater.from(this);
-            final View content = factory.inflate(R.layout.audio_effects_dialog, null);
-            final View title = factory.inflate(R.layout.audio_effects_title, null);
-
-            boolean enabled = mPrefs.getBoolean(Key.global_enabled.toString(), false);
-
-            mSwitch = (ToggleButton) title.findViewById(R.id.audio_effects_switch);
-            mSwitch.setChecked(enabled);
-            mSwitch.setButtonDrawable(enabled ?
-                    R.drawable.switch_thumb_activated : R.drawable.switch_thumb_off);
-
-            mSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-                @Override
-                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                    mSwitch.setButtonDrawable(isChecked ?
-                            R.drawable.switch_thumb_activated : R.drawable.switch_thumb_off);
-                    if(mBassBoostEffect != null) {
-                        mBassBoostEffect.setEnabled(isChecked);
-                    }
-                    if(mVirtualizerEffect != null) {
-                        mVirtualizerEffect.setEnabled(isChecked);
-                    }
-                    mBassBoostKnob.setEnabled(isChecked);
-                    mVirtualizerKnob.setEnabled(isChecked);
-                }
-            });
-
-            mBassBoostKnob = (Knob) content.findViewById(R.id.bBStrengthKnob);
-            mBassBoostKnob.setEnabled(enabled);
-            mBassBoostKnob.setMax(BASSBOOST_MAX_STRENGTH);
-            mBassBoostKnob.setValue(mPrefs.getInt(Key.bb_strength.toString(), 0));
-            mBassBoostKnob.setOnKnobChangeListener(new Knob.OnKnobChangeListener() {
-                @Override
-                public void onValueChanged(Knob knob, int value, boolean fromUser) {
-                    if(mBassBoostEffect != null) {
-                        mBassBoostEffect.setStrength((short) value);
-                    }
-                }
-
-                @Override
-                public boolean onSwitchChanged(Knob knob, boolean enabled) {
-                    return false;
-                }
-            });
-
-            mVirtualizerKnob = (Knob) content.findViewById(R.id.vIStrengthKnob);
-            mVirtualizerKnob.setEnabled(enabled);
-            mVirtualizerKnob.setMax(VIRTUALIZER_MAX_STRENGTH);
-            mVirtualizerKnob.setValue(mPrefs.getInt(Key.virt_strength.toString(), 0));
-            mVirtualizerKnob.setOnKnobChangeListener(new Knob.OnKnobChangeListener() {
-                @Override
-                public void onValueChanged(Knob knob, int value, boolean fromUser) {
-                    if(mVirtualizerEffect != null) {
-                        mVirtualizerEffect.setStrength((short) value);
-                    }
-                }
-
-                @Override
-                public boolean onSwitchChanged(Knob knob, boolean enabled) {
-                    return false;
-                }
-            });
-
-            mEffectDialog = new AlertDialog.Builder(MovieActivity.this,
-                    AlertDialog.THEME_DEVICE_DEFAULT_LIGHT)
-                .setCustomTitle(title)
-                .setView(content)
-                .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        SharedPreferences.Editor editor = mPrefs.edit();
-                        editor.putBoolean(Key.global_enabled.toString(), mSwitch.isChecked());
-                        editor.putInt(Key.bb_strength.toString(), mBassBoostKnob.getValue());
-                        editor.putInt(Key.virt_strength.toString(),
-                                mVirtualizerKnob.getValue());
-                        editor.commit();
-                    }
-                })
-                .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        boolean enabled = mPrefs.getBoolean(Key.global_enabled.toString(), false);
-                        if(mBassBoostEffect != null) {
-                            mBassBoostEffect.setStrength((short)
-                                    mPrefs.getInt(Key.bb_strength.toString(), 0));
-                            mBassBoostEffect.setEnabled(enabled);
-                        }
-                        if(mVirtualizerEffect != null) {
-                            mVirtualizerEffect.setStrength((short)
-                                mPrefs.getInt(Key.virt_strength.toString(), 0));
-                            mVirtualizerEffect.setEnabled(enabled);
-                        }
-                    }
-                })
-                .setCancelable(false)
-                .create();
-            mEffectDialog.show();
-        }
-    }
-
-    public void initEffects(int sessionId) {
-        // Singleton instance
-        if ((mBassBoostEffect == null) && mBassBoostSupported) {
-            mBassBoostEffect = new BassBoost(0, sessionId);
-        }
-
-        if ((mVirtualizerEffect == null) && mVirtualizerSupported) {
-            mVirtualizerEffect = new Virtualizer(0, sessionId);
-        }
-
-        if (mIsHeadsetOn || isBtHeadsetConnected()) {
-            if (mPrefs.getBoolean(Key.global_enabled.toString(), false)) {
-                if (mBassBoostSupported) {
-                    mBassBoostEffect.setStrength((short)
-                        mPrefs.getInt(Key.bb_strength.toString(), 0));
-                    mBassBoostEffect.setEnabled(true);
-                }
-                if (mVirtualizerSupported) {
-                    mVirtualizerEffect.setStrength((short)
-                        mPrefs.getInt(Key.virt_strength.toString(), 0));
-                    mVirtualizerEffect.setEnabled(true);
-                }
-            } else {
-                if (mBassBoostSupported) {
-                    mBassBoostEffect.setStrength((short)
-                        mPrefs.getInt(Key.bb_strength.toString(), 0));
-                }
-                if (mVirtualizerSupported) {
-                    mVirtualizerEffect.setStrength((short)
-                        mPrefs.getInt(Key.virt_strength.toString(), 0));
-                }
-            }
-        }
-
-    }
-
-    public void releaseEffects() {
-        if (mBassBoostEffect != null) {
-            mBassBoostEffect.setEnabled(false);
-            mBassBoostEffect.release();
-            mBassBoostEffect = null;
-        }
-        if (mVirtualizerEffect != null) {
-            mVirtualizerEffect.setEnabled(false);
-            mVirtualizerEffect.release();
-            mVirtualizerEffect = null;
-        }
-    }
-
     private Intent createShareIntent() {
         Intent intent = new Intent(Intent.ACTION_SEND);
         intent.setType("video/*");
@@ -581,13 +335,6 @@ public class MovieActivity extends AbstractPermissionActivity {
         return mMovieHooker.onOptionsItemSelected(item);
     }
 
-    public void showHeadsetPlugToast() {
-        final Toast toast = Toast.makeText(getApplicationContext(), R.string.headset_plug,
-                Toast.LENGTH_LONG);
-        toast.setGravity(Gravity.CENTER, toast.getXOffset() / 2, toast.getYOffset() / 2);
-        toast.show();
-    }
-
     @Override
     public void onStart() {
         if (!isPermissionGranted()) {
@@ -620,14 +367,6 @@ public class MovieActivity extends AbstractPermissionActivity {
             super.onPause();
             return;
         }
-        // Audio track will be deallocated for local video playback,
-        // thus recycle effect here.
-        releaseEffects();
-        try {
-            unregisterReceiver(mReceiver);
-        } catch (IllegalArgumentException e) {
-            // Do nothing
-        }
         mResumed = false;
         if (mControlResumed && mPlayer != null) {
             mControlResumed = !mPlayer.onPause();
@@ -638,21 +377,12 @@ public class MovieActivity extends AbstractPermissionActivity {
 
     @Override
     public void onResume() {
-        if ((mVirtualizerSupported) || (mBassBoostSupported)) {
-            final IntentFilter intentFilter = new IntentFilter(Intent.ACTION_HEADSET_PLUG);
-            intentFilter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED);
-            intentFilter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);
-            intentFilter.addAction(AudioManager.ACTION_AUDIO_BECOMING_NOISY);
-            registerReceiver(mReceiver, intentFilter);
-        }
-
         mResumed = true;
         if (isPermissionGranted()) {
             invalidateOptionsMenu();
             if (!isKeyguardLocked() && !mControlResumed && mPlayer != null) {
                 mPlayer.onResume();
                 mControlResumed = true;
-                //initEffects(mPlayer.getAudioSessionId());
             }
             enhanceActionBar();
             super.onResume();
@@ -673,18 +403,6 @@ public class MovieActivity extends AbstractPermissionActivity {
         }
     }
 
-    private boolean isBtHeadsetConnected() {
-        BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
-        if (adapter != null)
-            {
-            if ((BluetoothProfile.STATE_CONNECTED == adapter.getProfileConnectionState(BluetoothProfile.HEADSET))
-            || (BluetoothProfile.STATE_CONNECTED == adapter.getProfileConnectionState(BluetoothProfile.A2DP))) {
-            return true;
-           }
-        }
-        return false;
-    }
-
     @Override
     public void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
@@ -697,7 +415,6 @@ public class MovieActivity extends AbstractPermissionActivity {
             super.onDestroy();
             return;
         }
-        releaseEffects();
         mPlayer.onDestroy();
         super.onDestroy();
         mMovieHooker.onDestroy();
diff --git a/src/com/android/gallery3d/app/MoviePlayer.java b/src/com/android/gallery3d/app/MoviePlayer.java
index cd715332c..4d5348b27 100755
--- a/src/com/android/gallery3d/app/MoviePlayer.java
+++ b/src/com/android/gallery3d/app/MoviePlayer.java
@@ -311,7 +311,6 @@ public class MoviePlayer implements
             mHasPaused = true;
             doStartVideo(true, mVideoPosition, mVideoLastDuration,false);
             mVideoView.start();
-            mActivityContext.initEffects(mVideoView.getAudioSessionId());
         } else {
             mTState = TState.PLAYING;
             mFirstBePlayed = true;
@@ -604,7 +603,6 @@ public class MoviePlayer implements
         }
         if (start) {
             mVideoView.start();
-            mActivityContext.initEffects(mVideoView.getAudioSessionId());
         }
         //we may start video from stopVideo,
         //this case, we should reset canReplay flag according canReplay and loop
@@ -1124,7 +1122,6 @@ public class MoviePlayer implements
                 mVideoView.stopPlayback();
                 mVideoView.setVisibility(View.INVISIBLE);
                 clearVideoInfo();
-                mActivityContext.releaseEffects();
                 mMovieItem = next;
                 mActivityContext.refreshMovieInfo(mMovieItem);
                 doStartVideo(false, 0, 0);
@@ -1160,7 +1157,6 @@ public class MoviePlayer implements
             mVideoView.setResumed(false);
             mVideoView.setVisibility(View.INVISIBLE);
             clearVideoInfo();
-            mActivityContext.releaseEffects();
             mFirstBePlayed = false;
             mController.setCanReplay(true);
             mController.showEnded();
diff --git a/src/com/android/gallery3d/ui/Knob.java b/src/com/android/gallery3d/ui/Knob.java
deleted file mode 100644
index cab7c6f8d..000000000
--- a/src/com/android/gallery3d/ui/Knob.java
+++ /dev/null
@@ -1,338 +0,0 @@
-/*
- * Copyright (c) 2013, 2016, The Linux Foundation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met:
- *     * Redistributions of source code must retain the above copyright
- *       notice, this list of conditions and the following disclaimer.
- *       * Redistributions in binary form must reproduce the above
- *         copyright notice, this list of conditions and the following
- *         disclaimer in the documentation and/or other materials provided
- *         with the distribution.
- *       * Neither the name of The Linux Foundation nor the names of its
- *         contributors may be used to endorse or promote products derived
- *         from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
- * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
- * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
- * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
- * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-package com.android.gallery3d.ui;
-
-import android.content.Context;
-import android.content.res.Resources;
-import android.content.res.TypedArray;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.RectF;
-import android.util.AttributeSet;
-import android.util.TypedValue;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-import java.lang.Math;
-
-import org.codeaurora.gallery.R;
-
-public class Knob extends FrameLayout {
-    private static final int STROKE_WIDTH = 6;
-    private static final float TEXT_SIZE = 0.20f;
-    private static final float TEXT_PADDING = 0.31f;
-    private static final float LABEL_PADDING = 0.05f;
-    private static final float LABEL_SIZE = 0.09f;
-    private static final float LABEL_WIDTH = 0.80f;
-    private static final float INDICATOR_RADIUS = 0.38f;
-
-    public interface OnKnobChangeListener {
-        void onValueChanged(Knob knob, int value, boolean fromUser);
-        boolean onSwitchChanged(Knob knob, boolean on);
-    }
-
-    private OnKnobChangeListener mOnKnobChangeListener = null;
-
-    private float mProgress = 0.0f;
-    private int mMax = 100;
-    private boolean mOn = false;
-    private boolean mEnabled = false;
-
-    private int mHighlightColor;
-    private int mLowlightColor;
-    private int mDisabledColor;
-
-    private final Paint mPaint;
-
-    private final TextView mLabelTV;
-    private final TextView mProgressTV;
-
-    private final ImageView mKnobOn;
-    private final ImageView mKnobOff;
-
-    private float mLastX;
-    private float mLastY;
-    private boolean mMoved;
-
-    private int mWidth = 0;
-    private int mIndicatorWidth = 0;
-
-    private RectF mRectF;
-
-    public Knob(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-
-        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.Knob, 0, 0);
-
-        String label;
-        int foreground;
-        try {
-            label = a.getString(R.styleable.Knob_label);
-            foreground = a.getResourceId(R.styleable.Knob_foreground, R.drawable.knob);
-        } finally {
-            a.recycle();
-        }
-
-        LayoutInflater li = (LayoutInflater)
-                context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        li.inflate(R.layout.knob, this, true);
-
-        Resources res = getResources();
-        mHighlightColor = res.getColor(R.color.highlight);
-        mLowlightColor = res.getColor(R.color.lowlight);
-        mDisabledColor = res.getColor(R.color.disabled_knob);
-
-        ((ImageView) findViewById(R.id.knob_foreground)).setImageResource(foreground);
-        ((ImageView) findViewById(R.id.knob_foreground)).setAlpha(0.35f);
-
-        mLabelTV = (TextView) findViewById(R.id.knob_label);
-        mLabelTV.setText(label);
-        mProgressTV = (TextView) findViewById(R.id.knob_value);
-
-        mKnobOn = (ImageView) findViewById(R.id.knob_toggle_on);
-        mKnobOff = (ImageView) findViewById(R.id.knob_toggle_off);
-
-        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-        mPaint.setColor(mHighlightColor);
-        mPaint.setStrokeWidth(STROKE_WIDTH);
-        mPaint.setStrokeCap(Paint.Cap.ROUND);
-        mPaint.setStyle(Paint.Style.STROKE);
-
-        setWillNotDraw(false);
-    }
-
-    public Knob(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public Knob(Context context) {
-        this(context, null);
-    }
-
-    public void setOnKnobChangeListener(OnKnobChangeListener l) {
-        mOnKnobChangeListener = l;
-    }
-
-    public void setValue(int value) {
-        if (mMax != 0) {
-            setProgress(((float) value) / mMax);
-        }
-    }
-
-    public int getValue() {
-        return (int) (mProgress * mMax);
-    }
-
-    public void setProgress(float progress) {
-        setProgress(progress, false);
-    }
-
-    private void setProgressText(boolean on) {
-        if (on) {
-            mProgressTV.setText((int) (mProgress * 100) + "%");
-        } else {
-            mProgressTV.setText("--%");
-        }
-    }
-
-    private void setProgress(float progress, boolean fromUser) {
-        if (progress > 1.0f) {
-            progress = 1.0f;
-        }
-        if (progress < 0.0f) {
-            progress = 0.0f;
-        }
-        mProgress = progress;
-        setProgressText(mOn && mEnabled);
-
-        invalidate();
-
-        if (mOnKnobChangeListener != null) {
-            mOnKnobChangeListener.onValueChanged(this, (int) (progress * mMax), fromUser);
-        }
-    }
-
-    public void setMax(int max) {
-        mMax = max;
-    }
-
-    public float getProgress() {
-        return mProgress;
-    }
-
-    private void drawIndicator() {
-        float r = mWidth * INDICATOR_RADIUS;
-        ImageView view = mOn ? mKnobOn : mKnobOff;
-        view.setTranslationX((float) Math.sin(mProgress * 2 * Math.PI) * r - mIndicatorWidth / 2);
-        view.setTranslationY((float) -Math.cos(mProgress * 2 * Math.PI) * r - mIndicatorWidth / 2);
-    }
-
-    @Override
-    public void setEnabled(boolean enabled) {
-        mEnabled = enabled;
-        setOn(enabled);
-    }
-
-    public void setOn(boolean on) {
-        if (on != mOn) {
-            mOn = on;
-        }
-        on = on && mEnabled;
-        mLabelTV.setTextColor(on ? mHighlightColor : mDisabledColor);
-        mProgressTV.setTextColor(on ? mHighlightColor : mDisabledColor);
-        setProgressText(on);
-        mPaint.setColor(on ? mHighlightColor : mDisabledColor);
-        mKnobOn.setVisibility(on ? View.VISIBLE : View.GONE);
-        mKnobOff.setVisibility(on ? View.GONE : View.VISIBLE);
-        invalidate();
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        drawIndicator();
-        if (mOn && mEnabled) {
-            canvas.drawArc(mRectF, -90, mProgress * 360, false, mPaint);
-        }
-    }
-
-    @Override
-    protected void onSizeChanged(int w, int h, int oldW, int oldH) {
-        int size = w > h ? h : w;
-        mWidth = size;
-        mIndicatorWidth = mKnobOn.getWidth();
-
-        int diff;
-        if (w > h) {
-            diff = (w - h) / 2;
-            mRectF = new RectF(STROKE_WIDTH + diff, STROKE_WIDTH,
-                    w - STROKE_WIDTH - diff, h - STROKE_WIDTH);
-        } else {
-            diff = (h - w) / 2;
-            mRectF = new RectF(STROKE_WIDTH, STROKE_WIDTH + diff,
-                    w - STROKE_WIDTH, h - STROKE_WIDTH - diff);
-        }
-
-        mProgressTV.setTextSize(TypedValue.COMPLEX_UNIT_PX, size * TEXT_SIZE);
-        mProgressTV.setPadding(0, (int) (size * TEXT_PADDING), 0, 0);
-        mProgressTV.setVisibility(View.VISIBLE);
-        mLabelTV.setTextSize(TypedValue.COMPLEX_UNIT_PX, size * LABEL_SIZE);
-        mLabelTV.setPadding(0, (int) (size * LABEL_PADDING), 0, 0);
-        mLabelTV.setLayoutParams(new LinearLayout.LayoutParams((int) (w * LABEL_WIDTH),
-                    LayoutParams.WRAP_CONTENT));
-        mLabelTV.setVisibility(View.VISIBLE);
-    }
-
-    @Override
-    public boolean onInterceptTouchEvent(MotionEvent ev) {
-        return true;
-    }
-
-    @Override
-    public boolean onTouchEvent(MotionEvent event) {
-        switch (event.getAction()) {
-            case MotionEvent.ACTION_DOWN:
-                if (mOn) {
-                    mLastX = event.getX();
-                    mLastY = event.getY();
-                    getParent().requestDisallowInterceptTouchEvent(true);
-                }
-                break;
-            case MotionEvent.ACTION_MOVE:
-                if (mOn) {
-                    float x = event.getX();
-                    float y = event.getY();
-                    float center = mWidth / 2;
-                    if (mMoved || (x - center) * (x - center) + (y - center) * (y - center)
-                            > center * center / 4) {
-                        float delta = getDelta(x, y);
-                        setProgress(mProgress + delta / 360, true);
-                        mMoved = true;
-                    }
-                    mLastX = x;
-                    mLastY = y;
-                }
-                break;
-            case MotionEvent.ACTION_UP:
-                if (!mMoved) {
-                    if (mOnKnobChangeListener == null
-                            || mOnKnobChangeListener.onSwitchChanged(this, !mOn)) {
-                        if (mEnabled) {
-                            setOn(!mOn);
-                            invalidate();
-                        }
-                    }
-                }
-                mMoved = false;
-                break;
-            default:
-                break;
-        }
-        return true;
-    }
-
-    private float getDelta(float x, float y) {
-        float angle = angle(x, y);
-        float oldAngle = angle(mLastX, mLastY);
-        float delta = angle - oldAngle;
-        if (delta >= 180.0f) {
-            delta = -oldAngle;
-        } else if (delta <= -180.0f) {
-            delta = 360 - oldAngle;
-        }
-        return delta;
-    }
-
-    private float angle(float x, float y) {
-        float center = mWidth / 2.0f;
-        x -= center;
-        y -= center;
-
-        if (x == 0.0f) {
-            if (y > 0.0f) {
-                return 180.0f;
-            } else {
-                return 0.0f;
-            }
-        }
-
-        float angle = (float) (Math.atan(y / x) / Math.PI * 180.0);
-        if (x > 0.0f) {
-            angle += 90;
-        } else {
-            angle += 270;
-        }
-        return angle;
-    }
-}
-- 
2.17.1

