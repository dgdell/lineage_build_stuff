From 72b8836e9b91c5ee13f3b0adc44f21b239850101 Mon Sep 17 00:00:00 2001
From: Michael Bestas <mkbestas@lineageos.org>
Date: Sun, 23 Sep 2018 20:23:01 +0300
Subject: [PATCH 05/67] Revert "Fix compiling errors in P"

* A proper fix will be used instead

This reverts commit c4f92dd33b72fe8af5664dc589e07c9fb15efc3e.

Change-Id: I04c9f9d9e05cfc7942eea46ab56f7f94510ba63e
---
 src/com/android/gallery3d/glrenderer/BitmapTexture.java   | 4 ++--
 src/com/android/gallery3d/glrenderer/GLES11Canvas.java    | 8 ++++----
 src/com/android/gallery3d/glrenderer/GLPaint.java         | 4 ++--
 src/com/android/gallery3d/glrenderer/ResourceTexture.java | 4 ++--
 src/com/android/gallery3d/glrenderer/UploadedTexture.java | 6 +++---
 5 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/com/android/gallery3d/glrenderer/BitmapTexture.java b/src/com/android/gallery3d/glrenderer/BitmapTexture.java
index b81722bc3..100b0b3b9 100644
--- a/src/com/android/gallery3d/glrenderer/BitmapTexture.java
+++ b/src/com/android/gallery3d/glrenderer/BitmapTexture.java
@@ -18,7 +18,7 @@ package com.android.gallery3d.glrenderer;
 
 import android.graphics.Bitmap;
 
-//import junit.framework.Assert;
+import junit.framework.Assert;
 
 // BitmapTexture is a texture whose content is specified by a fixed Bitmap.
 //
@@ -34,7 +34,7 @@ public class BitmapTexture extends UploadedTexture {
 
     public BitmapTexture(Bitmap bitmap, boolean hasBorder) {
         super(hasBorder);
-        //Assert.assertTrue(bitmap != null && !bitmap.isRecycled());
+        Assert.assertTrue(bitmap != null && !bitmap.isRecycled());
         mContentBitmap = bitmap;
     }
 
diff --git a/src/com/android/gallery3d/glrenderer/GLES11Canvas.java b/src/com/android/gallery3d/glrenderer/GLES11Canvas.java
index 4e6437bee..38ee50a5e 100755
--- a/src/com/android/gallery3d/glrenderer/GLES11Canvas.java
+++ b/src/com/android/gallery3d/glrenderer/GLES11Canvas.java
@@ -28,7 +28,7 @@ import com.android.gallery3d.common.ApiHelper;
 import com.android.gallery3d.common.Utils;
 import com.android.gallery3d.util.IntArray;
 
-//import junit.framework.Assert;
+import junit.framework.Assert;
 
 import java.nio.Buffer;
 import java.nio.ByteBuffer;
@@ -127,7 +127,7 @@ public class GLES11Canvas implements GLCanvas {
 
     @Override
     public void setSize(int width, int height) {
-        //Assert.assertTrue(width >= 0 && height >= 0);
+        Assert.assertTrue(width >= 0 && height >= 0);
 
         if (mTargetTexture == null) {
             mScreenWidth = width;
@@ -155,7 +155,7 @@ public class GLES11Canvas implements GLCanvas {
 
     @Override
     public void setAlpha(float alpha) {
-        //Assert.assertTrue(alpha >= 0 && alpha <= 1);
+        Assert.assertTrue(alpha >= 0 && alpha <= 1);
         mAlpha = alpha;
     }
 
@@ -166,7 +166,7 @@ public class GLES11Canvas implements GLCanvas {
 
     @Override
     public void multiplyAlpha(float alpha) {
-        //Assert.assertTrue(alpha >= 0 && alpha <= 1);
+        Assert.assertTrue(alpha >= 0 && alpha <= 1);
         mAlpha *= alpha;
     }
 
diff --git a/src/com/android/gallery3d/glrenderer/GLPaint.java b/src/com/android/gallery3d/glrenderer/GLPaint.java
index 89b9d5953..16b220690 100644
--- a/src/com/android/gallery3d/glrenderer/GLPaint.java
+++ b/src/com/android/gallery3d/glrenderer/GLPaint.java
@@ -16,7 +16,7 @@
 
 package com.android.gallery3d.glrenderer;
 
-//import junit.framework.Assert;
+import junit.framework.Assert;
 
 public class GLPaint {
     private float mLineWidth = 1f;
@@ -31,7 +31,7 @@ public class GLPaint {
     }
 
     public void setLineWidth(float width) {
-        //Assert.assertTrue(width >= 0);
+        Assert.assertTrue(width >= 0);
         mLineWidth = width;
     }
 
diff --git a/src/com/android/gallery3d/glrenderer/ResourceTexture.java b/src/com/android/gallery3d/glrenderer/ResourceTexture.java
index c760c728d..eb8e8a517 100644
--- a/src/com/android/gallery3d/glrenderer/ResourceTexture.java
+++ b/src/com/android/gallery3d/glrenderer/ResourceTexture.java
@@ -20,7 +20,7 @@ import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 
-//import junit.framework.Assert;
+import junit.framework.Assert;
 
 // ResourceTexture is a texture whose Bitmap is decoded from a resource.
 // By default ResourceTexture is not opaque.
@@ -30,7 +30,7 @@ public class ResourceTexture extends UploadedTexture {
     protected final int mResId;
 
     public ResourceTexture(Context context, int resId) {
-        //Assert.assertNotNull(context);
+        Assert.assertNotNull(context);
         mContext = context;
         mResId = resId;
         setOpaque(false);
diff --git a/src/com/android/gallery3d/glrenderer/UploadedTexture.java b/src/com/android/gallery3d/glrenderer/UploadedTexture.java
index 52d40ca46..fdbc5634b 100644
--- a/src/com/android/gallery3d/glrenderer/UploadedTexture.java
+++ b/src/com/android/gallery3d/glrenderer/UploadedTexture.java
@@ -20,7 +20,7 @@ import android.graphics.Bitmap;
 import android.graphics.Bitmap.Config;
 import android.opengl.GLUtils;
 
-//import junit.framework.Assert;
+import junit.framework.Assert;
 
 import java.util.HashMap;
 
@@ -145,7 +145,7 @@ public abstract class UploadedTexture extends BasicTexture {
     }
 
     private void freeBitmap() {
-        //Assert.assertTrue(mBitmap != null);
+        Assert.assertTrue(mBitmap != null);
         onFreeBitmap(mBitmap);
         mBitmap = null;
     }
@@ -229,7 +229,7 @@ public abstract class UploadedTexture extends BasicTexture {
                 int texWidth = getTextureWidth();
                 int texHeight = getTextureHeight();
 
-                //Assert.assertTrue(bWidth <= texWidth && bHeight <= texHeight);
+                Assert.assertTrue(bWidth <= texWidth && bHeight <= texHeight);
 
                 // Null pointer check here is to avoid monkey test failure.
                 if (canvas.getGLId() != null) {
-- 
2.17.1

