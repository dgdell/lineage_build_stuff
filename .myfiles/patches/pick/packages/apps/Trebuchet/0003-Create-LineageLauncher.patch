From 077e887c727a9a7248e4f717b7d911c9d172854c Mon Sep 17 00:00:00 2001
From: Joey <joey@lineageos.org>
Date: Tue, 31 Jul 2018 14:59:41 +0200
Subject: [PATCH 03/32] Create LineageLauncher

Extends Launcher, will hold our customizations

Change-Id: I4a398b624ac60edfed78e4db8e56eb767ffb753e
Signed-off-by: Joey <joey@lineageos.org>
---
 AndroidManifest.xml                           |   2 +-
 .../launcher3/lineage/LineageLauncher.java    |  25 ++++
 .../lineage/LineageLauncherCallbacks.java     | 138 ++++++++++++++++++
 3 files changed, 164 insertions(+), 1 deletion(-)
 create mode 100644 src/com/android/launcher3/lineage/LineageLauncher.java
 create mode 100644 src/com/android/launcher3/lineage/LineageLauncherCallbacks.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 85291a43e..e79a6814b 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -68,7 +68,7 @@
         attributes and intent filters the same
         -->
         <activity
-            android:name="com.android.launcher3.Launcher"
+            android:name="com.android.launcher3.lineage.LineageLauncher"
             android:launchMode="singleTask"
             android:clearTaskOnLaunch="true"
             android:stateNotNeeded="true"
diff --git a/src/com/android/launcher3/lineage/LineageLauncher.java b/src/com/android/launcher3/lineage/LineageLauncher.java
new file mode 100644
index 000000000..37150d8e5
--- /dev/null
+++ b/src/com/android/launcher3/lineage/LineageLauncher.java
@@ -0,0 +1,25 @@
+/*
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.launcher3.lineage;
+
+import com.android.launcher3.Launcher;
+
+public class LineageLauncher extends Launcher {
+
+    public LineageLauncher() {
+        setLauncherCallbacks(new LineageLauncherCallbacks(this));
+    }
+}
diff --git a/src/com/android/launcher3/lineage/LineageLauncherCallbacks.java b/src/com/android/launcher3/lineage/LineageLauncherCallbacks.java
new file mode 100644
index 000000000..d61aa3fe6
--- /dev/null
+++ b/src/com/android/launcher3/lineage/LineageLauncherCallbacks.java
@@ -0,0 +1,138 @@
+/*
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.launcher3.lineage;
+
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+
+import com.android.launcher3.AppInfo;
+import com.android.launcher3.LauncherCallbacks;
+
+import java.io.FileDescriptor;
+import java.io.PrintWriter;
+import java.util.ArrayList;
+
+public class LineageLauncherCallbacks implements LauncherCallbacks,
+        SharedPreferences.OnSharedPreferenceChangeListener {
+
+    private final LineageLauncher mLauncher;
+
+
+    public LineageLauncherCallbacks(LineageLauncher launcher) {
+        mLauncher = launcher;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+
+    }
+
+    @Override
+    public void onResume() {
+
+    }
+
+    @Override
+    public void onStart() {
+
+    }
+
+    @Override
+    public void onStop() {
+
+    }
+
+    @Override
+    public void onPause() {
+
+    }
+
+    @Override
+    public void onDestroy() {
+
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+
+    }
+
+    @Override
+    public void onAttachedToWindow() {
+
+    }
+
+    @Override
+    public void onDetachedFromWindow() {
+
+    }
+
+    @Override
+    public void dump(String prefix, FileDescriptor fd, PrintWriter w, String[] args) {
+
+    }
+
+    @Override
+    public void onHomeIntent(boolean internalStateHandled) {
+
+    }
+
+    @Override
+    public boolean handleBackPressed() {
+        return false;
+    }
+
+    @Override
+    public void onTrimMemory(int level) {
+
+    }
+
+    @Override
+    public void onLauncherProviderChange() {
+
+    }
+
+    @Override
+    public void bindAllApplications(ArrayList<AppInfo> apps) {
+
+    }
+
+    @Override
+    public boolean startSearch(String initialQuery, boolean selectInitialQuery, Bundle appSearchData) {
+        return false;
+    }
+
+    @Override
+    public boolean hasSettings() {
+        return false;
+    }
+
+    @Override
+    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+
+    }
+}
-- 
2.17.1

