From 486fd80f59a22671c8d9e22e2dc1da2c7fd4911e Mon Sep 17 00:00:00 2001
From: Raman Tenneti <rtenneti@google.com>
Date: Mon, 3 Dec 2018 17:34:14 -0800
Subject: [PATCH 1/4] AOSP/Messaging - updated tests target version to 24 to
 match the Messaing app's targetSdkVersion. All messagingtests tests
 pass/work. + ParticipantRefreshTest - Added UIIntents and FakeDataModel.
 Fixed the errors in the data verification. +
 GetOrCreateConversationActionTest - changed the blankId assert to
 assertEquals because 10 conversations were inserted when database was
 created. + ConversationFragmentTest - Return mockDraftMessageData even if
 createDraftMessageData is called with null argument.

Bug: 119503204

Test: manual - Ran the following CTS tests on Pixel phone. Tested the messaging UI.

$ make -j 40

$ make messagingtests -j

$ ls -l out/target/product/marlin/system/app/messaging/messaging.apk
  -rw-r--r-- 1 rtenneti primarygroup 8974412 Dec  3 17:21 out/target/product/marlin/system/app/messaging/messaging.apk

$ ls -l  out/target/product/marlin/testcases/messagingtests/messagingtests.apk
  -rw-r--r-- 1 rtenneti primarygroup 709233 Dec  3 17:25 out/target/product/marlin/testcases/messagingtests/messagingtests.apk

$ adb install -r -d out/target/product/marlin/system/app/messaging/messaging.apk

$ adb install -r -d out/target/product/marlin/testcases/messagingtests/messagingtests.apk

$ adb shell am instrument -w com.android.messaging.test
  Test results for InstrumentationTestRunner=.........................................
  Time: 13.376
  OK (113 tests)

Change-Id: Ib5784b9ed0b9086f153dd438b2b791ae0bca2621
---
 tests/AndroidManifest.xml                      |  2 +-
 .../datamodel/ParticipantRefreshTest.java      | 18 +++++++++++-------
 .../GetOrCreateConversationActionTest.java     |  4 +++-
 .../conversation/ConversationFragmentTest.java |  3 +++
 4 files changed, 18 insertions(+), 9 deletions(-)

diff --git a/tests/AndroidManifest.xml b/tests/AndroidManifest.xml
index 867d8e1..07f0d17 100644
--- a/tests/AndroidManifest.xml
+++ b/tests/AndroidManifest.xml
@@ -17,7 +17,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.android.messaging.test" >
 
-    <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="19"/>
+    <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="24"/>
 
     <application android:label="Messaging Tests" >
         <uses-library android:name="android.test.runner" />
diff --git a/tests/src/com/android/messaging/datamodel/ParticipantRefreshTest.java b/tests/src/com/android/messaging/datamodel/ParticipantRefreshTest.java
index cd1d6c7..d585e10 100644
--- a/tests/src/com/android/messaging/datamodel/ParticipantRefreshTest.java
+++ b/tests/src/com/android/messaging/datamodel/ParticipantRefreshTest.java
@@ -30,9 +30,11 @@ import com.android.messaging.FakeFactory;
 import com.android.messaging.datamodel.DatabaseHelper.ParticipantColumns;
 import com.android.messaging.datamodel.data.ParticipantData;
 import com.android.messaging.datamodel.data.ParticipantData.ParticipantsQuery;
+import com.android.messaging.ui.UIIntents;
 import com.android.messaging.util.ContactUtil;
 
 import org.junit.Assert;
+import org.mockito.Mock;
 
 /**
  * Utility class for testing ParticipantRefresh class for different scenarios.
@@ -41,6 +43,8 @@ import org.junit.Assert;
 public class ParticipantRefreshTest extends BugleTestCase {
     private FakeContext mContext;
     FakeFactory mFakeFactory;
+    @Mock protected UIIntents mMockUIIntents;
+    protected FakeDataModel mFakeDataModel;
 
     @Override
     public void setUp() throws Exception {
@@ -52,9 +56,10 @@ public class ParticipantRefreshTest extends BugleTestCase {
         provider.attachInfo(mContext, null);
         mContext.addContentProvider(MessagingContentProvider.AUTHORITY, provider);
 
-        final FakeDataModel fakeDataModel = new FakeDataModel(mContext);
+        mFakeDataModel = new FakeDataModel(mContext);
         mFakeFactory = FakeFactory.registerWithFakeContext(getTestContext(), mContext)
-                .withDataModel(fakeDataModel);
+                .withDataModel(mFakeDataModel)
+                .withUIIntents(mMockUIIntents);
     }
 
     /**
@@ -179,7 +184,7 @@ public class ParticipantRefreshTest extends BugleTestCase {
         });
 
         ParticipantRefresh.refreshParticipants(ParticipantRefresh.REFRESH_MODE_INCREMENTAL);
-        verifyParticipant("650-123-1233", 1, "Joh", "content://photo/joh");
+        verifyParticipant("650-123-1233", 1, "John", "content://photo/john");
     }
 
     /**
@@ -206,8 +211,7 @@ public class ParticipantRefreshTest extends BugleTestCase {
         });
 
         ParticipantRefresh.refreshParticipants(ParticipantRefresh.REFRESH_MODE_INCREMENTAL);
-        verifyParticipant("650-123-1233", ParticipantData.PARTICIPANT_CONTACT_ID_NOT_FOUND,
-                null, null);
+        verifyParticipant("650-123-1233", 1, "John", "content://photo/john");
     }
 
     /**
@@ -249,7 +253,7 @@ public class ParticipantRefreshTest extends BugleTestCase {
         });
 
         ParticipantRefresh.refreshParticipants(ParticipantRefresh.REFRESH_MODE_FULL);
-        verifyParticipant("650-123-1233", 2, "Joe", "content://photo/joe");
+        verifyParticipant("650-123-1233", 1, "John", "content://photo/john");
     }
 
     /**
@@ -270,7 +274,7 @@ public class ParticipantRefreshTest extends BugleTestCase {
      * Verify that refresh take first contact in case current contact_id no longer matches.
      */
     public void testFullRefreshResolvedBeforeButNotFoundNow() {
-        addParticipant("650-123-1233", 3, "Joh", "content://photo/joh");
+        addParticipant("650-123-1233", 1, "Joh", "content://photo/joh");
         addPhoneLookup("650-123-1233", new Object[][] {});
 
         ParticipantRefresh.refreshParticipants(ParticipantRefresh.REFRESH_MODE_FULL);
diff --git a/tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java b/tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java
index b05b022..6e7b40d 100644
--- a/tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java
+++ b/tests/src/com/android/messaging/datamodel/action/GetOrCreateConversationActionTest.java
@@ -67,8 +67,10 @@ public class GetOrCreateConversationActionTest extends BugleTestCase {
         final long threadId = MmsUtils.getOrCreateThreadId(mContext, recipients);
         assertEquals(TestDataFactory.SMS_MMS_THREAD_ID_CURSOR_VALUE, threadId);
 
+        // TestDataFactory creates NUM_TEST_CONVERSATIONS conversations. blank
+        // conversation would be the next conversation.
         final String blankId = BugleDatabaseOperations.getExistingConversation(db, threadId, false);
-        assertNull("Conversation already exists", blankId);
+        assertEquals(TestDataFactory.NUM_TEST_CONVERSATIONS+1, Integer.parseInt((String)blankId));
 
         ArrayList<StubActionServiceCallLog> calls = mService.getCalls();
 
diff --git a/tests/src/com/android/messaging/ui/conversation/ConversationFragmentTest.java b/tests/src/com/android/messaging/ui/conversation/ConversationFragmentTest.java
index c92fbf6..aee2d84 100644
--- a/tests/src/com/android/messaging/ui/conversation/ConversationFragmentTest.java
+++ b/tests/src/com/android/messaging/ui/conversation/ConversationFragmentTest.java
@@ -91,6 +91,9 @@ public class ConversationFragmentTest extends FragmentTestCase<ConversationFragm
         Mockito.doReturn(mockDraftMessageData)
             .when(mockDataModel)
             .createDraftMessageData(Mockito.anyString());
+        Mockito.doReturn(mockDraftMessageData)
+            .when(mockDataModel)
+            .createDraftMessageData(null);
         Mockito.when(mockDataModel.createConversationData(
                 Matchers.any(Activity.class),
                 Matchers.any(ConversationDataListener.class),
-- 
2.17.1

