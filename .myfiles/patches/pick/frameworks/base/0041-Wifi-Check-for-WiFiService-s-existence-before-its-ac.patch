From 1ab2f649ee36dc3d55b490553f2a96d80c551222 Mon Sep 17 00:00:00 2001
From: Abhishek Srivastava <cabsriv@codeaurora.org>
Date: Mon, 9 Jul 2018 19:05:28 +0530
Subject: [PATCH 41/47] Wifi: Check for WiFiService's existence before its
 access

SystemUI , currently accesses Wi-FiService's API's before it is initialized/
started.The current behaviour is to not start the Wi-Fi Service during the
FDE encryption ( Wi-FI Service is not considered as a coreService). This
behavior would lead to a fatal exception. Address this by adding a NULL check
before the access in all the components of systemUI.

Change-Id: I5fb753df8874b962622ef6921b9cbc518381203c
CRs-Fixed: 2276734
---
 .../src/com/android/settingslib/wifi/WifiTracker.java    | 2 +-
 .../systemui/statusbar/policy/HotspotControllerImpl.java | 7 ++++---
 .../systemui/statusbar/policy/WifiSignalController.java  | 9 ++++++---
 3 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java b/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
index d8f0886730d..0270796680c 100644
--- a/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
+++ b/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
@@ -207,7 +207,6 @@ public class WifiTracker implements LifecycleObserver, OnStart, OnStop, OnDestro
         mConnectivityManager = connectivityManager;
 
         // check if verbose logging developer option has been turned on or off
-        sVerboseLogging = (mWifiManager.getVerboseLoggingLevel() > 0);
 
         mFilter = filter;
 
@@ -729,6 +728,7 @@ public class WifiTracker implements LifecycleObserver, OnStart, OnStop, OnDestro
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
+            sVerboseLogging = (mWifiManager.getVerboseLoggingLevel() > 0);
 
             if (WifiManager.WIFI_STATE_CHANGED_ACTION.equals(action)) {
                 updateWifiState(
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/HotspotControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/HotspotControllerImpl.java
index 3c16329e6f1..bdc6a46083f 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/HotspotControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/HotspotControllerImpl.java
@@ -114,11 +114,12 @@ public class HotspotControllerImpl implements HotspotController, WifiManager.Sof
     private void updateWifiStateListeners(boolean shouldListen) {
         mWifiStateReceiver.setListening(shouldListen);
         if (shouldListen) {
-            mWifiManager.registerSoftApCallback(
+            if(mWifiManager != null)
+                mWifiManager.registerSoftApCallback(
                     this,
                     Dependency.get(Dependency.MAIN_HANDLER));
-        } else {
-            mWifiManager.unregisterSoftApCallback(this);
+            } else {
+                mWifiManager.unregisterSoftApCallback(this);
         }
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WifiSignalController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WifiSignalController.java
index e5e576d6b80..b9bccefc4e6 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WifiSignalController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WifiSignalController.java
@@ -59,9 +59,12 @@ public class WifiSignalController extends
         mHasMobileData = hasMobileData;
         Handler handler = new WifiHandler(Looper.getMainLooper());
         mWifiChannel = new AsyncChannel();
-        Messenger wifiMessenger = wifiManager.getWifiServiceMessenger();
-        if (wifiMessenger != null) {
-            mWifiChannel.connect(context, handler, wifiMessenger);
+        if(wifiManager != null){
+            Messenger wifiMessenger = wifiManager.getWifiServiceMessenger();
+
+            if (wifiMessenger != null) {
+                mWifiChannel.connect(context, handler, wifiMessenger);
+            }
         }
         // WiFi only has one state.
         mCurrentState.iconGroup = mLastState.iconGroup = new IconGroup(
-- 
2.17.1

