From 2944570a2e173bdef2a547ee81b45b28ee6c093c Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Sat, 5 Jan 2019 13:35:33 +0100
Subject: [PATCH 41/41] Revert^2 "PhoneWindowManager: Check if proposed
 rotation is in range"

* Some OEMs *coughs OnePlus* decided it was a great idea to add a fourth kind of rotation ( flat )
* Of course Android doesn't know how to handle it, thus crashing in some usecases

This reverts commit fc7020f6d4b6d85c67f25e72393ea9df1aae69a0.

Change-Id: I0cacd2b08da7e1460d0572207fde9b80c5e5f645
---
 .../core/java/com/android/server/policy/PhoneWindowManager.java | 2 +-
 .../com/android/server/policy/WindowOrientationListener.java    | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index f4e2b788d9c..71d49a903fa 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -8003,7 +8003,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
         synchronized (mLock) {
             int sensorRotation = mOrientationListener.getProposedRotation(); // may be -1
-            if (sensorRotation < 0) {
+            if (sensorRotation < 0 || sensorRotation > 3) {
                 sensorRotation = lastRotation;
             }
 
diff --git a/services/core/java/com/android/server/policy/WindowOrientationListener.java b/services/core/java/com/android/server/policy/WindowOrientationListener.java
index 9b4251def93..0e151d697c4 100644
--- a/services/core/java/com/android/server/policy/WindowOrientationListener.java
+++ b/services/core/java/com/android/server/policy/WindowOrientationListener.java
@@ -1084,7 +1084,7 @@ public abstract class WindowOrientationListener {
 
         public int evaluateRotationChangeLocked() {
             unscheduleRotationEvaluationLocked();
-            if (mDesiredRotation == mProposedRotation) {
+            if (mDesiredRotation == mProposedRotation || mDesiredRotation > 3) {
                 return -1;
             }
             final long now = SystemClock.elapsedRealtimeNanos();
-- 
2.17.1

