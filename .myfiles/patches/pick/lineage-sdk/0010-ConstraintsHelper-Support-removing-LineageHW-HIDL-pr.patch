From f1a1e9a637e41ba3031ed9e9cbae8b109f7e09bb Mon Sep 17 00:00:00 2001
From: Paul Keith <javelinanddart@gmail.com>
Date: Mon, 14 Jan 2019 17:46:47 +0100
Subject: [PATCH 10/11] ConstraintsHelper: Support removing LineageHW HIDL
 prefs

* Fix ordering of some imports while we're at it

Change-Id: Icdcebda0598378f1ed213b0f9a0e541aa5ed981a
---
 Android.bp                                    |  8 ++-
 .../preference/ConstraintsHelper.java         | 60 ++++++++++++++++---
 2 files changed, 58 insertions(+), 10 deletions(-)

diff --git a/Android.bp b/Android.bp
index 6fbd4da..f9246f4 100644
--- a/Android.bp
+++ b/Android.bp
@@ -1,5 +1,5 @@
 //
-// Copyright (C) 2018 The LineageOS Project
+// Copyright (C) 2018-2019 The LineageOS Project
 //
 // Licensed under the Apache License, Version 2.0 (the "License");
 // you may not use this file except in compliance with the License.
@@ -61,6 +61,10 @@ lineage_sdk_LOCAL_JAVA_LIBRARIES = [
     "android-support-v14-preference",
 ]
 
+lineage_sdk_LOCAL_STATIC_JAVA_LIBRARIES = [
+    "vendor.lineage.touch-V1.0-java",
+]
+
 // READ ME: ########################################################
 //
 // When updating this list of aidl files, consider if that aidl is
@@ -101,7 +105,7 @@ java_library {
 java_library_static {
     name: "org.lineageos.platform.internal",
     required: ["services"],
-    static_libs: ["telephony-ext"],
+    static_libs: ["telephony-ext"] + lineage_sdk_LOCAL_STATIC_JAVA_LIBRARIES,
     libs: lineage_sdk_LOCAL_JAVA_LIBRARIES,
 
     srcs: [
diff --git a/sdk/src/java/lineageos/preference/ConstraintsHelper.java b/sdk/src/java/lineageos/preference/ConstraintsHelper.java
index cbdfbd3..590cd3f 100644
--- a/sdk/src/java/lineageos/preference/ConstraintsHelper.java
+++ b/sdk/src/java/lineageos/preference/ConstraintsHelper.java
@@ -22,6 +22,7 @@ import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
 import android.content.res.TypedArray;
+import android.os.RemoteException;
 import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.support.v7.preference.Preference;
@@ -35,13 +36,18 @@ import android.util.Log;
 import android.util.TypedValue;
 import android.widget.TextView;
 
-import java.util.List;
-import java.util.Objects;
-import java.util.Set;
-
 import lineageos.hardware.LineageHardwareManager;
 import lineageos.platform.R;
 
+import vendor.lineage.touch.V1_0.IGloveMode;
+import vendor.lineage.touch.V1_0.IKeyDisabler;
+import vendor.lineage.touch.V1_0.IStylusMode;
+import vendor.lineage.touch.V1_0.ITouchscreenGesture;
+
+import java.util.List;
+import java.util.NoSuchElementException;
+import java.util.Objects;
+import java.util.Set;
 
 /**
  * Helpers for checking if a device supports various features.
@@ -178,10 +184,48 @@ public class ConstraintsHelper {
                 if (negated) {
                     rFeature = rFeature.substring(1);
                 }
-                boolean available = rFeature.startsWith("lineagehardware:") ?
-                        LineageHardwareManager.getInstance(mContext).isSupported(
-                                rFeature.substring("lineagehardware:".length())) :
-                        hasSystemFeature(mContext, rFeature);
+                boolean available;
+                if (rFeature.startsWith("lineagehardware:")) {
+                    switch(rFeature.substring("lineagehardware:".length())) {
+                        case "FEATURE_HIGH_TOUCH_SENSITIVITY":
+                            try {
+                                IGloveMode gloveMode = IGloveMode.getService(true);
+                                available = true;
+                            } catch (NoSuchElementException | RemoteException e) {
+                                available = false;
+                            }
+                            break;
+                        case "FEATURE_KEY_DISABLE":
+                            try {
+                                IKeyDisabler keyDisabler = IKeyDisabler.getService(true);
+                                available = true;
+                            } catch (NoSuchElementException | RemoteException e) {
+                                available = false;
+                            }
+                            break;
+                        case "FEATURE_TOUCH_HOVERING":
+                            try {
+                                IStylusMode stylusMode = IStylusMode.getService(true);
+                                available = true;
+                            } catch (NoSuchElementException | RemoteException e) {
+                                available = false;
+                            }
+                            break;
+                        case "FEATURE_TOUCHSCREEN_GESTURES":
+                            try {
+                                ITouchscreenGesture gesture = ITouchscreenGesture.getService(true);
+                                available = true;
+                            } catch (NoSuchElementException | RemoteException e) {
+                                available = false;
+                            }
+                            break;
+                        default:
+                            available = LineageHardwareManager.getInstance(mContext).isSupported(
+                                    rFeature.substring("lineagehardware:".length()));
+                    }
+                } else {
+                    available = hasSystemFeature(mContext, rFeature);
+                }
                 if (available == negated) {
                     return false;
                 }
-- 
2.17.1

