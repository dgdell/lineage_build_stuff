From 1cb6af548df2e458fee2d5521a0ba2793f060bbb Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Tue, 6 Nov 2018 15:31:27 +0100
Subject: [PATCH] [SQUSH][DNM] Merge tag 'android-9.0.0_r16' into lineage-16.0

commit 926f647663d589f7b16887ecd10162b64736e521
Author: Shawn Willden <swillden@google.com>
Date:   Wed Jul 11 15:13:20 2018 -0600

    Use TEE keymaster for ID attestation.

    Since it was introduced, ID attestation has always been performed by
    the TEE keymaster, because it was the only one.  When StrongBox
    support was added, it became necessary to select which of the two
    keymaster instances to use.  There is no API for the caller to be able
    to choose which one to use in this case.  The decision was made to use
    the strongest keymaster instance available, favoring StrongBox over
    TEE if available.  However, StrongBox instances are much slower, and
    we should not impose this additional latency on clients who did not
    request it.  Also, the decision to use StrongBox doesn't fit the goals
    of the OEM Unlock protocol, which relies on ID attestation.

    This CL changes ID attestation so that it always uses the TEE
    keymaster instance, ignoring StrongBox if available.  In the future,
    we'll provide a way for the client to select StrongBox if they want
    it.

    Bug: 110834325
    Test: Keystore CTS tests
    Change-Id: Idec1d83e42a2d283b0521ff4699ab62b84d419ec

commit e989ba8c16f81258166dbf9e153675c447661e77
Author: Janis Danisevskis <jdanis@google.com>
Date:   Thu Jun 21 17:53:15 2018 -0700

    Fix operation pruning.

    The wrong result code was evaluated in order to diagnose
    TOO_MANY_OPERATIONS.

    This patch uses the correct return code.

    Bug: 110565928
    Test: Manually tested with KeymasterTests.apk
    Change-Id: I57ea735b306c269e1e2fbd9bd0fd9805eb3d0846

Change-Id: I0cc91ca5cd45dc2cb3533adc39d8042efc9999a9
---
 keystore/key_store_service.cpp | 31 ++++++++++++++++++++-----------
 1 file changed, 20 insertions(+), 11 deletions(-)

diff --git a/keystore/key_store_service.cpp b/keystore/key_store_service.cpp
index 81bdfe0..e35248f 100644
--- a/keystore/key_store_service.cpp
+++ b/keystore/key_store_service.cpp
@@ -1324,23 +1324,34 @@ Status KeyStoreService::begin(const sp<IBinder>& appToken, const String16& name,
         result->outParams = outParams;
     };
 
-    ErrorCode rc =
+    KeyStoreServiceReturnCode rc =
         KS_HANDLE_HIDL_ERROR(dev->begin(keyPurpose, key, opParams.hidl_data(), authToken, hidlCb));
-    if (rc != ErrorCode::OK) {
-        ALOGW("Got error %d from begin()", rc);
+    if (!rc.isOk()) {
+        LOG(ERROR) << "Got error " << rc << " from begin()";
+        result->resultCode = ResponseCode::SYSTEM_ERROR;
+        return Status::ok();
     }
 
+    rc = result->resultCode;
+
     // If there are too many operations abort the oldest operation that was
     // started as pruneable and try again.
+    LOG(INFO) << rc << " " << mOperationMap.hasPruneableOperation();
     while (rc == ErrorCode::TOO_MANY_OPERATIONS && mOperationMap.hasPruneableOperation()) {
-        ALOGW("Ran out of operation handles");
+        LOG(INFO) << "Ran out of operation handles";
         if (!pruneOperation()) {
             break;
         }
         rc = KS_HANDLE_HIDL_ERROR(
             dev->begin(keyPurpose, key, opParams.hidl_data(), authToken, hidlCb));
+        if (!rc.isOk()) {
+            LOG(ERROR) << "Got error " << rc << " from begin()";
+            result->resultCode = ResponseCode::SYSTEM_ERROR;
+            return Status::ok();
+        }
+        rc = result->resultCode;
     }
-    if (rc != ErrorCode::OK) {
+    if (!rc.isOk()) {
         result->resultCode = rc;
         return Status::ok();
     }
@@ -1359,8 +1370,8 @@ Status KeyStoreService::begin(const sp<IBinder>& appToken, const String16& name,
                                                                 verificationToken = token;
                                                             }));
 
-        if (rc != ErrorCode::OK) result->resultCode = rc;
-        if (result->resultCode != ErrorCode::OK) return Status::ok();
+        if (!rc.isOk()) result->resultCode = rc;
+        if (!result->resultCode.isOk()) return Status::ok();
     }
 
     // Note: The operation map takes possession of the contents of "characteristics".
@@ -1697,11 +1708,9 @@ KeyStoreService::attestDeviceIds(const KeymasterArguments& params,
     }
 
     // Generate temporary key.
-    sp<Keymaster> dev;
-    SecurityLevel securityLevel;
-    std::tie(dev, securityLevel) = mKeyStore->getMostSecureDevice();
+    sp<Keymaster> dev = mKeyStore->getDevice(SecurityLevel::TRUSTED_ENVIRONMENT);
 
-    if (securityLevel == SecurityLevel::SOFTWARE) {
+    if (!dev) {
         *aidl_return = static_cast<int32_t>(ResponseCode::SYSTEM_ERROR);
         return Status::ok();
     }
-- 
2.17.1

