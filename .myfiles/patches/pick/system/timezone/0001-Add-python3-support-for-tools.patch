From c4e651a2af70eb51f37c5810f6f401d58555d296 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Fri, 4 Jan 2019 17:09:55 +0100
Subject: [PATCH] Add python3 support for tools

Test: ./system/timezone/update-tzdata.py
Test: ./system/timezone/download-iana-data.py
Change-Id: I10a1062149c0484a4345cc4c389df5dff6112985
---
 distro/tools/create-distro.py |  4 +++-
 download-iana-data.py         | 30 ++++++++++++++-------------
 tzdatautil.py                 |  4 +++-
 update-tzdata.py              | 38 ++++++++++++++++++-----------------
 4 files changed, 42 insertions(+), 34 deletions(-)

diff --git a/distro/tools/create-distro.py b/distro/tools/create-distro.py
index 90899fe..3d248d8 100755
--- a/distro/tools/create-distro.py
+++ b/distro/tools/create-distro.py
@@ -16,6 +16,8 @@
 
 """Generates a time zone distro file"""
 
+from __future__ import print_function
+
 import argparse
 import os
 import shutil
@@ -99,7 +101,7 @@ def main():
       tzlookup_file=tzlookup_file,
       output_dir=output_dir)
 
-  print 'Distro files created in %s' % output_dir
+  print('Distro files created in %s' % output_dir)
   sys.exit(0)
 
 
diff --git a/download-iana-data.py b/download-iana-data.py
index 6b9865b..9cd5b74 100755
--- a/download-iana-data.py
+++ b/download-iana-data.py
@@ -16,6 +16,8 @@
 
 """Downloads the latest IANA timezone data."""
 
+from __future__ import print_function
+
 import ftplib
 import os
 import shutil
@@ -35,22 +37,22 @@ def FtpRetrieveFile(ftp, filename):
 
 def CheckSignature(data_filename, signature_filename):
   """Checks the signature of a file."""
-  print 'Verifying signature...'
+  print('Verifying signature...')
   try:
     subprocess.check_call(['gpg', '--trusted-key=ED97E90E62AA7E34', '--verify',
                           signature_filename, data_filename])
   except subprocess.CalledProcessError as err:
-    print 'Unable to verify signature'
-    print '\n\n******'
-    print 'If this fails for you, you probably need to import Paul Eggert''s public key:'
-    print '  gpg --receive-keys ED97E90E62AA7E34'
-    print '******\n\n'
+    print('Unable to verify signature')
+    print('\n\n******')
+    print('If this fails for you, you probably need to import Paul Eggert''s public key:')
+    print('  gpg --receive-keys ED97E90E62AA7E34')
+    print('******\n\n')
     raise
 
 # Run with no arguments from any directory, with no special setup required.
 # See http://www.iana.org/time-zones/ for more about the source of this data.
 def main():
-  print 'Looking for new IANA tzdata...'
+  print('Looking for new IANA tzdata...')
 
   iana_tar_filenames = []
 
@@ -59,7 +61,7 @@ def main():
   ftp.cwd('tz/releases')
   for filename in ftp.nlst():
     if "/" in filename:
-      print "FTP server returned bogus file name"
+      print("FTP server returned bogus file name")
       sys.exit(1)
 
     if filename.startswith('tzdata20') and filename.endswith('.tar.gz'):
@@ -67,7 +69,7 @@ def main():
   iana_tar_filenames.sort(reverse=True)
 
   if len(iana_tar_filenames) == 0:
-    print 'No tzdata files found'
+    print('No tzdata files found')
     sys.exit(1)
 
   latest_iana_tar_filename = iana_tar_filenames[0]
@@ -77,17 +79,17 @@ def main():
   if local_iana_tar_file:
     local_iana_tar_filename = os.path.basename(local_iana_tar_file)
     if latest_iana_tar_filename <= local_iana_tar_filename:
-      print 'Available data %s is older or the same as current data %s' % (latest_iana_tar_filename, local_iana_tar_filename)
+      print('Available data %s is older or the same as current data %s' % (latest_iana_tar_filename, local_iana_tar_filename))
       sys.exit(0)
 
-  print 'Found new tzdata: %s' % latest_iana_tar_filename
+  print('Found new tzdata: %s' % latest_iana_tar_filename)
   i18nutil.SwitchToNewTemporaryDirectory()
 
-  print 'Downloading data (%s)...' % latest_iana_tar_filename
+  print('Downloading data (%s)...' % latest_iana_tar_filename)
   FtpRetrieveFile(ftp, latest_iana_tar_filename)
 
   signature_filename = '%s.asc' % latest_iana_tar_filename
-  print 'Downloading signature (%s)...' % signature_filename
+  print('Downloading signature (%s)...' % signature_filename)
   FtpRetrieveFile(ftp, signature_filename)
 
   CheckSignature(latest_iana_tar_filename, signature_filename)
@@ -105,7 +107,7 @@ def main():
   if os.path.exists(local_signature_file):
     os.remove(local_signature_file)
 
-  print 'Look in %s for new IANA data files' % new_local_iana_tar_file
+  print('Look in %s for new IANA data files' % new_local_iana_tar_file)
   sys.exit(0)
 
 
diff --git a/tzdatautil.py b/tzdatautil.py
index 839a9f4..b7f81e3 100644
--- a/tzdatautil.py
+++ b/tzdatautil.py
@@ -12,6 +12,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+from __future__ import print_function
+
 import os
 import sys
 
@@ -28,6 +30,6 @@ def GetIanaTarFile(dir_name, file_type):
   elif len(matching_files) == 1:
     return '%s/%s' % (dir_name, matching_files[0])
   else:
-    print 'Multiple tz%s files found unexpectedly %s' % (file_type, matching_files)
+    print('Multiple tz%s files found unexpectedly %s' % (file_type, matching_files))
     sys.exit(1)
 
diff --git a/update-tzdata.py b/update-tzdata.py
index 20986c7..66c139d 100755
--- a/update-tzdata.py
+++ b/update-tzdata.py
@@ -16,6 +16,8 @@
 
 """Generates the timezone data files used by Android."""
 
+from __future__ import print_function
+
 import glob
 import os
 import re
@@ -58,7 +60,7 @@ def GenerateZicInputFile(extracted_iana_data_dir):
 
   zic_input_file = '%s/%s' % (extracted_iana_data_dir, zic_input_file_name)
   if not os.path.exists(zic_input_file):
-    print 'Could not find %s' % zic_input_file
+    print('Could not find %s' % zic_input_file)
     sys.exit(1)
   return zic_input_file
 
@@ -108,7 +110,7 @@ def GetIanaVersion(iana_tar_file):
 
 
 def ExtractTarFile(tar_file, dir):
-  print 'Extracting %s...' % tar_file
+  print('Extracting %s...' % tar_file)
   if not os.path.exists(dir):
     os.mkdir(dir)
   tar = tarfile.open(tar_file, 'r')
@@ -121,31 +123,31 @@ def BuildZic(iana_tools_dir):
   iana_zic_data_tar_file = tzdatautil.GetIanaTarFile(iana_tools_dir, 'data')
   iana_zic_data_version = GetIanaVersion(iana_zic_data_tar_file)
 
-  print 'Found IANA zic release %s/%s in %s/%s ...' \
-      % (iana_zic_code_version, iana_zic_data_version, iana_zic_code_tar_file, iana_zic_data_tar_file)
+  print('Found IANA zic release %s/%s in %s/%s ...' \
+      % (iana_zic_code_version, iana_zic_data_version, iana_zic_code_tar_file, iana_zic_data_tar_file))
 
   zic_build_dir = '%s/zic' % tmp_dir
   ExtractTarFile(iana_zic_code_tar_file, zic_build_dir)
   ExtractTarFile(iana_zic_data_tar_file, zic_build_dir)
 
   # zic
-  print 'Building zic...'
+  print('Building zic...')
   # VERSION_DEPS= is to stop the build process looking for files that might not
   # be present across different versions.
   subprocess.check_call(['make', '-C', zic_build_dir, 'zic'])
 
   zic_binary_file = '%s/zic' % zic_build_dir
   if not os.path.exists(zic_binary_file):
-    print 'Could not find %s' % zic_binary_file
+    print('Could not find %s' % zic_binary_file)
     sys.exit(1)
   return zic_binary_file
 
 
 def BuildTzdata(zic_binary_file, extracted_iana_data_dir, iana_data_version):
-  print 'Generating zic input file...'
+  print('Generating zic input file...')
   zic_input_file = GenerateZicInputFile(extracted_iana_data_dir)
 
-  print 'Calling zic...'
+  print('Calling zic...')
   zic_output_dir = '%s/data' % tmp_dir
   os.mkdir(zic_output_dir)
   zic_cmd = [zic_binary_file, '-d', zic_output_dir, zic_input_file]
@@ -154,7 +156,7 @@ def BuildTzdata(zic_binary_file, extracted_iana_data_dir, iana_data_version):
   # ZoneCompactor
   zone_compactor_setup_file = WriteSetupFile(zic_input_file)
 
-  print 'Calling ZoneCompactor to update tzdata to %s...' % iana_data_version
+  print('Calling ZoneCompactor to update tzdata to %s...' % iana_data_version)
   subprocess.check_call(['make', '-C', android_build_top, '-j30', 'zone_compactor'])
 
   # Create args for ZoneCompactor
@@ -162,7 +164,7 @@ def BuildTzdata(zic_binary_file, extracted_iana_data_dir, iana_data_version):
   jar_file = '%s/framework/zone_compactor.jar' % android_host_out
   header_string = 'tzdata%s' % iana_data_version
 
-  print 'Executing ZoneCompactor...'
+  print('Executing ZoneCompactor...')
   iana_output_data_dir = '%s/iana' % timezone_output_data_dir
   subprocess.check_call(['java', '-jar', jar_file,
                          zone_compactor_setup_file, zic_output_dir, zone_tab_file,
@@ -173,7 +175,7 @@ def BuildTzlookup(iana_data_dir):
   countryzones_source_file = '%s/android/countryzones.txt' % timezone_input_data_dir
   tzlookup_dest_file = '%s/android/tzlookup.xml' % timezone_output_data_dir
 
-  print 'Calling TzLookupGenerator to create tzlookup.xml...'
+  print('Calling TzLookupGenerator to create tzlookup.xml...')
   subprocess.check_call(['make', '-C', android_build_top, '-j30', 'tzlookup_generator'])
 
   jar_file = '%s/framework/tzlookup_generator.jar' % android_host_out
@@ -196,7 +198,7 @@ def CreateDistroFiles(iana_data_version, output_dir):
   existing_distro_metadata_files = glob.glob(distro_file_metadata_pattern)
   existing_files = existing_distro_files + existing_distro_metadata_files
 
-  print 'Removing %s' % existing_files
+  print('Removing %s' % existing_files)
   for existing_file in existing_files:
     os.remove(existing_file)
 
@@ -216,17 +218,17 @@ def UpdateTestFiles():
 # Run with no arguments from any directory, with no special setup required.
 # See http://www.iana.org/time-zones/ for more about the source of this data.
 def main():
-  print 'Source data file structure: %s' % timezone_input_data_dir
-  print 'Source tools file structure: %s' % timezone_input_tools_dir
-  print 'Output data file structure: %s' % timezone_output_data_dir
+  print('Source data file structure: %s' % timezone_input_data_dir)
+  print('Source tools file structure: %s' % timezone_input_tools_dir)
+  print('Output data file structure: %s' % timezone_output_data_dir)
 
   iana_input_data_dir = '%s/iana' % timezone_input_data_dir
   iana_data_tar_file = tzdatautil.GetIanaTarFile(iana_input_data_dir, 'data')
   iana_data_version = GetIanaVersion(iana_data_tar_file)
-  print 'IANA time zone data release %s in %s ...' % (iana_data_version, iana_data_tar_file)
+  print('IANA time zone data release %s in %s ...' % (iana_data_version, iana_data_tar_file))
 
   icu_dir = icuutil.icuDir()
-  print 'Found icu in %s ...' % icu_dir
+  print('Found icu in %s ...' % icu_dir)
 
   BuildIcuData(iana_data_tar_file)
 
@@ -245,7 +247,7 @@ def main():
   # Update test versions of distro files too.
   UpdateTestFiles()
 
-  print 'Look in %s and %s for new files' % (timezone_output_data_dir, icu_dir)
+  print('Look in %s and %s for new files' % (timezone_output_data_dir, icu_dir))
   sys.exit(0)
 
 
-- 
2.17.1

