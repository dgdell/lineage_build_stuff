From b7643509dc36204087fd9c9f60f28f2528792bc7 Mon Sep 17 00:00:00 2001
From: Luca Stefani <luca.stefani.ge1@gmail.com>
Date: Tue, 13 Nov 2018 22:45:37 +0100
Subject: [PATCH 2/4] pie-gsi tracking

commit a48277e7b9475636bb95d811e1a5fa37a96414ea
Merge: 75133bb cdaadb4
Author: Treehugger Robot <treehugger-gerrit@google.com>
Date:   Fri Nov 2 03:04:29 2018 +0000

    Merge "Ensure icmp redirects are always ignored" into pie-gsi

commit cdaadb47ab49b8af0882ecceca28803cf4a9c050
Author: Hugo Benichi <hugobenichi@google.com>
Date:   Tue May 22 08:48:40 2018 +0900

    Ensure icmp redirects are always ignored

    A side effect of disabling the ip forwarding sysconf on all
    interfaces is to re-enable the ICMP redirects sysconf on all
    interfaces.

    This patch ensures that ICMP redirects stays turned off when disabling
    ip forwarding in TetherController.

    Accepting ICMP redirects can allow an attacker to inject malicious
    routes into a host and it is therefore desirable to always reject them.

    Bug: 62387578
    Bug: 77541904
    Test: manual
    Change-Id: I1f9a950eebf2f65d047f33145feee40d3ab34bd9
    (cherry picked from commit c4b3a0c6e3d9c7cc3f26b0e721486d2b5111bdc4)

commit 75133bb1beb062c56b6c8fff819c42bf3e9bbc74
Merge: 412a7e5 cf50ede
Author: Bill Rassieur <rassb@google.com>
Date:   Tue Oct 16 21:22:01 2018 -0700

    Merge PPR2.181005.003 from pi-release-2 into pi-platform-release.
    am: cf50ede5c3

    Change-Id: I3a4ba2df23cc3d8c281ca0bbceae02d5805733cf

commit cf50ede5c3043d33fdc9466cc2a029a6b539998a
Merge: 412a7e5 3c01c6b
Author: Bill Rassieur <rassb@google.com>
Date:   Wed Oct 10 17:29:22 2018 +0000

    Merge PPR2.181005.003 from pi-release-2 into pi-platform-release.

    Change-Id: I5cb4703b4ba0bca1db085cb7292bbac9cfe29710
    BUG: 117431430

Change-Id: Ie3e399dfad62cfae98fbaab4449a59e373e980d7
---
 server/InterfaceController.cpp | 16 ++++++++++++++--
 server/InterfaceController.h   |  1 +
 server/TetherController.cpp    | 10 +++++++++-
 3 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/server/InterfaceController.cpp b/server/InterfaceController.cpp
index c0210d7..2f2b314 100644
--- a/server/InterfaceController.cpp
+++ b/server/InterfaceController.cpp
@@ -54,10 +54,10 @@ using android::netdutils::toString;
 
 namespace {
 
+const char ipv4_proc_path[] = "/proc/sys/net/ipv4/conf";
 const char ipv6_proc_path[] = "/proc/sys/net/ipv6/conf";
 
 const char ipv4_neigh_conf_dir[] = "/proc/sys/net/ipv4/neigh";
-
 const char ipv6_neigh_conf_dir[] = "/proc/sys/net/ipv6/neigh";
 
 const char proc_net_path[] = "/proc/sys/net";
@@ -245,8 +245,11 @@ void InterfaceController::initializeAll() {
     setBaseReachableTimeMs(15 * 1000);
 
     // When sending traffic via a given interface use only addresses configured
-       // on that interface as possible source addresses.
+    // on that interface as possible source addresses.
     setIPv6UseOutgoingInterfaceAddrsOnly("1");
+
+    // Ensure that ICMP redirects are rejected globally on all interfaces.
+    disableIcmpRedirects();
 }
 
 int InterfaceController::setEnableIPv6(const char *interface, const int on) {
@@ -358,6 +361,15 @@ int InterfaceController::delAddress(const char *interface,
     return ifc_del_address(interface, addrString, prefixLength);
 }
 
+int InterfaceController::disableIcmpRedirects() {
+    int rv = 0;
+    rv |= writeValueToPath(ipv4_proc_path, "all", "accept_redirects", "0");
+    rv |= writeValueToPath(ipv6_proc_path, "all", "accept_redirects", "0");
+    setOnAllInterfaces(ipv4_proc_path, "accept_redirects", "0");
+    setOnAllInterfaces(ipv6_proc_path, "accept_redirects", "0");
+    return rv;
+}
+
 int InterfaceController::getParameter(
         const char *family, const char *which, const char *interface, const char *parameter,
         std::string *value) {
diff --git a/server/InterfaceController.h b/server/InterfaceController.h
index cd6f0eb..f97547f 100644
--- a/server/InterfaceController.h
+++ b/server/InterfaceController.h
@@ -43,6 +43,7 @@ public:
     static int setMtu(const char *interface, const char *mtu);
     static int addAddress(const char *interface, const char *addrString, int prefixLength);
     static int delAddress(const char *interface, const char *addrString, int prefixLength);
+    static int disableIcmpRedirects();
 
     // Read and write values in files of the form:
     //     /proc/sys/net/<family>/<which>/<interface>/<parameter>
diff --git a/server/TetherController.cpp b/server/TetherController.cpp
index 06eaf94..bec8b10 100644
--- a/server/TetherController.cpp
+++ b/server/TetherController.cpp
@@ -143,10 +143,18 @@ TetherController::~TetherController() {
 
 bool TetherController::setIpFwdEnabled() {
     bool success = true;
-    const char* value = mForwardingRequests.empty() ? "0" : "1";
+    bool disable = mForwardingRequests.empty();
+    const char* value = disable ? "0" : "1";
     ALOGD("Setting IP forward enable = %s", value);
     success &= writeToFile(IPV4_FORWARDING_PROC_FILE, value);
     success &= writeToFile(IPV6_FORWARDING_PROC_FILE, value);
+    if (disable) {
+        // Turning off the forwarding sysconf in the kernel has the side effect
+        // of turning on ICMP redirect, which is a security hazard.
+        // Turn ICMP redirect back off immediately.
+        int rv = InterfaceController::disableIcmpRedirects();
+        success &= (rv == 0);
+    }
     return success;
 }
 
-- 
2.17.1

