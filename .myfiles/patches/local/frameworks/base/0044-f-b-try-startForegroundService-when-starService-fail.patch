From 690bec74547f76232a48e91aa2535fb0d6b120dc Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Thu, 13 Dec 2018 19:18:29 +0800
Subject: [PATCH 44/45] f/b: try startForegroundService when starService
 failed.

some old app such as samsung health auto startService faild, try
startForegroundService again to fix that.

Change-Id: I60888062bd2613e99789fdcc11f9e9cd20d4ec41
---
 core/java/android/app/ContextImpl.java | 31 ++++++++++++++++++++++++--
 1 file changed, 29 insertions(+), 2 deletions(-)

diff --git a/core/java/android/app/ContextImpl.java b/core/java/android/app/ContextImpl.java
index 95117862a8d..4b590a86976 100644
--- a/core/java/android/app/ContextImpl.java
+++ b/core/java/android/app/ContextImpl.java
@@ -1573,8 +1573,35 @@ class ContextImpl extends Context {
                             "Unable to start service " + service
                             + ": " + cn.getClassName());
                 } else if (cn.getPackageName().equals("?")) {
-                    throw new IllegalStateException(
-                            "Not allowed to start service " + service + ": " + cn.getClassName());
+                    if (!requireForeground){
+                        try {
+                            //validateServiceIntent(service);
+                            //service.prepareToLeaveProcess(this);
+                            cn = ActivityManager.getService().startService(
+                            mMainThread.getApplicationThread(), service, service.resolveTypeIfNeeded(
+                                    getContentResolver()), true,
+                                    getOpPackageName(), user.getIdentifier());
+                            if (cn != null) {
+                                if (cn.getPackageName().equals("!")) {
+                                    throw new SecurityException(
+                                            "Not allowed to start service " + service
+                                            + " without permission " + cn.getClassName());
+                                } else if (cn.getPackageName().equals("!!")) {
+                                    throw new SecurityException(
+                                            "Unable to start service " + service
+                                            + ": " + cn.getClassName());
+                                } else if (cn.getPackageName().equals("?")) {
+                                    throw new IllegalStateException(
+                                            "Not allowed to start service " + service + ": " + cn.getClassName());
+                                }
+                             }
+                        }catch (RemoteException re) {
+                               throw re.rethrowFromSystemServer();
+                        }
+                    } else {
+                        throw new IllegalStateException(
+                                "Not allowed to start service " + service + ": " + cn.getClassName());
+                    }
                 }
             }
             return cn;
-- 
2.17.1

