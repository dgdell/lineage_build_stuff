From 63f275651b92234dccda49930d994517f2d68027 Mon Sep 17 00:00:00 2001
From: nx111 <NX111.AimH@gmail.com>
Date: Sat, 27 Oct 2018 15:56:53 +0800
Subject: [PATCH 13/13] telephony: when vendor telephony plugin no exitst,skip
 it.

Change-Id: I09088b6d909fae735d1a545c1a99ff218c113cee
---
 .../telephony/TelephonyComponentFactory.java        | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/src/java/com/android/internal/telephony/TelephonyComponentFactory.java b/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
index bda132272..08089f7c9 100644
--- a/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
+++ b/src/java/com/android/internal/telephony/TelephonyComponentFactory.java
@@ -41,6 +41,7 @@ import dalvik.system.PathClassLoader;
 import java.io.File;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Method;
+import java.nio.file.*;
 
 /**
  * This class has one-line methods to instantiate objects only. The purpose is to make code
@@ -56,15 +57,19 @@ public class TelephonyComponentFactory {
             String fullClsName = "com.qualcomm.qti.internal.telephony.QtiTelephonyComponentFactory";
             String libPath = "/system/framework/qti-telephony-common.jar";
 
-            PathClassLoader classLoader = new PathClassLoader(libPath,
-                    ClassLoader.getSystemClassLoader());
-            Rlog.d(LOG_TAG, "classLoader = " + classLoader);
+            Path path = Paths.get(libPath);
 
-            if (fullClsName == null || fullClsName.length() == 0) {
+            if (fullClsName == null || fullClsName.length() == 0 || Files.notExists(path)) {
                 Rlog.d(LOG_TAG, "no customized TelephonyPlugin available, fallback to default");
                 fullClsName = "com.android.internal.telephony.TelephonyComponentFactory";
+                sInstance = new TelephonyComponentFactory();
+                return sInstance;
             }
 
+            PathClassLoader classLoader = new PathClassLoader(libPath,
+                  ClassLoader.getSystemClassLoader());
+            Rlog.d(LOG_TAG, "classLoader = " + classLoader);
+
             Class<?> cls = null;
             try {
                 cls = Class.forName(fullClsName, false, classLoader);
-- 
2.17.1

